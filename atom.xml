<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mhy-blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-06-23T15:16:04.343Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>spring注解笔记</title>
    <link href="http://example.com/2022/06/23/spring%E6%B3%A8%E8%A7%A3%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2022/06/23/spring%E6%B3%A8%E8%A7%A3%E7%AC%94%E8%AE%B0/</id>
    <published>2022-06-23T05:09:16.000Z</published>
    <updated>2022-06-23T15:16:04.343Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Responsebody注解作用"><a href="#Responsebody注解作用" class="headerlink" title="@Responsebody注解作用"></a>@Responsebody注解作用</h2><ul><li><p>@responseBody注解的作用是<strong>将controller的方法返回的对象通过适当的转换器转换为指定的格式之后，写入到response对象的body区，通常用来返回JSON数据或者是XML数据</strong>，需要注意的呢，在使用此注解之后不会再走视图处理器，而是直接将数据写入到输入流中，他的效果等同于通过response对象输出指定格式的数据。</p></li><li><p>&#96;&#96;&#96;java<br>@RequestMapping(“&#x2F;login”)<br>@ResponseBody<br>public User login(User user){<br>　　return user;<br>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- User字段：userName pwd</span><br><span class="line">  那么在前台接收到的数据为：’&#123;“userName”:“xxx”,“pwd”:“xxx”&#125;’</span><br><span class="line"></span><br><span class="line">- **效果等同于如下代码**：</span><br><span class="line"></span><br><span class="line">  ```java</span><br><span class="line">  @RequestMapping(&quot;/login&quot;)</span><br><span class="line">  public void login(User user, HttpServletResponse response)&#123;</span><br><span class="line">  response.getWriter.write(JSONObject.fromObject(user).toString());</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Controller"><a href="#Controller" class="headerlink" title="@Controller"></a>@Controller</h2><p>用于标注控制层服务。</p><h2 id="Repository"><a href="#Repository" class="headerlink" title="@Repository"></a>@Repository</h2><p>用于标注数据访问层，也可以说用于标注数据访问组件，即DAO组件。</p><h2 id="RequestMapping"><a href="#RequestMapping" class="headerlink" title="@RequestMapping"></a>@RequestMapping</h2><ul><li><p>名称：@RequestMapping</p></li><li><p>类型：方法注解</p></li><li><p>位置：SpringMVC控制器方法定义上方</p></li><li><p>作用：设置当前控制器方法请求访问路径</p></li><li><p>范例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/users&quot;,method = RequestMethod.POST)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">save</span><span class="params">()</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;user save...&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&#123;&#x27;module&#x27;:&#x27;user save&#x27;&#125;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>属性</p><ul><li>value(默认)：请求访问路径</li><li>method：http请求动作，标准动作（GET&#x2F;POST&#x2F;PUT&#x2F;DELETE）</li></ul></li></ul><h2 id="GetMapping-PostMapping-PutMapping-DeleteMapping"><a href="#GetMapping-PostMapping-PutMapping-DeleteMapping" class="headerlink" title="@GetMapping    @PostMapping    @PutMapping    @DeleteMapping"></a>@GetMapping    @PostMapping    @PutMapping    @DeleteMapping</h2><ul><li><p>名称：@GetMapping    @PostMapping    @PutMapping    @DeleteMapping</p></li><li><p>类型：方法注解</p></li><li><p>位置：基于SpringMVC的RESTful开发控制器方法定义上方</p></li><li><p>作用：设置当前控制器方法请求访问路径与请求动作，每种对应一个请求动作，例如@GetMapping对应GET请求</p></li><li><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getById</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span>&#123;</span><br><span class="line">System.out.ptintln(<span class="string">&quot;book getById...&quot;</span>+id);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&#123;&#x27;module&#x27;:&#x27;book getById&#x27;&#125;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>属性</p><ul><li>value(默认)：请求访问路径</li></ul></li></ul><h2 id="RestController"><a href="#RestController" class="headerlink" title="@RestController"></a>@RestController</h2><ul><li><p>名称：@RestController</p></li><li><p>类型：类注解</p></li><li><p>位置：基于SpringMVC的RESTful开发控制器类定义上方</p></li><li><p>作用：设置当前控制器为RESTful风格，等同于@Controller与@ResponseBody两个注解组合</p></li><li><p>范例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookController</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="PathVariable"><a href="#PathVariable" class="headerlink" title="@PathVariable"></a>@PathVariable</h2><ul><li><p>@PathVariable</p></li><li><p>类型：形参注解</p></li><li><p>位置：SpringMVC控制器方法形参定义前面</p></li><li><p>作用：绑定路径参数与处理器方法形参间的关系，要求路径参数名与形参名一一对应</p></li><li><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/users/&#123;id&#125;&quot;,method = RequestMethod.DELETE)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">save</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;user delete...&quot;</span> + id);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&#123;&#x27;module&#x27;:&#x27;user delete&#x27;&#125;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="RequestMapping-1"><a href="#RequestMapping-1" class="headerlink" title="@RequestMapping"></a>@RequestMapping</h2><ul><li><p>名称：@RequestMapping</p></li><li><p>类型：方法注解</p></li><li><p>位置：SpringMVC控制器方法定义上方</p></li><li><p>作用：设置当前控制器方法请求访问路径</p></li><li><p>范例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/users&quot;,method = RequestMethod.POST)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">save</span><span class="params">()</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;user save...&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&#123;&#x27;module&#x27;:&#x27;user save&#x27;&#125;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>属性</p><ul><li>value(默认)：请求访问路径</li><li>method：http请求动作，标准动作（GET&#x2F;POST&#x2F;PUT&#x2F;DELETE）</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Responsebody注解作用&quot;&gt;&lt;a href=&quot;#Responsebody注解作用&quot; class=&quot;headerlink&quot; title=&quot;@Responsebody注解作用&quot;&gt;&lt;/a&gt;@Responsebody注解作用&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;@re</summary>
      
    
    
    
    
    <category term="Spring" scheme="http://example.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>REST开发</title>
    <link href="http://example.com/2022/06/23/REST%E5%BC%80%E5%8F%91/"/>
    <id>http://example.com/2022/06/23/REST%E5%BC%80%E5%8F%91/</id>
    <published>2022-06-23T02:29:12.000Z</published>
    <updated>2022-06-23T15:13:25.881Z</updated>
    
    <content type="html"><![CDATA[<h1 id="REST风格"><a href="#REST风格" class="headerlink" title="REST风格"></a>REST风格</h1><h3 id="REST简介"><a href="#REST简介" class="headerlink" title="REST简介"></a>REST简介</h3><ul><li>REST，表现形式状态转换（访问网络资源的格式）<ul><li>传统风格资源描述形式<ul><li><a href="http://localhost/user/getById?id=1">http://localhost/user/getById?id=1</a></li><li><a href="http://localhost/user/saveUser">http://localhost/user/saveUser</a></li></ul></li><li>REST风格描述形式<ul><li><a href="http://localhost/user/1">http://localhost/user/1</a></li><li><a href="http://localhost/user">http://localhost/user</a></li></ul></li></ul></li><li>优点<ul><li>隐藏资源的访问行为，无法通过地址得知对资源是何种操作</li><li>书写简化</li></ul></li></ul><h3 id="REST风格书写"><a href="#REST风格书写" class="headerlink" title="REST风格书写"></a>REST风格书写</h3><ul><li>按照REST风格访问资源时使用行为动作区分对资源进行了何种操作<ul><li><a href="http://localhost/users">http://localhost/users</a>    <ul><li>查询全部用户信息  GET（查询）</li></ul></li><li><a href="http://localhost/users/1">http://localhost/users/1</a><ul><li>查询指定用户信息 GET（查询）</li></ul></li><li><a href="http://localhost/users">http://localhost/users</a>    <ul><li>添加用户信息 POST（新增&#x2F;保存）</li></ul></li><li><a href="http://localhost/users">http://localhost/users</a>    <ul><li>修改用户信息 PUT（修改&#x2F;更新）</li></ul></li><li><a href="http://localhost/users/1">http://localhost/users/1</a><ul><li>删除用户信息 DELETE（删除）</li></ul></li></ul></li><li>根据REST风格对资源进行访问称为RESTful</li></ul><p>注意事项：</p><p>上述行为是约定方式，约定不是规范，可以打破，所以称REST风格，而不是REST规范</p><p>描述模块的名称通常使用负数，也就是加s的格式描述，表示此类资源，例如：users，books….</p><h3 id="入门案例"><a href="#入门案例" class="headerlink" title="入门案例"></a>入门案例</h3><ul><li>设定http请求动作（动词）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/users&quot;,method = RequestMethod.POST)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">save</span><span class="params">()</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;user save...&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&#123;&#x27;module&#x27;:&#x27;user save&#x27;&#125;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>设定请求参数（路径变量）</li></ul><h5 id="PathVariable-从路径中取值"><a href="#PathVariable-从路径中取值" class="headerlink" title="@PathVariable:从路径中取值"></a>@PathVariable:从路径中取值</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/users/&#123;id&#125;&quot;,method = RequestMethod.DELETE)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">save</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;user delete...&quot;</span> + id);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&#123;&#x27;module&#x27;:&#x27;user delete&#x27;&#125;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注解解析"><a href="#注解解析" class="headerlink" title="注解解析"></a>注解解析</h4><h5 id="RequestMapping"><a href="#RequestMapping" class="headerlink" title="@RequestMapping"></a>@RequestMapping</h5><ul><li><p>名称：@RequestMapping</p></li><li><p>类型：方法注解</p></li><li><p>位置：SpringMVC控制器方法定义上方</p></li><li><p>作用：设置当前控制器方法请求访问路径</p></li><li><p>范例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/users&quot;,method = RequestMethod.POST)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">save</span><span class="params">()</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;user save...&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&#123;&#x27;module&#x27;:&#x27;user save&#x27;&#125;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>属性</p><ul><li>value(默认)：请求访问路径</li><li>method：http请求动作，标准动作（GET&#x2F;POST&#x2F;PUT&#x2F;DELETE）</li></ul></li></ul><h5 id="PathVariable"><a href="#PathVariable" class="headerlink" title="@PathVariable"></a>@PathVariable</h5><ul><li><p>@PathVariable</p></li><li><p>类型：形参注解</p></li><li><p>位置：SpringMVC控制器方法形参定义前面</p></li><li><p>作用：绑定路径参数与处理器方法形参间的关系，要求路径参数名与形参名一一对应</p></li><li><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/users/&#123;id&#125;&quot;,method = RequestMethod.DELETE)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">save</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;user delete...&quot;</span> + id);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&#123;&#x27;module&#x27;:&#x27;user delete&#x27;&#125;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="RequestBody-RequestParam-PathVariable"><a href="#RequestBody-RequestParam-PathVariable" class="headerlink" title="@RequestBody    @RequestParam    @PathVariable"></a>@RequestBody    @RequestParam    @PathVariable</h4><ul><li>区别<ul><li>@RequestParam用于接收url地址传参或表单传参</li><li>@RequestBody用于接收json数据</li><li>@PathVariable用于接收路径参数，使用{参数名称}描述路径参数</li></ul></li><li>应用<ul><li>后期开发中，发送请求参数超过1个时，以json格式为主，@RequestBody应用较广</li><li>如果发送非json格式数据，选用@RequestParam接收请求数据</li><li>采用RESTful进行开发，当参数数量较少时，例如1个，可以采用@PathVariable接收请求路径变量，通常用于传递id值</li></ul></li></ul><h2 id="RESTful快速开发"><a href="#RESTful快速开发" class="headerlink" title="RESTful快速开发"></a>RESTful快速开发</h2><h4 id="RestController"><a href="#RestController" class="headerlink" title="@RestController"></a>@RestController</h4><ul><li><p>名称：@RestController</p></li><li><p>类型：类注解</p></li><li><p>位置：基于SpringMVC的RESTful开发控制器类定义上方</p></li><li><p>作用：设置当前控制器为RESTful风格，等同于@Controller与@ResponseBody两个注解组合</p></li><li><p>范例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookController</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="GetMapping-PostMapping-PutMapping-DeleteMapping"><a href="#GetMapping-PostMapping-PutMapping-DeleteMapping" class="headerlink" title="@GetMapping    @PostMapping    @PutMapping    @DeleteMapping"></a>@GetMapping    @PostMapping    @PutMapping    @DeleteMapping</h4><ul><li><p>名称：@GetMapping    @PostMapping    @PutMapping    @DeleteMapping</p></li><li><p>类型：方法注解</p></li><li><p>位置：基于SpringMVC的RESTful开发控制器方法定义上方</p></li><li><p>作用：设置当前控制器方法请求访问路径与请求动作，每种对应一个请求动作，例如@GetMapping对应GET请求</p></li><li><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getById</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span>&#123;</span><br><span class="line">System.out.ptintln(<span class="string">&quot;book getById...&quot;</span>+id);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&#123;&#x27;module&#x27;:&#x27;book getById&#x27;&#125;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>属性</p><ul><li>value(默认)：请求访问路径</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;REST风格&quot;&gt;&lt;a href=&quot;#REST风格&quot; class=&quot;headerlink&quot; title=&quot;REST风格&quot;&gt;&lt;/a&gt;REST风格&lt;/h1&gt;&lt;h3 id=&quot;REST简介&quot;&gt;&lt;a href=&quot;#REST简介&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
    <category term="REST风格" scheme="http://example.com/tags/REST%E9%A3%8E%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot基础篇</title>
    <link href="http://example.com/2022/06/23/SpringBoot%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    <id>http://example.com/2022/06/23/SpringBoot%E5%9F%BA%E7%A1%80%E7%AF%87/</id>
    <published>2022-06-23T01:17:52.000Z</published>
    <updated>2022-06-24T02:16:51.109Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot基础篇"><a href="#SpringBoot基础篇" class="headerlink" title="SpringBoot基础篇"></a>SpringBoot基础篇</h1><p>在基础篇中，我给学习者的定位是先上手，能够使用SpringBoot搭建基于SpringBoot的web项目开发，所以内容设置较少，主要包含如下内容：</p><ul><li>SpringBoot快速入门</li><li>SpringBoot基础配置</li><li>基于SpringBoot整合SSMP</li></ul><h2 id="JC-1-快速上手SpringBoot"><a href="#JC-1-快速上手SpringBoot" class="headerlink" title="JC-1.快速上手SpringBoot"></a>JC-1.快速上手SpringBoot</h2><p>​    学习任意一项技术，首先要知道这个技术的作用是什么，不然学完以后，你都不知道什么时候使用这个技术，也就是技术对应的应用场景。SpringBoot技术由Pivotal团队研发制作，功能的话简单概括就是加速Spring程序的开发，这个加速要从如下两个方面来说</p><ul><li>Spring程序初始搭建过程</li><li>Spring程序的开发过程</li></ul><p>​    通过上面两个方面的定位，我们可以产生两个模糊的概念：</p><ol><li>SpringBoot开发团队认为原始的Spring程序初始搭建的时候可能有些繁琐，这个过程是可以简化的，那原始的Spring程序初始搭建过程都包含哪些东西了呢？为什么觉得繁琐呢？最基本的Spring程序至少有一个配置文件或配置类，用来描述Spring的配置信息，莫非这个文件都可以不写？此外现在企业级开发使用Spring大部分情况下是做web开发，如果做web开发的话，还要在加载web环境时加载时加载指定的spring配置，这都是最基本的需求了，不写的话怎么知道加载哪个配置文件&#x2F;配置类呢？那换了SpringBoot技术以后呢，这些还要写吗？谜底稍后揭晓，先卖个关子</li><li>SpringBoot开发团队认为原始的Spring程序开发的过程也有些繁琐，这个过程仍然可以简化。开发过程无外乎使用什么技术，导入对应的jar包（或坐标）然后将这个技术的核心对象交给Spring容器管理，也就是配置成Spring容器管控的bean就可以了。这都是基本操作啊，难道这些东西SpringBoot也能帮我们简化？</li></ol><p>带着上面这些疑问我们就着手第一个SpringBoot程序的开发了，看看到底使用SpringBoot技术能简化开发到什么程度。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SpringBoot基础篇&quot;&gt;&lt;a href=&quot;#SpringBoot基础篇&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot基础篇&quot;&gt;&lt;/a&gt;SpringBoot基础篇&lt;/h1&gt;&lt;p&gt;在基础篇中，我给学习者的定位是先上手，能够使用Spr</summary>
      
    
    
    
    
    <category term="SpringBoot" scheme="http://example.com/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis-plus入门2</title>
    <link href="http://example.com/2022/06/21/Mybatis-plus%E5%85%A5%E9%97%A82/"/>
    <id>http://example.com/2022/06/21/Mybatis-plus%E5%85%A5%E9%97%A82/</id>
    <published>2022-06-21T03:29:41.000Z</published>
    <updated>2022-06-22T14:27:40.614Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、ActiveRecord"><a href="#1、ActiveRecord" class="headerlink" title="1、ActiveRecord"></a><strong>1</strong>、ActiveRecord</h2><p>ActiveRecord（简称AR）一直广受动态语言（ PHP 、 Ruby 等）的喜爱，而 Java 作为准静态语言，对于ActiveRecord 往往只能感叹其优雅，所以我们也在 AR 道路上进行了一定的探索，喜欢大家能够喜欢。</p><h5 id="什么是ActiveRecord？"><a href="#什么是ActiveRecord？" class="headerlink" title="什么是ActiveRecord？"></a><strong>什么是</strong>ActiveRecord？</h5><p>ActiveRecord也属于ORM（对象关系映射）层，由Rails最早提出，遵循标准的ORM模型：表映射到记录，记录映射到对象，字段映射到对象属性。配合遵循的命名和配置惯例，能够很大程度的快速实现模型的操作，而且简洁易懂。</p><p>ActiveRecord的主要思想是：</p><ul><li><p>每一个数据库表对应创建一个类，类的每一个对象实例对应于数据库中表的一行记录；通常表的每个字段在类中都有相应的Field；</p></li><li><p>ActiveRecord同时负责把自己持久化，在ActiveRecord中封装了对数据库的访问，即CURD;；</p></li><li><p>ActiveRecord是一种领域模型(Domain Model)，封装了部分业务逻辑；</p></li></ul><h3 id="1-1、开启AR之旅"><a href="#1-1、开启AR之旅" class="headerlink" title="1.1、开启AR之旅"></a><strong>1.1</strong>、开启AR之旅</h3><p>在MP中，开启AR非常简单，只需要将实体对象继承Model即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span> </span><br><span class="line"><span class="meta">@AllArgsConstructor</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">extends</span> <span class="title class_">Model</span>&lt;User&gt; &#123;</span><br><span class="line"><span class="keyword">private</span> Long id; </span><br><span class="line">  <span class="keyword">private</span> String userName; </span><br><span class="line">  <span class="keyword">private</span> String password;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  <span class="keyword">private</span> Integer age; </span><br><span class="line">  <span class="keyword">private</span> String email; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2、根据主键查询"><a href="#1-2、根据主键查询" class="headerlink" title="1.2、根据主键查询"></a><strong>1.2</strong>、根据主键查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> <span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line">  <span class="meta">@Autowired</span> </span><br><span class="line">  <span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Test</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAR</span><span class="params">()</span> &#123; </span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(); </span><br><span class="line">        user.setId(<span class="number">2L</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> user.selectById(); </span><br><span class="line">        System.out.println(user2); </span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3、新增数据"><a href="#1-3、新增数据" class="headerlink" title="1.3、新增数据"></a><strong>1.3</strong>、新增数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> <span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Test</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAR</span><span class="params">()</span> &#123; </span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(); </span><br><span class="line">        user.setName(<span class="string">&quot;刘备&quot;</span>); </span><br><span class="line">        user.setAge(<span class="number">30</span>); </span><br><span class="line">        user.setPassword(<span class="string">&quot;123456&quot;</span>); </span><br><span class="line">        user.setUserName(<span class="string">&quot;liubei&quot;</span>); </span><br><span class="line">        user.setEmail(<span class="string">&quot;liubei@itcast.cn&quot;</span>); </span><br><span class="line">        <span class="type">boolean</span> <span class="variable">insert</span> <span class="operator">=</span> user.insert(); </span><br><span class="line">        System.out.println(insert);</span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.insert]-[DEBUG] ==&gt; Preparing: INSERT INTO </span><br><span class="line">tb_user ( user_name, password, name, age, email ) VALUES ( ?, ?, ?, ?, ? ) </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.insert]-[DEBUG] ==&gt; Parameters: liubei(String), </span><br><span class="line">123456(String), 刘备(String), 30(Integer), liubei@itcast.cn(String) </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.insert]-[DEBUG] &lt;== Updates: 1</span><br></pre></td></tr></table></figure><h3 id="1-5、更新操作"><a href="#1-5、更新操作" class="headerlink" title="1.5、更新操作"></a><strong>1.5</strong>、更新操作</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> <span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line">  <span class="meta">@Autowired</span> </span><br><span class="line">  <span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Test</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAR</span><span class="params">()</span> &#123; </span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(); </span><br><span class="line">        user.setId(<span class="number">8L</span>); </span><br><span class="line">        user.setAge(<span class="number">35</span>); </span><br><span class="line">        <span class="type">boolean</span> <span class="variable">update</span> <span class="operator">=</span> user.updateById(); </span><br><span class="line">        System.out.println(update); </span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.updateById]-[DEBUG] ==&gt; Preparing: UPDATE tb_user SET age=? WHERE id=? </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.updateById]-[DEBUG] ==&gt; Parameters: 35(Integer), 8(Long) </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.updateById]-[DEBUG] &lt;== Updates: 1</span><br></pre></td></tr></table></figure><h3 id="1-6、删除操作"><a href="#1-6、删除操作" class="headerlink" title="1.6、删除操作"></a><strong>1.6</strong>、删除操作</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> <span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line">  <span class="meta">@Autowired</span> </span><br><span class="line">  <span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Test</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAR</span><span class="params">()</span> &#123; </span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(); </span><br><span class="line">        user.setId(<span class="number">7L</span>); </span><br><span class="line">        <span class="type">boolean</span> <span class="variable">delete</span> <span class="operator">=</span> user.deleteById(); </span><br><span class="line">        System.out.println(delete); </span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.deleteById]-[DEBUG] ==&gt; Preparing: DELETE FROM tb_user WHERE id=? </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.deleteById]-[DEBUG] ==&gt; Parameters: 7(Long) </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.deleteById]-[DEBUG] &lt;== Updates: 1</span><br></pre></td></tr></table></figure><h3 id="1-7、根据条件查询"><a href="#1-7、根据条件查询" class="headerlink" title="1.7、根据条件查询"></a><strong>1.7</strong>、根据条件查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> </span><br><span class="line"><span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line">  <span class="meta">@Autowired</span> </span><br><span class="line">  <span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Test</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAR</span><span class="params">()</span> &#123; </span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(); </span><br><span class="line">        QueryWrapper&lt;User&gt; userQueryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;(); </span><br><span class="line">        userQueryWrapper.le(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;20&quot;</span>); </span><br><span class="line">        List&lt;User&gt; users = user.selectList(userQueryWrapper); </span><br><span class="line">        <span class="keyword">for</span> (User user1 : users) &#123; </span><br><span class="line">          System.out.println(user1); </span><br><span class="line">        &#125; </span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.selectList]-[DEBUG] ==&gt; Preparing: SELECT id,user_name,password,name,age,email FROM tb_user WHERE age &lt;= ? </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.selectList]-[DEBUG] ==&gt; Parameters: 20(String) </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.selectList]-[DEBUG] &lt;== Total: 2 </span><br><span class="line">User(id=2, userName=lisi, password=123456, name=李四, age=20, email=test2@itcast.cn, address=null) </span><br><span class="line">User(id=6, userName=caocao, password=123456, name=曹操, age=20, email=test@itcast.cn, address=null)</span><br></pre></td></tr></table></figure><h2 id="2、Oracle-主键Sequence"><a href="#2、Oracle-主键Sequence" class="headerlink" title="2、Oracle 主键Sequence"></a><strong>2</strong>、Oracle <strong>主键</strong>Sequence</h2><p>在mysql中，主键往往是自增长的，这样使用起来是比较方便的，如果使用的是Oracle数据库，那么就不能使用自增长了，就得使用Sequence 序列生成id值了。</p><h3 id="2-1、部署Oracle环境"><a href="#2-1、部署Oracle环境" class="headerlink" title="2.1、部署Oracle环境"></a><strong>2.1</strong>、部署Oracle环境</h3><p>为了简化环境部署，这里使用Docker环境进行部署安装Oracle。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">拉取镜像</span> </span><br><span class="line">docker pull sath89/oracle-12c </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建容器</span></span><br><span class="line">docker create --name oracle -p 1521:1521 sath89/oracle-12c </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动</span> </span><br><span class="line">docker start oracle &amp;&amp; docker logs -f oracle </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下面是启动过程</span> </span><br><span class="line">Database not initialized. Initializing database. </span><br><span class="line">Starting tnslsnr</span><br><span class="line"></span><br><span class="line">Copying database files </span><br><span class="line"><span class="meta prompt_">1% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">3% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">11% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">18% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">26% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">37% </span><span class="language-bash">complete</span> </span><br><span class="line">Creating and starting Oracle instance </span><br><span class="line"><span class="meta prompt_">40% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">45% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">50% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">55% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">56% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">60% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">62% </span><span class="language-bash">complete</span> </span><br><span class="line">Completing Database Creation </span><br><span class="line"><span class="meta prompt_">66% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">70% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">73% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">85% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">96% </span><span class="language-bash">complete</span> </span><br><span class="line"><span class="meta prompt_">100% </span><span class="language-bash">complete</span> </span><br><span class="line">Look at the log file &quot;/u01/app/oracle/cfgtoollogs/dbca/xe/xe.log&quot; for further details. </span><br><span class="line">Configuring Apex console</span><br><span class="line">Database initialized. Please visit http://#containeer:8080/em </span><br><span class="line">http://#containeer:8080/apex for extra configuration if needed </span><br><span class="line"></span><br><span class="line">Starting web management console PL/SQL procedure successfully completed. </span><br><span class="line">Starting import from &#x27;/docker-entrypoint-initdb.d&#x27;:</span><br><span class="line">ls: cannot access /docker-entrypoint-initdb.d/*: No such file or directory </span><br><span class="line">Import finished </span><br><span class="line"></span><br><span class="line">Database ready to use. Enjoy! ;) </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">通过用户名密码即可登录</span> </span><br><span class="line">用户名和密码为： system/oracle</span><br></pre></td></tr></table></figure><p>下面使用navicat12进行连接并操作oracle</p><p>需要注意的是：由于安装的Oracle是64位版本，所以navicat也是需要使用64为版本，否则连接不成功。</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-2122.42.51.png"></p><h3 id="2-2、创建表以及序列"><a href="#2-2、创建表以及序列" class="headerlink" title="2.2、创建表以及序列"></a><strong>2.2</strong>、创建表以及序列</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建表，表名以及字段名都要大写 </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;TB_USER&quot; ( </span><br><span class="line">  &quot;ID&quot; NUMBER(<span class="number">20</span>) VISIBLE <span class="keyword">NOT</span> <span class="keyword">NULL</span> ,</span><br><span class="line">  &quot;USER_NAME&quot; VARCHAR2(<span class="number">255</span> BYTE) VISIBLE , </span><br><span class="line">  &quot;PASSWORD&quot; VARCHAR2(<span class="number">255</span> BYTE) VISIBLE , </span><br><span class="line">  &quot;NAME&quot; VARCHAR2(<span class="number">255</span> BYTE) VISIBLE ,</span><br><span class="line">  &quot;AGE&quot; NUMBER(<span class="number">10</span>) VISIBLE , </span><br><span class="line">  &quot;EMAIL&quot; VARCHAR2(<span class="number">255</span> BYTE) VISIBLE </span><br><span class="line">)</span><br><span class="line"><span class="comment">--创建序列 </span></span><br><span class="line"><span class="keyword">CREATE</span> SEQUENCE SEQ_USER <span class="keyword">START</span> <span class="keyword">WITH</span> <span class="number">1</span> INCREMENT <span class="keyword">BY</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="2-3、jdbc驱动包"><a href="#2-3、jdbc驱动包" class="headerlink" title="2.3、jdbc驱动包"></a><strong>2.3</strong>、jdbc驱动包</h3><p>由于版权原因，我们不能直接通过maven的中央仓库下载oracle数据库的jdbc驱动包，所以我们需要将驱动包安装到本地仓库。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ojdbc8.jar文件在资料中可以找到</span> </span><br><span class="line"></span><br><span class="line">mvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc8 -Dversion=12.1.0.1 - Dpackaging=jar -Dfile=ojdbc8.jar</span><br></pre></td></tr></table></figure><p>安装完成后的坐标：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>12.1.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4、修改application-properties"><a href="#2-4、修改application-properties" class="headerlink" title="2.4、修改application.properties"></a><strong>2.4</strong>、修改application.properties</h3><p>对于application.properties的修改，需要修改2个位置，分别是：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#数据库连接配置 </span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">oracle.jdbc.OracleDriver</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:oracle:thin:@192.168.31.81:1521:xe</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">system</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">oracle </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#id生成策略 </span></span><br><span class="line"><span class="attr">mybatis-plus.global-config.db-config.id-type</span>=<span class="string">input</span></span><br></pre></td></tr></table></figure><h3 id="2-5、配置序列"><a href="#2-5、配置序列" class="headerlink" title="2.5、配置序列"></a><strong>2.5</strong>、配置序列</h3><p>使用Oracle的序列需要做2件事情：</p><p>第一，需要配置MP的序列生成器到Spring容器：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> <span class="meta">@MapperScan(&quot;cn.itcast.mp.mapper&quot;)</span> <span class="comment">//设置mapper接口的扫描包</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line">  <span class="comment">/*** 分页插件 */</span> </span><br><span class="line">  <span class="meta">@Bean</span> </span><br><span class="line">  <span class="keyword">public</span> PaginationInterceptor <span class="title function_">paginationInterceptor</span><span class="params">()</span> &#123; </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PaginationInterceptor</span>(); </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/*** 序列生成器 */</span> </span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="keyword">public</span> OracleKeyGenerator <span class="title function_">oracleKeyGenerator</span><span class="params">()</span>&#123; </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OracleKeyGenerator</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二，在实体对象中指定序列的名称：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@KeySequence(value = &quot;SEQ_USER&quot;, clazz = Long.class)</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span>&#123; </span><br><span class="line">...... </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6、测试"><a href="#2-6、测试" class="headerlink" title="2.6、测试"></a><strong>2.6</strong>、测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> </span><br><span class="line"><span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Test</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span>&#123; </span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(); </span><br><span class="line">        user.setAge(<span class="number">20</span>); </span><br><span class="line">        user.setEmail(<span class="string">&quot;test@itcast.cn&quot;</span>); </span><br><span class="line">        user.setName(<span class="string">&quot;曹操&quot;</span>); </span><br><span class="line">        user.setUserName(<span class="string">&quot;caocao&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;123456&quot;</span>); </span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.insert(user); </span><br><span class="line">        <span class="comment">//返回的result是受影响的行数，并不是自增 后的id </span></span><br><span class="line">        System.out.println(<span class="string">&quot;result = &quot;</span> + result); System.out.println(user.getId());<span class="comment">//自增后的id会回填到对象中 </span></span><br><span class="line">      &#125;</span><br><span class="line">  <span class="meta">@Test</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectById</span><span class="params">()</span>&#123; </span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.selectById(<span class="number">8L</span>);</span><br><span class="line">        System.out.println(user); </span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、插件"><a href="#3、插件" class="headerlink" title="3、插件"></a><strong>3</strong>、插件</h2><h3 id="3-1、mybatis的插件机制"><a href="#3-1、mybatis的插件机制" class="headerlink" title="3.1、mybatis的插件机制"></a><strong>3.1</strong>、mybatis的插件机制</h3><p>MyBatis 允许你在已映射语句执行过程中的某一点进行拦截调用。默认情况下，MyBatis 允许使用插件来拦截的方法</p><p>调用包括：</p><ol><li><p>Executor (update, query, flflushStatements, commit, rollback, getTransaction, close, isClosed)</p></li><li><p>ParameterHandler (getParameterObject, setParameters)</p></li><li><p>ResultSetHandler (handleResultSets, handleOutputParameters)</p></li><li><p>StatementHandler (prepare, parameterize, batch, update, query)</p></li></ol><p>我们看到了可以拦截Executor接口的部分方法，比如update，query，commit，rollback等方法，还有其他接口的</p><p>一些方法等。</p><p>总体概括为：</p><ol><li><p>拦截执行器的方法</p></li><li><p>拦截参数的处理</p></li><li><p>拦截结果集的处理</p></li><li><p>拦截Sql语法构建的处理</p></li></ol><p>拦截器示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Intercepts(&#123;@Signature( </span></span><br><span class="line"><span class="meta">  type= Executor.class,</span></span><br><span class="line"><span class="meta">  method = &quot;update&quot;,</span></span><br><span class="line"><span class="meta"> args = &#123;MappedStatement.class,Object.class&#125;)&#125;)</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyInterceptor</span> <span class="keyword">implements</span> <span class="title class_">Interceptor</span> &#123; </span><br><span class="line">  <span class="meta">@Override</span> </span><br><span class="line">  <span class="keyword">public</span> Object <span class="title function_">intercept</span><span class="params">(Invocation invocation)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="comment">//拦截方法，具体业务逻辑编写的位置 </span></span><br><span class="line">        <span class="keyword">return</span> invocation.proceed();</span><br><span class="line">      &#125;</span><br><span class="line">  <span class="meta">@Override</span> </span><br><span class="line">  <span class="keyword">public</span> Object <span class="title function_">plugin</span><span class="params">(Object target)</span> &#123; </span><br><span class="line">        <span class="comment">//创建target对象的代理对象,目的是将当前拦截器加入到该对象中</span></span><br><span class="line">        <span class="keyword">return</span> Plugin.wrap(target, <span class="built_in">this</span>); &#125;</span><br><span class="line">  <span class="meta">@Override</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProperties</span><span class="params">(Properties properties)</span> &#123; </span><br><span class="line">        <span class="comment">//属性设置</span></span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注入到Spring容器：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">* 自定义拦截器 </span><br><span class="line">*/ </span><br><span class="line">@Bean </span><br><span class="line">public MyInterceptor myInterceptor()&#123; </span><br><span class="line">return new MyInterceptor(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者通过xml配置，mybatis-confifig.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span> <span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;cn.itcast.mp.plugins.MyInterceptor&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2、执行分析插件"><a href="#3-2、执行分析插件" class="headerlink" title="3.2、执行分析插件"></a><strong>3.2</strong>、执行分析插件</h3><p>在MP中提供了对SQL执行的分析的插件，可用作阻断全表更新、删除的操作，注意：该插件仅适用于开发环境，不适用于生产环境。</p><p>SpringBoot配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span> </span><br><span class="line"><span class="keyword">public</span> SqlExplainInterceptor <span class="title function_">sqlExplainInterceptor</span><span class="params">()</span>&#123; </span><br><span class="line">  <span class="type">SqlExplainInterceptor</span> <span class="variable">sqlExplainInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlExplainInterceptor</span>();</span><br><span class="line">  List&lt;ISqlParser&gt; sqlParserList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(); </span><br><span class="line">  <span class="comment">// 攻击 SQL 阻断解析器、加入解析链 </span></span><br><span class="line">  sqlParserList.add(<span class="keyword">new</span> <span class="title class_">BlockAttackSqlParser</span>());</span><br><span class="line"> </span><br><span class="line">  sqlExplainInterceptor.setSqlParserList(</span><br><span class="line">    sqlParserList); </span><br><span class="line">  <span class="keyword">return</span> sqlExplainInterceptor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span>&#123; </span><br><span class="line">  <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(); </span><br><span class="line">  user.setAge(<span class="number">20</span>); <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.update(user, <span class="literal">null</span>); </span><br><span class="line">  System.out.println(<span class="string">&quot;result = &quot;</span> + result); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，当执行全表更新时，会抛出异常，这样有效防止了一些误操作。</p><h3 id="3-3、性能分析插件-最新版本已移除，可以使用第三方插件"><a href="#3-3、性能分析插件-最新版本已移除，可以使用第三方插件" class="headerlink" title="3.3、性能分析插件(最新版本已移除，可以使用第三方插件)"></a><strong>3.3</strong>、性能分析插件(最新版本已移除，可以使用第三方插件)</h3><p>3.2.0 以上版本该类已被移除，官方推荐使用第三方插件，详见官方文档</p><p>性能分析拦截器，用于输出每条 SQL 语句及其执行时间，可以设置最大执行时间，超过时间会抛出异常。</p><p><strong>该插件只用于开发环境，不建议生产环境使用。</strong></p><p>配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span> <span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span> </span></span><br><span class="line"><span class="meta"><span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span> </span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- SQL 执行性能分析，开发环境使用，线上不推荐。 maxTime 指的是 sql 最大执行时长 --&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.plugins.PerformanceInterceptor&quot;</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxTime&quot;</span> <span class="attr">value</span>=<span class="string">&quot;100&quot;</span> /&gt;</span> </span><br><span class="line">            <span class="comment">&lt;!--SQL是否格式化 默认false--&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;format&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Time：11 ms - ID：cn.itcast.mp.mapper.UserMapper.selectById </span><br><span class="line">Execute SQL：</span><br><span class="line">SELECT</span><br><span class="line">id, </span><br><span class="line">user_name,</span><br><span class="line">        password, </span><br><span class="line">        name, </span><br><span class="line">        age, </span><br><span class="line">        email</span><br><span class="line">     FROM</span><br><span class="line">      tb_user</span><br><span class="line">      WHERE</span><br><span class="line">      id=7</span><br></pre></td></tr></table></figure><p>可以看到，执行时间为11ms。如果将maxTime设置为1，那么，该操作会抛出异常。</p><h3 id="3-4、乐观锁插件"><a href="#3-4、乐观锁插件" class="headerlink" title="3.4、乐观锁插件"></a><strong>3.4</strong>、乐观锁插件</h3><h4 id="3-4-1、主要适用场景"><a href="#3-4-1、主要适用场景" class="headerlink" title="3.4.1、主要适用场景"></a>3.4.1、主要适用场景</h4><p>意图：</p><p>当要更新一条记录的时候，希望这条记录没有被别人更新</p><p>乐观锁实现方式：</p><ul><li><p>取出记录时，获取当前version</p></li><li><p>更新时，带上这个version</p></li><li><p>执行更新时， set version &#x3D; newVersion where version &#x3D; oldVersion</p></li><li><p>如果version不对，就更新失败</p></li></ul><h4 id="3-4-2、插件配置"><a href="#3-4-2、插件配置" class="headerlink" title="3.4.2、插件配置"></a><strong>3.4.2</strong>、插件配置</h4><p>spring xml:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.plugins.OptimisticLockerInterceptor&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>spring boot:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> OptimisticLockerInterceptor <span class="title function_">optimisticLockerInterceptor</span><span class="params">()</span> &#123; </span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OptimisticLockerInterceptor</span>(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-4-3、注解实体字段"><a href="#3-4-3、注解实体字段" class="headerlink" title="3.4.3、注解实体字段"></a><strong>3.4.3</strong>、注解实体字段</h4><p>需要为实体字段添加@Version注解</p><p>第一步，为表添加version字段，并且设置初始值为1：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `tb_user`</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> `version` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">NULL</span> AFTER `email`; </span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> `tb_user` <span class="keyword">SET</span> `version`<span class="operator">=</span><span class="string">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure><p>第二步，为User实体对象添加version字段，并且添加@Version注解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Version</span> </span><br><span class="line"><span class="keyword">private</span> Integer version;</span><br></pre></td></tr></table></figure><h4 id="3-4-4、测试"><a href="#3-4-4、测试" class="headerlink" title="3.4.4、测试"></a><strong>3.4.4</strong>、测试</h4><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">  user.setAge(<span class="number">30</span>); </span><br><span class="line">  user.setId(<span class="number">2L</span>);</span><br><span class="line">  user.setVersion(<span class="number">1</span>); </span><br><span class="line">  <span class="comment">//获取到version为1 </span></span><br><span class="line">  <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.updateById(user); </span><br><span class="line">  System.out.println(<span class="string">&quot;result = &quot;</span> + result); &#125;</span><br></pre></td></tr></table></figure><p>可以看到，更新的条件中有version条件，并且更新的version为2。</p><p>如果再次执行，更新则不成功。这样就避免了多人同时更新时导致数据的不一致。</p><h4 id="3-4-5、特别说明"><a href="#3-4-5、特别说明" class="headerlink" title="3.4.5、特别说明"></a><strong>3.4.5</strong>、特别说明</h4><ul><li><p><strong>支持的数据类型只有</strong>:int,Integer,long,Long,Date,Timestamp,LocalDateTime</p></li><li><p>整数类型下 newVersion &#x3D; oldVersion + 1 </p></li><li><p>newVersion 会回写到 entity 中</p></li><li><p>仅支持 updateById(id) 与 update(entity, wrapper) 方法</p></li><li><p><strong>在</strong> <strong>update(entity, wrapper)</strong> <strong>方法下</strong>, wrapper不能复用</p></li></ul><h2 id="4、Sql-注入器"><a href="#4、Sql-注入器" class="headerlink" title="4、Sql 注入器"></a><strong>4</strong>、Sql <strong>注入器</strong></h2><p>我们已经知道，在MP中，通过AbstractSqlInjector将BaseMapper中的方法注入到了Mybatis容器，这样这些方法才可以正常执行。</p><p>那么，如果我们需要扩充BaseMapper中的方法，又该如何实现呢？</p><p>下面我们以扩展findAll方法为例进行学习。</p><h3 id="4-1、编写MyBaseMapper"><a href="#4-1、编写MyBaseMapper" class="headerlink" title="4.1、编写MyBaseMapper"></a><strong>4.1</strong>、编写MyBaseMapper</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MyBaseMapper</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;T&gt; &#123; </span><br><span class="line">  List&lt;T&gt; <span class="title function_">findAll</span><span class="params">()</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他的Mapper都可以继承该Mapper，这样实现了统一的扩展。</p><p>如:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">MyBaseMapper</span>&lt;User&gt; &#123; </span><br><span class="line">  User <span class="title function_">findById</span><span class="params">(Long id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2、编写MySqlInjector"><a href="#4-2、编写MySqlInjector" class="headerlink" title="4.2、编写MySqlInjector"></a><strong>4.2</strong>、编写MySqlInjector</h3><p>如果直接继承AbstractSqlInjector的话，原有的BaseMapper中的方法将失效，所以我们选择继承DefaultSqlInjector进行扩展。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MySqlInjector</span> <span class="keyword">extends</span> <span class="title class_">DefaultSqlInjector</span> &#123; </span><br><span class="line">  <span class="meta">@Override</span> </span><br><span class="line">  <span class="keyword">public</span> List&lt;AbstractMethod&gt; <span class="title function_">getMethodList</span><span class="params">()</span> &#123; </span><br><span class="line">        List&lt;AbstractMethod&gt; methodList = <span class="built_in">super</span>.getMethodList(); </span><br><span class="line">        methodList.add(<span class="keyword">new</span> <span class="title class_">FindAll</span>()); </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 再扩充自定义的方法 </span></span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">FindAll</span>()); </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> methodList;</span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3、编写FindAll"><a href="#4-3、编写FindAll" class="headerlink" title="4.3、编写FindAll"></a><strong>4.3</strong>、编写FindAll</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FindAll</span> <span class="keyword">extends</span> <span class="title class_">AbstractMethod</span> &#123; </span><br><span class="line">  <span class="meta">@Override</span> </span><br><span class="line">  <span class="keyword">public</span> MappedStatement <span class="title function_">injectMappedStatement</span><span class="params">(Class&lt;?&gt; mapperClass, Class&lt;?&gt; modelClass, TableInfo tableInfo)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sqlMethod</span> <span class="operator">=</span> <span class="string">&quot;findAll&quot;</span>; <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from &quot;</span> + tableInfo.getTableName(); </span><br><span class="line">        <span class="type">SqlSource</span> <span class="variable">sqlSource</span> <span class="operator">=</span> languageDriver.createSqlSource(configuration, sql, modelClass);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.addSelectMappedStatement(mapperClass, sqlMethod, sqlSource, modelClass, tableInfo);</span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4、注册到Spring容器"><a href="#4-4、注册到Spring容器" class="headerlink" title="4.4、注册到Spring容器"></a><strong>4.4</strong>、注册到Spring容器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">自定义SQL注入器</span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line"><span class="meta">@Bean</span> </span><br><span class="line"><span class="keyword">public</span> MySqlInjector <span class="title function_">mySqlInjector</span><span class="params">()</span>&#123; </span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MySqlInjector</span>(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-5、测试"><a href="#4-5、测试" class="headerlink" title="4.5、测试"></a><strong>4.5</strong>、测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testFindAll</span><span class="params">()</span>&#123; </span><br><span class="line">  List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.findAll(); </span><br><span class="line">  <span class="keyword">for</span> (User user : users) &#123; </span><br><span class="line">        System.out.println(user); </span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出的SQL： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.findAll]-[DEBUG] ==&gt; Preparing: select * from tb_user </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.findAll]-[DEBUG] ==&gt; Parameters: </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.findAll]-[DEBUG] &lt;== Total: 10</span><br></pre></td></tr></table></figure><p>至此，我们实现了全局扩展SQL注入器。</p><h2 id="5、自动填充功能"><a href="#5、自动填充功能" class="headerlink" title="5、自动填充功能"></a><strong>5</strong>、自动填充功能</h2><p>有些时候我们可能会有这样的需求，插入或者更新数据时，希望有些字段可以自动填充数据，比如密码、version等。在MP中提供了这样的功能，可以实现自动填充。</p><h3 id="5-1、添加-TableField注解"><a href="#5-1、添加-TableField注解" class="headerlink" title="5.1、添加@TableField注解"></a><strong>5.1</strong>、添加@TableField注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT)</span> <span class="comment">//插入数据时进行填充 </span></span><br><span class="line"><span class="keyword">private</span> String password;</span><br></pre></td></tr></table></figure><p>为password添加自动填充功能，在新增数据时有效。<br>FieldFill提供了多种模式选择：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">FieldFill</span> &#123; </span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 默认不处理 </span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  DEFAULT, </span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 插入时填充字段 </span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line">  INSERT, </span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 更新时填充字段 </span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line">  UPDATE, </span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 插入和更新时填充字段 </span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line">  INSERT_UPDATE</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2、编写MyMetaObjectHandler"><a href="#5-2、编写MyMetaObjectHandler" class="headerlink" title="5.2、编写MyMetaObjectHandler"></a><strong>5.2</strong>、编写MyMetaObjectHandler</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">password</span> <span class="operator">=</span> getFieldValByName(<span class="string">&quot;password&quot;</span>, metaObject);</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">null</span> == password)&#123; </span><br><span class="line">          <span class="comment">//字段为空，可以进行填充 </span></span><br><span class="line">          setFieldValByName(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;123456&quot;</span>, metaObject); </span><br><span class="line">        &#125; </span><br><span class="line">      &#125;</span><br><span class="line">  <span class="meta">@Override</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123; </span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3、测试"><a href="#5-3、测试" class="headerlink" title="5.3、测试"></a><strong>5.3</strong>、测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span>&#123; </span><br><span class="line">  <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(); </span><br><span class="line">  user.setName(<span class="string">&quot;关羽&quot;</span>);</span><br><span class="line">  user.setUserName(<span class="string">&quot;guanyu&quot;</span>);</span><br><span class="line">  user.setAge(<span class="number">30</span>); </span><br><span class="line">  user.setEmail(<span class="string">&quot;guanyu@itast.cn&quot;</span>); </span><br><span class="line">  user.setVersion(<span class="number">1</span>);</span><br><span class="line">  <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.insert(user); </span><br><span class="line">  System.out.println(<span class="string">&quot;result = &quot;</span> + result); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6、-逻辑删除"><a href="#6、-逻辑删除" class="headerlink" title="6、 逻辑删除"></a><strong>6</strong>、 逻辑删除</h2><p>开发系统时，有时候在实现功能时，删除操作需要实现逻辑删除，所谓逻辑删除就是将数据标记为删除，而并非真正的物理删除（非DELETE操作），查询时需要携带状态条件，确保被标记的数据不被查询到。这样做的目的就是避免数据被真正的删除。</p><p>MP就提供了这样的功能，方便我们使用，接下来我们一起学习下。</p><h3 id="6-1、修改表结构"><a href="#6-1、修改表结构" class="headerlink" title="6.1、修改表结构"></a><strong>6.1</strong>、修改表结构</h3><p>为tb_user表增加deleted字段，用于表示数据是否被删除，1代表删除，0代表未删除。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `tb_user` </span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> `deleted` <span class="type">int</span>(<span class="number">1</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;1代表删除，0代表未删除&#x27;</span> AFTER `version`;</span><br></pre></td></tr></table></figure><p>同时，也修改User实体，增加deleted属性并且添加@TableLogic注解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span></span><br><span class="line"><span class="keyword">private</span> Integer deleted;</span><br></pre></td></tr></table></figure><h3 id="6-2、配置"><a href="#6-2、配置" class="headerlink" title="6.2、配置"></a><strong>6.2</strong>、配置</h3><p>application.properties：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 逻辑已删除值(默认为 1)</span></span><br><span class="line"><span class="attr">mybatis-plus.global-config.db-config.logic-delete-value</span>=<span class="string">1 </span></span><br><span class="line"><span class="comment"># 逻辑未删除值(默认为 0) </span></span><br><span class="line"><span class="attr">mybatis-plus.global-config.db-config.logic-not-delete-value</span>=<span class="string">0</span></span><br></pre></td></tr></table></figure><h3 id="6-3、测试"><a href="#6-3、测试" class="headerlink" title="6.3、测试"></a><strong>6.3</strong>、测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteById</span><span class="params">()</span>&#123; <span class="built_in">this</span>.userMapper.deleteById(<span class="number">2L</span>); &#125;</span><br></pre></td></tr></table></figure><p>执行的SQL：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.deleteById]-[DEBUG] ==&gt; Preparing: UPDATE tb_user SET deleted=1 WHERE id=? AND deleted=0 </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.deleteById]-[DEBUG] ==&gt; Parameters: 2(Long) </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.deleteById]-[DEBUG] &lt;== Updates: 1</span><br></pre></td></tr></table></figure><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-2221.28.55.png"></p><p>测试查询：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectById</span><span class="params">()</span>&#123; </span><br><span class="line">  <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.selectById(<span class="number">2L</span>); </span><br><span class="line">  System.out.println(user); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行的SQL：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.selectById]-[DEBUG] ==&gt; Preparing: SELECT id,user_name,password,name,age,email,version,deleted FROM tb_user WHERE id=? AND deleted=0 </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.selectById]-[DEBUG] ==&gt; Parameters: 2(Long) </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.selectById]-[DEBUG] &lt;== Total: 0</span><br></pre></td></tr></table></figure><p>可见，已经实现了逻辑删除。</p><h2 id="7、-通用枚举"><a href="#7、-通用枚举" class="headerlink" title="7、 通用枚举"></a><strong>7</strong>、 通用枚举</h2><p>解决了繁琐的配置，让 mybatis 优雅的使用枚举属性！</p><h3 id="7-1、修改表结构"><a href="#7-1、修改表结构" class="headerlink" title="7.1、修改表结构"></a><strong>7.1</strong>、修改表结构</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `tb_user`</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> `sex` <span class="type">int</span>(<span class="number">1</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">1</span> COMMENT <span class="string">&#x27;1-男，2-女&#x27;</span> AFTER `deleted`;</span><br></pre></td></tr></table></figure><h3 id="7-2、定义枚举"><a href="#7-2、定义枚举" class="headerlink" title="7.2、定义枚举"></a><strong>7.2</strong>、定义枚举</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">SexEnum</span> <span class="keyword">implements</span> <span class="title class_">IEnum</span>&lt;Integer&gt; &#123; </span><br><span class="line">  MAN(<span class="number">1</span>,<span class="string">&quot;男&quot;</span>),</span><br><span class="line">  WOMAN(<span class="number">2</span>,<span class="string">&quot;女&quot;</span>); </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span> value; </span><br><span class="line">  <span class="keyword">private</span> String desc; </span><br><span class="line">  SexEnum(<span class="type">int</span> value, String desc) &#123; </span><br><span class="line">        <span class="built_in">this</span>.value = value; </span><br><span class="line">        <span class="built_in">this</span>.desc = desc; </span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Override</span> </span><br><span class="line">  <span class="keyword">public</span> Integer <span class="title function_">getValue</span><span class="params">()</span> &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.value; </span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Override</span> </span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.desc; </span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-3、配置"><a href="#7-3、配置" class="headerlink" title="7.3、配置"></a><strong>7.3</strong>、配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 枚举包扫描 </span><br><span class="line">mybatis-plus.type-enums-package=cn.itcast.mp.enums</span><br></pre></td></tr></table></figure><h3 id="7-4、修改实体"><a href="#7-4、修改实体" class="headerlink" title="7.4、修改实体"></a><strong>7.4</strong>、修改实体</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> SexEnum sex;</span><br></pre></td></tr></table></figure><h3 id="7-5、测试"><a href="#7-5、测试" class="headerlink" title="7.5、测试"></a><strong>7.5</strong>、测试</h3><p>测试插入数据：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span>&#123; </span><br><span class="line">  <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(); </span><br><span class="line">  user.setName(<span class="string">&quot;貂蝉&quot;</span>); </span><br><span class="line">  user.setUserName(<span class="string">&quot;diaochan&quot;</span>);</span><br><span class="line">  user.setAge(<span class="number">20</span>); </span><br><span class="line">  user.setEmail(<span class="string">&quot;diaochan@itast.cn&quot;</span>); </span><br><span class="line">  user.setVersion(<span class="number">1</span>); </span><br><span class="line">  user.setSex(SexEnum.WOMAN); </span><br><span class="line">  <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.insert(user); </span><br><span class="line">  System.out.println(<span class="string">&quot;result = &quot;</span> + result); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SQL： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.insert]-[DEBUG] ==&gt; Preparing: INSERT INTO tb_user ( user_name, password, name, age, email, version, sex ) VALUES ( ?, ?, ?, ?, ?, ?, ? )</span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.insert]-[DEBUG] ==&gt; Parameters: diaochan(String), 123456(String), 貂蝉(String), 20(Integer), diaochan@itast.cn(String), 1(Integer), 2(Integer)</span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.insert]-[DEBUG] &lt;== Updates: 1</span><br></pre></td></tr></table></figure><p>查询：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectById</span><span class="params">()</span>&#123; </span><br><span class="line">  <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.selectById(<span class="number">2L</span>); </span><br><span class="line">  System.out.println(user); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.selectById]-[DEBUG] ==&gt; Preparing: SELECT id,user_name,password,name,age,email,version,deleted,sex FROM tb_user WHERE id=? AND deleted=0 </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.selectById]-[DEBUG] ==&gt; Parameters: 2(Long) </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.selectById]-[DEBUG] &lt;== Total: 1 </span><br><span class="line">User(id=2, userName=lisi, password=123456, name=李四, age=30, email=test2@itcast.cn, address=null, version=2, deleted=0, sex=女)</span><br></pre></td></tr></table></figure><p>从测试可以看出，可以很方便的使用枚举了。</p><p>查询条件时也是有效的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectBySex</span><span class="params">()</span> &#123; </span><br><span class="line">  QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;(); </span><br><span class="line">  </span><br><span class="line">  wrapper.eq(<span class="string">&quot;sex&quot;</span>, SexEnum.WOMAN); </span><br><span class="line">  </span><br><span class="line">  List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectList(wrapper); </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> (User user : users) &#123; </span><br><span class="line">    System.out.println(user); </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SQL： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.selectList]-[DEBUG] ==&gt; Preparing: SELECT id,user_name,password,name,age,email,version,deleted,sex FROM tb_user WHERE deleted=0 AND sex = ?</span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.selectList]-[DEBUG] ==&gt; Parameters: 2(Integer) </span><br><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.selectList]-[DEBUG] &lt;== Total: 3</span><br></pre></td></tr></table></figure><h2 id="8、代码生成器"><a href="#8、代码生成器" class="headerlink" title="8、代码生成器"></a><strong>8</strong>、代码生成器</h2><p>AutoGenerator 是 MyBatis-Plus 的代码生成器，通过 AutoGenerator 可以快速生成 Entity、Mapper、MapperXML、Service、Controller 等各个模块的代码，极大的提升了开发效率。</p><h3 id="8-1、创建工程"><a href="#8-1、创建工程" class="headerlink" title="8.1、创建工程"></a><strong>8.1</strong>、创建工程</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span> <span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span> <span class="tag">&lt;<span class="name">parent</span>&gt;</span> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="tag">&lt;/<span class="name">parent</span>&gt;</span> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.itcast.mp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itcast-mp-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> <span class="comment">&lt;!--mybatis-plus的springboot支持--&gt;</span> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> <span class="comment">&lt;!--mysql驱动--&gt;</span> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span> <span class="tag">&lt;<span class="name">build</span>&gt;</span><span class="tag">&lt;<span class="name">plugins</span>&gt;</span> <span class="tag">&lt;<span class="name">plugin</span>&gt;</span> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span> <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span> <span class="tag">&lt;/<span class="name">build</span>&gt;</span> <span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-2、代码"><a href="#8-2、代码" class="headerlink" title="8.2、代码"></a>8.2、代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*** &lt;p&gt; * mysql 代码生成器演示例子 * &lt;/p&gt; */</span> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MysqlGenerator</span> &#123; <span class="comment">/*** &lt;p&gt; * 读取控制台内容 * &lt;/p&gt; */</span> <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">scanner</span><span class="params">(String tip)</span> &#123; <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in); <span class="type">StringBuilder</span> <span class="variable">help</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(); help.append(<span class="string">&quot;请输入&quot;</span> + tip + <span class="string">&quot;：&quot;</span>); System.out.println(help.toString()); <span class="keyword">if</span> (scanner.hasNext()) &#123; <span class="type">String</span> <span class="variable">ipt</span> <span class="operator">=</span> scanner.next();<span class="keyword">if</span> (StringUtils.isNotEmpty(ipt)) &#123; <span class="keyword">return</span> ipt; &#125; &#125;<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusException</span>(<span class="string">&quot;请输入正确的&quot;</span> + tip + <span class="string">&quot;！&quot;</span>); &#125;<span class="comment">/*** RUN THIS */</span> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123; <span class="comment">// 代码生成器</span></span><br><span class="line">  <span class="type">AutoGenerator</span> <span class="variable">mpg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>(); <span class="comment">// 全局配置 </span></span><br><span class="line">  <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>(); <span class="type">String</span> <span class="variable">projectPath</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;user.dir&quot;</span>); gc.setOutputDir(projectPath + <span class="string">&quot;/src/main/java&quot;</span>); gc.setAuthor(<span class="string">&quot;itcast&quot;</span>); gc.setOpen(<span class="literal">false</span>); mpg.setGlobalConfig(gc); </span><br><span class="line">  <span class="comment">// 数据源配置 </span></span><br><span class="line">  <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>(); dsc.setUrl(<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mp? useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8&quot;</span>); <span class="comment">// dsc.setSchemaName(&quot;public&quot;); </span></span><br><span class="line">  dsc.setDriverName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>); dsc.setUsername(<span class="string">&quot;root&quot;</span>); dsc.setPassword(<span class="string">&quot;root&quot;</span>); mpg.setDataSource(dsc); <span class="comment">// 包配置</span></span><br><span class="line">  <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>(); pc.setModuleName(scanner(<span class="string">&quot;模块名&quot;</span>)); pc.setParent(<span class="string">&quot;cn.itcast.mp.generator&quot;</span>); mpg.setPackageInfo(pc); <span class="comment">// 自定义配置</span></span><br><span class="line">  <span class="type">InjectionConfig</span> <span class="variable">cfg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InjectionConfig</span>() &#123; <span class="meta">@Override</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initMap</span><span class="params">()</span> &#123; <span class="comment">// to do nothing </span></span><br><span class="line">  &#125; &#125;;List&lt;FileOutConfig&gt; focList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(); focList.add(<span class="keyword">new</span> <span class="title class_">FileOutConfig</span>(<span class="string">&quot;/templates/mapper.xml.ftl&quot;</span>) &#123; <span class="meta">@Override</span> <span class="keyword">public</span> String <span class="title function_">outputFile</span><span class="params">(TableInfo tableInfo)</span> &#123; <span class="comment">// 自定义输入文件名称 </span></span><br><span class="line">    <span class="keyword">return</span> projectPath + <span class="string">&quot;/itcast-mp- generator/src/main/resources/mapper/&quot;</span> + pc.getModuleName()+ <span class="string">&quot;/&quot;</span> + tableInfo.getEntityName() + <span class="string">&quot;Mapper&quot;</span> + StringPool.DOT_XML; &#125; &#125;); cfg.setFileOutConfigList(focList); mpg.setCfg(cfg); mpg.setTemplate(<span class="keyword">new</span> <span class="title class_">TemplateConfig</span>().setXml(<span class="literal">null</span>)); <span class="comment">// 策略配置</span></span><br><span class="line">  <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>(); strategy.setNaming(NamingStrategy.underline_to_camel); strategy.setColumnNaming(NamingStrategy.underline_to_camel); <span class="comment">//strategy.setSuperEntityClass(&quot;com.baomidou.mybatisplus.samples.generator.common.BaseE ntity&quot;);</span></span><br><span class="line">  strategy.setEntityLombokModel(<span class="literal">true</span>);</span><br><span class="line">  <span class="comment">//strategy.setSuperControllerClass(&quot;com.baomidou.mybatisplus.samples.generator.common.B aseController&quot;); </span></span><br><span class="line">  strategy.setInclude(scanner(<span class="string">&quot;表名&quot;</span>)); strategy.setSuperEntityColumns(<span class="string">&quot;id&quot;</span>); strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>); strategy.setTablePrefix(pc.getModuleName() + <span class="string">&quot;_&quot;</span>); mpg.setStrategy(strategy); <span class="comment">// 选择 freemarker 引擎需要指定如下加，注意 pom 依赖必须有！</span></span><br><span class="line">  mpg.setTemplateEngine(<span class="keyword">new</span> <span class="title class_">FreemarkerTemplateEngine</span>()); mpg.execute(); &#125; &#125;</span><br></pre></td></tr></table></figure><h2 id="9、MybatisX-快速开发插件"><a href="#9、MybatisX-快速开发插件" class="headerlink" title="9、MybatisX 快速开发插件"></a><strong>9</strong>、MybatisX <strong>快速开发插件</strong></h2><p>MybatisX 是一款基于 IDEA 的快速开发插件，为效率而生。</p><p>安装方法：打开 IDEA，进入 File -&gt; Settings -&gt; Plugins -&gt; Browse Repositories，输入 mybatisx 搜索并安装。</p><p>功能：</p><ul><li><p>Java 与 XML 调回跳转</p></li><li><p>Mapper 方法自动生成 XML</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1、ActiveRecord&quot;&gt;&lt;a href=&quot;#1、ActiveRecord&quot; class=&quot;headerlink&quot; title=&quot;1、ActiveRecord&quot;&gt;&lt;/a&gt;&lt;strong&gt;1&lt;/strong&gt;、ActiveRecord&lt;/h2&gt;&lt;p&gt;Activ</summary>
      
    
    
    
    
    <category term="Mybatis-plus" scheme="http://example.com/tags/Mybatis-plus/"/>
    
  </entry>
  
  <entry>
    <title>反思（与长辈争吵）</title>
    <link href="http://example.com/2022/06/19/%E5%8F%8D%E6%80%9D%EF%BC%88%E4%B8%8E%E9%95%BF%E8%BE%88%E4%BA%89%E5%90%B5%EF%BC%89/"/>
    <id>http://example.com/2022/06/19/%E5%8F%8D%E6%80%9D%EF%BC%88%E4%B8%8E%E9%95%BF%E8%BE%88%E4%BA%89%E5%90%B5%EF%BC%89/</id>
    <published>2022-06-19T15:02:09.000Z</published>
    <updated>2022-06-19T15:16:12.361Z</updated>
    
    <content type="html"><![CDATA[<p>最近经常与长辈发生争吵，先是与酒桌上，关于朋友的定义，在就是在修理厂里关于努力重要还是运气重要的争吵。</p><p>事后经常陷入后悔，先是长辈本来就是不相关的人，你的人生他左右不了，他的人生你左右不了，在就是长辈的社会资源本来比你多，你得罪他没有任何好处，最后往往是互相说服不了谁，变得不欢而散。</p><p>关于自己的论点有时也觉得漏洞百出，是自己知识体系还是不扎实，刚刚有点东西就觉得飘飘然了，这样很不对。</p><h4 id="反思1-还是自己不够硬，自己知识体系不扎实，便跟人家盲目争吵，还是要继续学习，保持谦虚态度。"><a href="#反思1-还是自己不够硬，自己知识体系不扎实，便跟人家盲目争吵，还是要继续学习，保持谦虚态度。" class="headerlink" title="反思1:还是自己不够硬，自己知识体系不扎实，便跟人家盲目争吵，还是要继续学习，保持谦虚态度。"></a>反思1:还是自己不够硬，自己知识体系不扎实，便跟人家盲目争吵，还是要继续学习，保持谦虚态度。</h4><h4 id="反思2-听一个人讲完是最起码的尊重，不能打断人家，不能全盘否定别人的想法，肯定他人正确的地方，再然后，跟他讲，但是我觉得……，您觉得呢？"><a href="#反思2-听一个人讲完是最起码的尊重，不能打断人家，不能全盘否定别人的想法，肯定他人正确的地方，再然后，跟他讲，但是我觉得……，您觉得呢？" class="headerlink" title="反思2:听一个人讲完是最起码的尊重，不能打断人家，不能全盘否定别人的想法，肯定他人正确的地方，再然后，跟他讲，但是我觉得……，您觉得呢？"></a>反思2:听一个人讲完是最起码的尊重，不能打断人家，不能全盘否定别人的想法，肯定他人正确的地方，再然后，跟他讲，但是我觉得……，您觉得呢？</h4><h4 id="反思3-不要争执，因为争执是不会有结果的，只会让事情向坏的那方面发展，与所有人适用。"><a href="#反思3-不要争执，因为争执是不会有结果的，只会让事情向坏的那方面发展，与所有人适用。" class="headerlink" title="反思3:不要争执，因为争执是不会有结果的，只会让事情向坏的那方面发展，与所有人适用。"></a>反思3:不要争执，因为争执是不会有结果的，只会让事情向坏的那方面发展，与所有人适用。</h4><h3 id="反思4-少自以为是，你其实连个jb都不是。"><a href="#反思4-少自以为是，你其实连个jb都不是。" class="headerlink" title="反思4:少自以为是，你其实连个jb都不是。"></a>反思4:少自以为是，你其实连个jb都不是。</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近经常与长辈发生争吵，先是与酒桌上，关于朋友的定义，在就是在修理厂里关于努力重要还是运气重要的争吵。&lt;/p&gt;
&lt;p&gt;事后经常陷入后悔，先是长辈本来就是不相关的人，你的人生他左右不了，他的人生你左右不了，在就是长辈的社会资源本来比你多，你得罪他没有任何好处，最后往往是互相说</summary>
      
    
    
    
    
    <category term="反思" scheme="http://example.com/tags/%E5%8F%8D%E6%80%9D/"/>
    
  </entry>
  
  <entry>
    <title>四级词汇41-48串词</title>
    <link href="http://example.com/2022/06/13/%E5%9B%9B%E7%BA%A7%E8%AF%8D%E6%B1%8741-48%E4%B8%B2%E8%AF%8D/"/>
    <id>http://example.com/2022/06/13/%E5%9B%9B%E7%BA%A7%E8%AF%8D%E6%B1%8741-48%E4%B8%B2%E8%AF%8D/</id>
    <published>2022-06-13T13:41:16.000Z</published>
    <updated>2022-06-24T02:12:56.266Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第41串词：vary-vari-：变化"><a href="#第41串词：vary-vari-：变化" class="headerlink" title="第41串词：vary (vari-：变化)"></a>第41串词：vary (vari-：变化)</h3><h4 id="various-adj-各种各样的"><a href="#various-adj-各种各样的" class="headerlink" title="various    adj.各种各样的"></a>various    adj.各种各样的</h4><ul><li>-ous：形容词的</li></ul><h4 id="variety-n-多样化"><a href="#variety-n-多样化" class="headerlink" title="variety    n.多样化"></a>variety    n.多样化</h4><h4 id="vary-v-变化，变更（-x3D-be-different）"><a href="#vary-v-变化，变更（-x3D-be-different）" class="headerlink" title="vary    v.变化，变更（&#x3D; be different）"></a>vary    v.变化，变更（&#x3D; be different）</h4><h4 id="inbariably-adv-始终如一地（-x3D-always）"><a href="#inbariably-adv-始终如一地（-x3D-always）" class="headerlink" title="inbariably    adv.始终如一地（&#x3D; always）"></a>inbariably    adv.始终如一地（&#x3D; always）</h4><ul><li><h5 id="in-x3D-no"><a href="#in-x3D-no" class="headerlink" title="in-&#x3D;no"></a>in-&#x3D;no</h5></li></ul><h4 id="variable-adj-多变的（often-changing）"><a href="#variable-adj-多变的（often-changing）" class="headerlink" title="variable    adj.多变的（often changing）"></a>variable    adj.多变的（often changing）</h4><h3 id="第42串词：opt-x2F-apt（to-choose-选-x2F-fit-适当的-）"><a href="#第42串词：opt-x2F-apt（to-choose-选-x2F-fit-适当的-）" class="headerlink" title="第42串词：opt&#x2F;apt（to choose 选 &#x2F; fit 适当的 ）"></a>第42串词：opt&#x2F;apt（to choose 选 &#x2F; fit 适当的 ）</h3><h4 id="option-n-选择的"><a href="#option-n-选择的" class="headerlink" title="option    n.选择的"></a>option    n.选择的</h4><h4 id="optionnal-adj-可选择的；选修的"><a href="#optionnal-adj-可选择的；选修的" class="headerlink" title="optionnal    adj.可选择的；选修的"></a>optionnal    adj.可选择的；选修的</h4><ul><li><h5 id="nal-x3D-形容词词尾"><a href="#nal-x3D-形容词词尾" class="headerlink" title="-nal&#x3D;形容词词尾"></a>-nal&#x3D;形容词词尾</h5></li></ul><h4 id="adopt-v-收养"><a href="#adopt-v-收养" class="headerlink" title="adopt    v.收养"></a>adopt    v.收养</h4><ul><li><h5 id="ad-x3D-to-x3D-去"><a href="#ad-x3D-to-x3D-去" class="headerlink" title="ad-&#x3D; to &#x3D; 去"></a>ad-&#x3D; to &#x3D; 去</h5></li></ul><h4 id="adapt-v-使适应；改编"><a href="#adapt-v-使适应；改编" class="headerlink" title="adapt    v.使适应；改编"></a>adapt    v.使适应；改编</h4><h3 id="第43串词：-sent-（存在）"><a href="#第43串词：-sent-（存在）" class="headerlink" title="第43串词：-sent - （存在）"></a>第43串词：-sent - （存在）</h3><h4 id="present-v-呈现；提出；赠送（-x3D-give）"><a href="#present-v-呈现；提出；赠送（-x3D-give）" class="headerlink" title="present    v.呈现；提出；赠送（&#x3D; give）"></a>present    v.呈现；提出；赠送（&#x3D; give）</h4><ul><li><h5 id="pre-：before-x2F-in-front-面前"><a href="#pre-：before-x2F-in-front-面前" class="headerlink" title="pre-：before &#x2F; in front 面前"></a>pre-：before &#x2F; in front 面前</h5></li></ul><h4 id="adj-现在的；出席的；n-现在；礼物"><a href="#adj-现在的；出席的；n-现在；礼物" class="headerlink" title="adj.现在的；出席的；n.现在；礼物"></a>adj.现在的；出席的；n.现在；礼物</h4><h4 id="presence-n-存在；出席"><a href="#presence-n-存在；出席" class="headerlink" title="presence    n.存在；出席"></a>presence    n.存在；出席</h4><h4 id="presentation-n-展示；陈述"><a href="#presentation-n-展示；陈述" class="headerlink" title="presentation    n.展示；陈述"></a>presentation    n.展示；陈述</h4><h4 id="absent-adj-缺席的；缺乏的-v-缺席"><a href="#absent-adj-缺席的；缺乏的-v-缺席" class="headerlink" title="absent    adj.缺席的；缺乏的 v.缺席"></a>absent    adj.缺席的；缺乏的 v.缺席</h4><ul><li><h5 id="ab-：away-from-远离-x2F-off-脱离"><a href="#ab-：away-from-远离-x2F-off-脱离" class="headerlink" title="ab -：away from 远离 &#x2F; off 脱离"></a>ab -：away from 远离 &#x2F; off 脱离</h5></li></ul><h4 id="absence-n-缺乏；缺席"><a href="#absence-n-缺乏；缺席" class="headerlink" title="absence    n.缺乏；缺席"></a>absence    n.缺乏；缺席</h4><h4 id="represent-v-代表；描绘"><a href="#represent-v-代表；描绘" class="headerlink" title="represent    v.代表；描绘"></a>represent    v.代表；描绘</h4><h4 id="representative-adj-典型的，有代表性的"><a href="#representative-adj-典型的，有代表性的" class="headerlink" title="representative    adj.典型的，有代表性的"></a>representative    adj.典型的，有代表性的</h4><h4 id="n-代表；典型人物"><a href="#n-代表；典型人物" class="headerlink" title="n.代表；典型人物"></a>n.代表；典型人物</h4><h3 id="第44串词：port-（gate-门，to-carry-搬运）"><a href="#第44串词：port-（gate-门，to-carry-搬运）" class="headerlink" title="第44串词：port （gate 门，to carry 搬运）"></a>第44串词：port （gate 门，to carry 搬运）</h3><h4 id="airport-n-机场"><a href="#airport-n-机场" class="headerlink" title="airport    n.机场"></a>airport    n.机场</h4><h4 id="import-n-进口-v-出口"><a href="#import-n-进口-v-出口" class="headerlink" title="import    n.进口 v.出口"></a>import    n.进口 v.出口</h4><h4 id="export-n-出口-v-出口"><a href="#export-n-出口-v-出口" class="headerlink" title="export    n.出口 v.出口"></a>export    n.出口 v.出口</h4><h4 id="transportation-v-交通；运输工具；运输系统"><a href="#transportation-v-交通；运输工具；运输系统" class="headerlink" title="transportation    v.交通；运输工具；运输系统"></a>transportation    v.交通；运输工具；运输系统</h4><h4 id="transport-v-运输"><a href="#transport-v-运输" class="headerlink" title="transport    v.运输"></a>transport    v.运输</h4><ul><li><h5 id="trans：转移"><a href="#trans：转移" class="headerlink" title="trans：转移"></a>trans：转移</h5></li></ul><h4 id="n-交通运输；交通车辆；运输"><a href="#n-交通运输；交通车辆；运输" class="headerlink" title="n.交通运输；交通车辆；运输"></a>n.交通运输；交通车辆；运输</h4><h4 id="passport-n-护照"><a href="#passport-n-护照" class="headerlink" title="passport    n.护照"></a>passport    n.护照</h4><h4 id="visa-n-签证"><a href="#visa-n-签证" class="headerlink" title="visa    n.签证"></a>visa    n.签证</h4><h3 id="第45串词：str-（to-draw-tight-拉紧）"><a href="#第45串词：str-（to-draw-tight-拉紧）" class="headerlink" title="第45串词：str （to draw tight 拉紧）"></a>第45串词：str （to draw tight 拉紧）</h3><h4 id="stress-n-紧张；压力；强调-v-强调"><a href="#stress-n-紧张；压力；强调-v-强调" class="headerlink" title="stress    n.紧张；压力；强调 v.强调"></a>stress    n.紧张；压力；强调 v.强调</h4><h4 id="stressful-adj-压力重的"><a href="#stressful-adj-压力重的" class="headerlink" title="stressful    adj.压力重的"></a>stressful    adj.压力重的</h4><h4 id="distress-n-忧虑；悲痛"><a href="#distress-n-忧虑；悲痛" class="headerlink" title="distress    n.忧虑；悲痛"></a>distress    n.忧虑；悲痛</h4><ul><li><h5 id="dis-x3D-de-离开"><a href="#dis-x3D-de-离开" class="headerlink" title="dis&#x3D;de    离开"></a>dis&#x3D;de    离开</h5></li></ul><h4 id="strict-adj-严格的"><a href="#strict-adj-严格的" class="headerlink" title="strict    adj.严格的"></a>strict    adj.严格的</h4><h4 id="restrict-v-限制"><a href="#restrict-v-限制" class="headerlink" title="restrict    v.限制"></a>restrict    v.限制</h4><h4 id="restriction-n-限制"><a href="#restriction-n-限制" class="headerlink" title="restriction    n.限制"></a>restriction    n.限制</h4><h4 id="strain-n-压力"><a href="#strain-n-压力" class="headerlink" title="strain    n.压力"></a>strain    n.压力</h4><h4 id="restrain-v-制止；抑制"><a href="#restrain-v-制止；抑制" class="headerlink" title="restrain    v.制止；抑制"></a>restrain    v.制止；抑制</h4><h4 id="straight-adv-笔直的；径直的"><a href="#straight-adv-笔直的；径直的" class="headerlink" title="straight    adv.笔直的；径直的"></a>straight    adv.笔直的；径直的</h4><h4 id="string-n-线；一系列"><a href="#string-n-线；一系列" class="headerlink" title="string    n.线；一系列"></a>string    n.线；一系列</h4><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><h4 id="ban-v-x2F-n-官方禁止；取缔"><a href="#ban-v-x2F-n-官方禁止；取缔" class="headerlink" title="ban    v.&#x2F;n. 官方禁止；取缔"></a>ban    v.&#x2F;n. 官方禁止；取缔</h4><h4 id="prohibit-v-禁止"><a href="#prohibit-v-禁止" class="headerlink" title="prohibit    v.禁止"></a>prohibit    v.禁止</h4><h4 id="block-n-块；障碍；街区-v-阻碍"><a href="#block-n-块；障碍；街区-v-阻碍" class="headerlink" title="block    n.块；障碍；街区 v.阻碍"></a>block    n.块；障碍；街区 v.阻碍</h4><h4 id="hinder-v-阻碍；妨碍"><a href="#hinder-v-阻碍；妨碍" class="headerlink" title="hinder    v.阻碍；妨碍"></a>hinder    v.阻碍；妨碍</h4><ul><li><h5 id="hind-x3D-behind-后面"><a href="#hind-x3D-behind-后面" class="headerlink" title="hind&#x3D;behind    后面"></a>hind&#x3D;behind    后面</h5></li></ul><h3 id="第46串词：tribut-to-give，to-pay-给予"><a href="#第46串词：tribut-to-give，to-pay-给予" class="headerlink" title="第46串词：tribut    (to give，to pay 给予)"></a>第46串词：tribut    (to give，to pay 给予)</h3><h4 id="contribute-v-捐赠；贡献；投稿"><a href="#contribute-v-捐赠；贡献；投稿" class="headerlink" title="contribute    v.捐赠；贡献；投稿"></a>contribute    v.捐赠；贡献；投稿</h4><h4 id="contribution-n-贡献；捐款"><a href="#contribution-n-贡献；捐款" class="headerlink" title="contribution    n.贡献；捐款"></a>contribution    n.贡献；捐款</h4><h4 id="attribute-v-把…归因于-n-特质"><a href="#attribute-v-把…归因于-n-特质" class="headerlink" title="attribute    v.把…归因于  n.特质"></a>attribute    v.把…归因于  n.特质</h4><ul><li><h5 id="at-x3D-强调-x2F-冲着某个方向"><a href="#at-x3D-强调-x2F-冲着某个方向" class="headerlink" title="at&#x3D;强调&#x2F;冲着某个方向"></a>at&#x3D;强调&#x2F;冲着某个方向</h5></li></ul><h4 id="distribute-v-分发；分配"><a href="#distribute-v-分发；分配" class="headerlink" title="distribute    v.分发；分配"></a>distribute    v.分发；分配</h4><h4 id="distribution-n-分发；分配"><a href="#distribution-n-分发；分配" class="headerlink" title="distribution    n.分发；分配"></a>distribution    n.分发；分配</h4><h3 id="第47串词：mob-x2F-mot（to-move-运动）"><a href="#第47串词：mob-x2F-mot（to-move-运动）" class="headerlink" title="第47串词：mob&#x2F;mot（to move 运动）"></a>第47串词：mob&#x2F;mot（to move 运动）</h3><h4 id="promote-v-晋升；促进，促销"><a href="#promote-v-晋升；促进，促销" class="headerlink" title="promote    v.晋升；促进，促销"></a>promote    v.晋升；促进，促销</h4><h4 id="promotion-n-晋升；促销；促进"><a href="#promotion-n-晋升；促销；促进" class="headerlink" title="promotion    n.晋升；促销；促进"></a>promotion    n.晋升；促销；促进</h4><h4 id="emotion-n-情绪（-x3D-any-strong-feeling）"><a href="#emotion-n-情绪（-x3D-any-strong-feeling）" class="headerlink" title="emotion    n.情绪（&#x3D; any strong feeling）"></a>emotion    n.情绪（&#x3D; any strong feeling）</h4><h4 id="emotional-adj-情绪的；情绪激动的；情感的"><a href="#emotional-adj-情绪的；情绪激动的；情感的" class="headerlink" title="emotional    adj.情绪的；情绪激动的；情感的"></a>emotional    adj.情绪的；情绪激动的；情感的</h4><h4 id="motivate-v-激励；激发"><a href="#motivate-v-激励；激发" class="headerlink" title="motivate    v.激励；激发"></a>motivate    v.激励；激发</h4><ul><li><h5 id="ate-x3D-动词结尾"><a href="#ate-x3D-动词结尾" class="headerlink" title="ate&#x3D;动词结尾"></a>ate&#x3D;动词结尾</h5></li></ul><h4 id="motive-n-动机；原因"><a href="#motive-n-动机；原因" class="headerlink" title="motive    n.动机；原因"></a>motive    n.动机；原因</h4><h4 id="motivation-n-动力；积极性；动机"><a href="#motivation-n-动力；积极性；动机" class="headerlink" title="motivation    n.动力；积极性；动机"></a>motivation    n.动力；积极性；动机</h4><h4 id="remote-adj-偏远的；久远的"><a href="#remote-adj-偏远的；久远的" class="headerlink" title="remote    adj.偏远的；久远的"></a>remote    adj.偏远的；久远的</h4><h4 id="mobile-adj-可移动的"><a href="#mobile-adj-可移动的" class="headerlink" title="mobile    adj.可移动的"></a>mobile    adj.可移动的</h4><h4 id="mobility-n-流动的"><a href="#mobility-n-流动的" class="headerlink" title="mobility    n.流动的"></a>mobility    n.流动的</h4><h4 id="snowmobile-n-摩托雪橇"><a href="#snowmobile-n-摩托雪橇" class="headerlink" title="snowmobile    n.摩托雪橇"></a>snowmobile    n.摩托雪橇</h4><h4 id="automobile-n-汽车"><a href="#automobile-n-汽车" class="headerlink" title="automobile    n.汽车"></a>automobile    n.汽车</h4><h4 id="motion-n-提议；运动；移动"><a href="#motion-n-提议；运动；移动" class="headerlink" title="motion    n.提议；运动；移动"></a>motion    n.提议；运动；移动</h4><h3 id="第48串词：-ear"><a href="#第48串词：-ear" class="headerlink" title="第48串词：-ear"></a>第48串词：-ear</h3><h4 id="tear-v-撕裂-n-眼泪"><a href="#tear-v-撕裂-n-眼泪" class="headerlink" title="tear    v.撕裂 n.眼泪"></a>tear    v.撕裂 n.眼泪</h4><h4 id="wear-v-穿；留-发，须等-；面带"><a href="#wear-v-穿；留-发，须等-；面带" class="headerlink" title="wear    v.穿；留(发，须等)；面带"></a>wear    v.穿；留(发，须等)；面带</h4><h4 id="fear-n-害怕-v-害怕"><a href="#fear-n-害怕-v-害怕" class="headerlink" title="fear    n.害怕 v.害怕"></a>fear    n.害怕 v.害怕</h4><h4 id="clear-adj-清楚的，明确的"><a href="#clear-adj-清楚的，明确的" class="headerlink" title="clear    adj.清楚的，明确的"></a>clear    adj.清楚的，明确的</h4><h4 id="bear-v-承受-生育"><a href="#bear-v-承受-生育" class="headerlink" title="bear    v.承受;生育"></a>bear    v.承受;生育</h4><h4 id="bearable-adj-可忍受的"><a href="#bearable-adj-可忍受的" class="headerlink" title="bearable    adj.可忍受的"></a>bearable    adj.可忍受的</h4><h4 id="dear-adj-亲爱的；昂贵的"><a href="#dear-adj-亲爱的；昂贵的" class="headerlink" title="dear    adj.亲爱的；昂贵的"></a>dear    adj.亲爱的；昂贵的</h4><h4 id="gear-n-齿轮；挡"><a href="#gear-n-齿轮；挡" class="headerlink" title="gear    n.齿轮；挡"></a>gear    n.齿轮；挡</h4><h4 id="swear-v-发誓要；诅咒"><a href="#swear-v-发誓要；诅咒" class="headerlink" title="swear    v.发誓要；诅咒"></a>swear    v.发誓要；诅咒</h4><h4 id="appear-v-看来；好像"><a href="#appear-v-看来；好像" class="headerlink" title="appear    v.看来；好像"></a>appear    v.看来；好像</h4><h4 id="disappear-v-消失"><a href="#disappear-v-消失" class="headerlink" title="disappear    v.消失"></a>disappear    v.消失</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;第41串词：vary-vari-：变化&quot;&gt;&lt;a href=&quot;#第41串词：vary-vari-：变化&quot; class=&quot;headerlink&quot; title=&quot;第41串词：vary (vari-：变化)&quot;&gt;&lt;/a&gt;第41串词：vary (vari-：变化)&lt;/h3&gt;&lt;</summary>
      
    
    
    
    
    <category term="英语四级" scheme="http://example.com/tags/%E8%8B%B1%E8%AF%AD%E5%9B%9B%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>四级词汇34-40串词</title>
    <link href="http://example.com/2022/06/10/%E5%9B%9B%E7%BA%A7%E8%AF%8D%E6%B1%8734-40%E4%B8%B2%E8%AF%8D/"/>
    <id>http://example.com/2022/06/10/%E5%9B%9B%E7%BA%A7%E8%AF%8D%E6%B1%8734-40%E4%B8%B2%E8%AF%8D/</id>
    <published>2022-06-10T13:39:30.000Z</published>
    <updated>2022-06-11T15:42:43.925Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第34串词：demo"><a href="#第34串词：demo" class="headerlink" title="第34串词：demo"></a>第34串词：demo</h3><h4 id="academy-n-学院"><a href="#academy-n-学院" class="headerlink" title="academy    n.学院"></a>academy    n.学院</h4><h4 id="demonstrate-v-证明；展示；示威游行"><a href="#demonstrate-v-证明；展示；示威游行" class="headerlink" title="demonstrate    v.证明；展示；示威游行"></a>demonstrate    v.证明；展示；示威游行</h4><ul><li><h5 id="de-强调"><a href="#de-强调" class="headerlink" title="de-:强调"></a>de-:强调</h5></li><li><h5 id="mon-：警告"><a href="#mon-：警告" class="headerlink" title="mon-：警告"></a>mon-：警告</h5></li></ul><h4 id="demonstration-n-示范；示威游行"><a href="#demonstration-n-示范；示威游行" class="headerlink" title="demonstration    n.示范；示威游行"></a>demonstration    n.示范；示威游行</h4><h4 id="democratic-adj-民主的"><a href="#democratic-adj-民主的" class="headerlink" title="democratic    adj.民主的"></a>democratic    adj.民主的</h4><h4 id="democracy-n-民主；民主政治"><a href="#democracy-n-民主；民主政治" class="headerlink" title="democracy    n.民主；民主政治"></a>democracy    n.民主；民主政治</h4><ul><li><h5 id="demo-人民"><a href="#demo-人民" class="headerlink" title="demo-:人民"></a>demo-:人民</h5></li><li><h5 id="cracy：统治"><a href="#cracy：统治" class="headerlink" title="-cracy：统治"></a>-cracy：统治</h5></li></ul><h4 id="demo-n-演示；样本唱片"><a href="#demo-n-演示；样本唱片" class="headerlink" title="demo    n.演示；样本唱片"></a>demo    n.演示；样本唱片</h4><h4 id="拓展："><a href="#拓展：" class="headerlink" title="拓展："></a>拓展：</h4><h4 id="campus-n-大学-校园"><a href="#campus-n-大学-校园" class="headerlink" title="campus    n.(大学)校园"></a>campus    n.(大学)校园</h4><h4 id="university-n-综合性-大学"><a href="#university-n-综合性-大学" class="headerlink" title="university    n.(综合性)大学"></a>university    n.(综合性)大学</h4><h4 id="institute-n-学院；研究院；研究所"><a href="#institute-n-学院；研究院；研究所" class="headerlink" title="institute    n.学院；研究院；研究所"></a>institute    n.学院；研究院；研究所</h4><h4 id="school-n-学校；学院；学派；鱼群"><a href="#school-n-学校；学院；学派；鱼群" class="headerlink" title="school    n.学校；学院；学派；鱼群"></a>school    n.学校；学院；学派；鱼群</h4><h3 id="第35串词：mark-标记，作记号"><a href="#第35串词：mark-标记，作记号" class="headerlink" title="第35串词：mark(标记，作记号)"></a>第35串词：mark(标记，作记号)</h3><h4 id="mark-n-符号；标志；分数-v-评论"><a href="#mark-n-符号；标志；分数-v-评论" class="headerlink" title="mark    n.符号；标志；分数    v.评论"></a>mark    n.符号；标志；分数    v.评论</h4><h4 id="remark-n-言辞-v-评论（-x3D-comment）"><a href="#remark-n-言辞-v-评论（-x3D-comment）" class="headerlink" title="remark    n.言辞 v.评论（&#x3D;comment）"></a>remark    n.言辞 v.评论（&#x3D;comment）</h4><h4 id="remarkable-adj-卓越的；非凡的"><a href="#remarkable-adj-卓越的；非凡的" class="headerlink" title="remarkable    adj.卓越的；非凡的"></a>remarkable    adj.卓越的；非凡的</h4><h4 id="margin-n-边缘；利润；页边的空白"><a href="#margin-n-边缘；利润；页边的空白" class="headerlink" title="margin    n.边缘；利润；页边的空白"></a>margin    n.边缘；利润；页边的空白</h4><h4 id="marginal-adj-微不足道的；边际的"><a href="#marginal-adj-微不足道的；边际的" class="headerlink" title="marginal    adj.微不足道的；边际的"></a>marginal    adj.微不足道的；边际的</h4><h3 id="第36串词：cred（to-believe，to-trust-相信）"><a href="#第36串词：cred（to-believe，to-trust-相信）" class="headerlink" title="第36串词：cred（to believe，to trust 相信）"></a>第36串词：cred（to believe，to trust 相信）</h3><h4 id="credit-n-信用；学分-v-相信；赞颂"><a href="#credit-n-信用；学分-v-相信；赞颂" class="headerlink" title="credit    n.信用；学分 v.相信；赞颂"></a>credit    n.信用；学分 v.相信；赞颂</h4><h4 id="Incredible-adj-难以置信；惊人的（-x3D-inbeliecable）"><a href="#Incredible-adj-难以置信；惊人的（-x3D-inbeliecable）" class="headerlink" title="Incredible     adj.难以置信；惊人的（&#x3D;inbeliecable）"></a>Incredible     adj.难以置信；惊人的（&#x3D;inbeliecable）</h4><h4 id="拓展：-1"><a href="#拓展：-1" class="headerlink" title="拓展："></a>拓展：</h4><h4 id="believe-v-相信；认为"><a href="#believe-v-相信；认为" class="headerlink" title="believe    v.相信；认为"></a>believe    v.相信；认为</h4><h4 id="belief-n-信心；看法；信仰"><a href="#belief-n-信心；看法；信仰" class="headerlink" title="belief    n.信心；看法；信仰"></a>belief    n.信心；看法；信仰</h4><h4 id="trust-v-信任-n-信任"><a href="#trust-v-信任-n-信任" class="headerlink" title="trust    v.信任    n.信任"></a>trust    v.信任    n.信任</h4><h4 id="convince-v-使相信-说服"><a href="#convince-v-使相信-说服" class="headerlink" title="convince    v.使相信,说服"></a>convince    v.使相信,说服</h4><h4 id="persuade-v-说服；劝说"><a href="#persuade-v-说服；劝说" class="headerlink" title="persuade    v.说服；劝说"></a>persuade    v.说服；劝说</h4><h4 id="rely-v-依靠，依赖"><a href="#rely-v-依靠，依赖" class="headerlink" title="rely    v.依靠，依赖"></a>rely    v.依靠，依赖</h4><h4 id="reliable-adj-可靠的；可信赖的"><a href="#reliable-adj-可靠的；可信赖的" class="headerlink" title="reliable    adj.可靠的；可信赖的"></a>reliable    adj.可靠的；可信赖的</h4><h3 id="第37串词：press-to-press-压"><a href="#第37串词：press-to-press-压" class="headerlink" title="第37串词：press(to press 压)"></a>第37串词：press(to press 压)</h3><h4 id="pressure-n-压力"><a href="#pressure-n-压力" class="headerlink" title="pressure    n.压力"></a>pressure    n.压力</h4><h4 id="press-v-压；按；逼迫-n-报刊；印刷媒体；新闻界"><a href="#press-v-压；按；逼迫-n-报刊；印刷媒体；新闻界" class="headerlink" title="press    v.压；按；逼迫    n.报刊；印刷媒体；新闻界"></a>press    v.压；按；逼迫    n.报刊；印刷媒体；新闻界</h4><h4 id="pressing-adj-紧急的；急迫的"><a href="#pressing-adj-紧急的；急迫的" class="headerlink" title="pressing    adj.紧急的；急迫的"></a>pressing    adj.紧急的；急迫的</h4><h4 id="express-v-表达；快递-n-快递"><a href="#express-v-表达；快递-n-快递" class="headerlink" title="express    v.表达；快递    n.快递"></a>express    v.表达；快递    n.快递</h4><h4 id="expression-n-表达；表情"><a href="#expression-n-表达；表情" class="headerlink" title="expression    n.表达；表情"></a>expression    n.表达；表情</h4><h4 id="depress-v-使沮丧；使萧条"><a href="#depress-v-使沮丧；使萧条" class="headerlink" title="depress    v.使沮丧；使萧条"></a>depress    v.使沮丧；使萧条</h4><ul><li><h5 id="de-：向下"><a href="#de-：向下" class="headerlink" title="de-：向下"></a>de-：向下</h5></li></ul><h4 id="depression-n-沮丧，忧愁"><a href="#depression-n-沮丧，忧愁" class="headerlink" title="depression    n.沮丧，忧愁"></a>depression    n.沮丧，忧愁</h4><h4 id="impress-v-给人印象；打动；使铭记"><a href="#impress-v-给人印象；打动；使铭记" class="headerlink" title="impress    v.给人印象；打动；使铭记"></a>impress    v.给人印象；打动；使铭记</h4><ul><li><h5 id="im-：进去"><a href="#im-：进去" class="headerlink" title="im-：进去"></a>im-：进去</h5></li></ul><h4 id="impression-n-印象；影响"><a href="#impression-n-印象；影响" class="headerlink" title="impression    n.印象；影响"></a>impression    n.印象；影响</h4><h4 id="impressive-adj-令人难忘的；令人赞叹的"><a href="#impressive-adj-令人难忘的；令人赞叹的" class="headerlink" title="impressive    adj.令人难忘的；令人赞叹的"></a>impressive    adj.令人难忘的；令人赞叹的</h4><h3 id="第38串词：pose-（to-put-to-place-放，置）"><a href="#第38串词：pose-（to-put-to-place-放，置）" class="headerlink" title="第38串词：pose （to put,to place 放，置）"></a>第38串词：pose （to put,to place 放，置）</h3><h4 id="purpose-n-目的；用途"><a href="#purpose-n-目的；用途" class="headerlink" title="purpose    n.目的；用途"></a>purpose    n.目的；用途</h4><ul><li><h5 id="pur-x3D-pro-：向前"><a href="#pur-x3D-pro-：向前" class="headerlink" title="pur-&#x3D;pro-：向前"></a>pur-&#x3D;pro-：向前</h5></li></ul><h4 id="suppose-v-假设；认为"><a href="#suppose-v-假设；认为" class="headerlink" title="suppose    v.假设；认为"></a>suppose    v.假设；认为</h4><ul><li><h5 id="sup-x3D-sub-下"><a href="#sup-x3D-sub-下" class="headerlink" title="sup-&#x3D;sub-:下"></a>sup-&#x3D;sub-:下</h5></li></ul><h4 id="impose-v-迫使"><a href="#impose-v-迫使" class="headerlink" title="impose    v.迫使"></a>impose    v.迫使</h4><ul><li><h5 id="im-x3D-in-：进入"><a href="#im-x3D-in-：进入" class="headerlink" title="im-&#x3D;in-：进入"></a>im-&#x3D;in-：进入</h5></li></ul><h4 id="expose-v-揭露；使曝光"><a href="#expose-v-揭露；使曝光" class="headerlink" title="expose    v.揭露；使曝光"></a>expose    v.揭露；使曝光</h4><h4 id="exposure-n-暴露；揭露"><a href="#exposure-n-暴露；揭露" class="headerlink" title="exposure    n.暴露；揭露"></a>exposure    n.暴露；揭露</h4><h4 id="pose-v-造成；摆姿势-n-姿态"><a href="#pose-v-造成；摆姿势-n-姿态" class="headerlink" title="pose    v.造成；摆姿势 n.姿态"></a>pose    v.造成；摆姿势 n.姿态</h4><h4 id="propose-v-建议；打算，求婚"><a href="#propose-v-建议；打算，求婚" class="headerlink" title="propose    v.建议；打算，求婚"></a>propose    v.建议；打算，求婚</h4><ul><li><h5 id="pro-x3D-向前"><a href="#pro-x3D-向前" class="headerlink" title="pro-&#x3D;向前"></a>pro-&#x3D;向前</h5></li></ul><h4 id="proposal-n-提议；求婚"><a href="#proposal-n-提议；求婚" class="headerlink" title="proposal    n.提议；求婚"></a>proposal    n.提议；求婚</h4><ul><li>accept&#x2F;reject a proposal    接受&#x2F;拒绝一项提议</li></ul><h4 id="oppose-v-反对"><a href="#oppose-v-反对" class="headerlink" title="oppose    v.反对"></a>oppose    v.反对</h4><ul><li><h5 id="op-x3D-ob-x3D-相反"><a href="#op-x3D-ob-x3D-相反" class="headerlink" title="op- &#x3D; ob- &#x3D; 相反"></a>op- &#x3D; ob- &#x3D; 相反</h5></li></ul><h4 id="opposite-n-对立面-adj-相反的；对立面-adv-在对面"><a href="#opposite-n-对立面-adj-相反的；对立面-adv-在对面" class="headerlink" title="opposite    n.对立面 adj.相反的；对立面 adv.在对面"></a>opposite    n.对立面 adj.相反的；对立面 adv.在对面</h4><h4 id="opposition-n-反对"><a href="#opposition-n-反对" class="headerlink" title="opposition    n.反对"></a>opposition    n.反对</h4><h4 id="dispose-v-处理；布置"><a href="#dispose-v-处理；布置" class="headerlink" title="dispose    v.处理；布置"></a>dispose    v.处理；布置</h4><ul><li><h5 id="dis-x3D-de-：分离"><a href="#dis-x3D-de-：分离" class="headerlink" title="dis- &#x3D; de-：分离"></a>dis- &#x3D; de-：分离</h5></li></ul><h4 id="disposable-adj-一次性的"><a href="#disposable-adj-一次性的" class="headerlink" title="disposable    adj.一次性的"></a>disposable    adj.一次性的</h4><h3 id="第39串词：cycle-（圆，圈）"><a href="#第39串词：cycle-（圆，圈）" class="headerlink" title="第39串词：cycle （圆，圈）"></a>第39串词：cycle （圆，圈）</h3><h4 id="bicycle-n-自行车"><a href="#bicycle-n-自行车" class="headerlink" title="bicycle    n.自行车"></a>bicycle    n.自行车</h4><ul><li>tricycle    三轮车</li></ul><h4 id="cycle-n-循环-v-使循环"><a href="#cycle-n-循环-v-使循环" class="headerlink" title="cycle    n.循环 v.使循环"></a>cycle    n.循环 v.使循环</h4><h4 id="cyclist-n-骑自行车的人"><a href="#cyclist-n-骑自行车的人" class="headerlink" title="cyclist    n.骑自行车的人"></a>cyclist    n.骑自行车的人</h4><h4 id="recycle-v-回收利用"><a href="#recycle-v-回收利用" class="headerlink" title="recycle    v.回收利用"></a>recycle    v.回收利用</h4><h4 id="recyclable-adj-可回收利用的"><a href="#recyclable-adj-可回收利用的" class="headerlink" title="recyclable    adj.可回收利用的"></a>recyclable    adj.可回收利用的</h4><h4 id="non-recyclable-adj-不可回收利用的"><a href="#non-recyclable-adj-不可回收利用的" class="headerlink" title="non-recyclable    adj.不可回收利用的"></a>non-recyclable    adj.不可回收利用的</h4><h4 id="拓展：-2"><a href="#拓展：-2" class="headerlink" title="拓展："></a>拓展：</h4><h4 id="renew-v-使续期；重新开始；更新"><a href="#renew-v-使续期；重新开始；更新" class="headerlink" title="renew    v.使续期；重新开始；更新"></a>renew    v.使续期；重新开始；更新</h4><h4 id="renewable-adj-可再生的"><a href="#renewable-adj-可再生的" class="headerlink" title="renewable    adj.可再生的"></a>renewable    adj.可再生的</h4><h4 id="non-renewable-adj-不可再生的"><a href="#non-renewable-adj-不可再生的" class="headerlink" title="non-renewable    adj.不可再生的"></a>non-renewable    adj.不可再生的</h4><h3 id="第40串词：uni（一，统一）"><a href="#第40串词：uni（一，统一）" class="headerlink" title="第40串词：uni（一，统一）"></a>第40串词：uni（一，统一）</h3><h4 id="union-n-同盟"><a href="#union-n-同盟" class="headerlink" title="union    n.同盟"></a>union    n.同盟</h4><h4 id="unique-adj-唯一的"><a href="#unique-adj-唯一的" class="headerlink" title="unique    adj.唯一的"></a>unique    adj.唯一的</h4><h4 id="universe-n-宇宙"><a href="#universe-n-宇宙" class="headerlink" title="universe    n.宇宙"></a>universe    n.宇宙</h4><h4 id="universal-adj-全世界的；普遍存在的"><a href="#universal-adj-全世界的；普遍存在的" class="headerlink" title="universal    adj.全世界的；普遍存在的"></a>universal    adj.全世界的；普遍存在的</h4><h4 id="unit-n-单位；单元"><a href="#unit-n-单位；单元" class="headerlink" title="unit    n.单位；单元"></a>unit    n.单位；单元</h4><h4 id="unifrom-n-制服"><a href="#unifrom-n-制服" class="headerlink" title="unifrom    n.制服"></a>unifrom    n.制服</h4><h4 id="unite-v-联合"><a href="#unite-v-联合" class="headerlink" title="unite    v.联合"></a>unite    v.联合</h4><h4 id="united-adj-联合的；统一的"><a href="#united-adj-联合的；统一的" class="headerlink" title="united    adj.联合的；统一的"></a>united    adj.联合的；统一的</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;第34串词：demo&quot;&gt;&lt;a href=&quot;#第34串词：demo&quot; class=&quot;headerlink&quot; title=&quot;第34串词：demo&quot;&gt;&lt;/a&gt;第34串词：demo&lt;/h3&gt;&lt;h4 id=&quot;academy-n-学院&quot;&gt;&lt;a href=&quot;#academy-n</summary>
      
    
    
    
    
    <category term="英语四级" scheme="http://example.com/tags/%E8%8B%B1%E8%AF%AD%E5%9B%9B%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot</title>
    <link href="http://example.com/2022/06/09/Spring-Boot/"/>
    <id>http://example.com/2022/06/09/Spring-Boot/</id>
    <published>2022-06-09T06:44:28.000Z</published>
    <updated>2022-06-09T06:46:08.022Z</updated>
    
    
    
    
    
    <category term="Spring Boot" scheme="http://example.com/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis-Plus</title>
    <link href="http://example.com/2022/06/09/Mybatis-Plus/"/>
    <id>http://example.com/2022/06/09/Mybatis-Plus/</id>
    <published>2022-06-09T02:25:16.000Z</published>
    <updated>2022-06-21T02:29:23.601Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、了解Mybatis-Plus"><a href="#1、了解Mybatis-Plus" class="headerlink" title="1、了解Mybatis-Plus"></a><strong>1</strong>、了解Mybatis-Plus</h1><h3 id="1-1、Mybatis-Plus介绍"><a href="#1-1、Mybatis-Plus介绍" class="headerlink" title="1.1、Mybatis-Plus介绍"></a><strong>1.1</strong>、Mybatis-Plus介绍</h3><p>MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p><p>官网： <a href="https://mp.baomidou.com/">https://mp.baomidou.com/</a></p><h3 id="1-2、代码以及文档"><a href="#1-2、代码以及文档" class="headerlink" title="1.2、代码以及文档"></a><strong>1.2</strong>、代码以及文档</h3><p>文档地址：<a href="https://mybatis.plus/guide/">https://mybatis.plus/guide/</a></p><p>源码地址：<a href="https://github.com/baomidou/mybatis-plus">https://github.com/baomidou/mybatis-plus</a></p><h3 id="1-3、特性"><a href="#1-3、特性" class="headerlink" title="1.3、特性"></a><strong>1.3</strong>、特性</h3><ul><li><strong>无侵入</strong>：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li><li><strong>损耗小</strong>：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作</li><li><strong>强大的</strong> <strong>CRUD</strong> <strong>操作</strong>：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求</li><li><strong>支持</strong> <strong>Lambda</strong> <strong>形式调用</strong>：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li><li><strong>支持多种数据库</strong>：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre,SQLServer2005、SQLServer 等多种数据库</li><li><strong>支持主键自动生成</strong>：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题</li><li><strong>支持</strong> <strong>XML</strong> <strong>热加载</strong>：Mapper 对应的 XML 支持热加载，对于简单的 CRUD 操作，甚至可以无 XML 启动</li><li><strong>支持</strong> <strong>ActiveRecord</strong> <strong>模式</strong>：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作</li><li><strong>支持自定义全局通用操作</strong>：支持全局通用方法注入（ Write once, use anywhere ）</li><li><strong>支持关键词自动转义</strong>：支持数据库关键词（order、key……）自动转义，还可自定义关键词</li><li><strong>内置代码生成器</strong>：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li><li><strong>内置分页插件</strong>：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List查询</li><li><strong>内置性能分析插件</strong>：可输出 Sql 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li><li><strong>内置全局拦截插件</strong>：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li><li><strong>内置</strong> <strong>Sql</strong> <strong>注入剥离器</strong>：支持 Sql 注入剥离，有效预防 Sql 注入攻击</li></ul><h3 id="1-4-架构"><a href="#1-4-架构" class="headerlink" title="1.4 架构"></a>1.4 架构</h3><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-0915.06.52.png"></p><h2 id="2、快速开始"><a href="#2、快速开始" class="headerlink" title="2、快速开始"></a><strong>2</strong>、快速开始</h2><p>对于Mybatis整合MP有常常有三种用法，分别是Mybatis+MP、Spring+Mybatis+MP、Spring Boot+Mybatis+MP。</p><h3 id="2-1-创建数据库以及表"><a href="#2-1-创建数据库以及表" class="headerlink" title="2.1 创建数据库以及表"></a>2.1 创建数据库以及表</h3><p>数据库名称mp</p><p>字符集utf8–UTF-8 Unicode</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建测试表 </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tb_user` ( </span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `user_name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">  `age` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">  `email` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入测试数据 </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tb_user` (`id`, `user_name`, `password`, `name`, `age`, `email`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;zhangsan&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;18&#x27;</span>, <span class="string">&#x27;test1@itcast.cn&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tb_user` (`id`, `user_name`, `password`, `name`, `age`, `email`) <span class="keyword">VALUES</span> (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;lisi&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;李四&#x27;</span>, <span class="string">&#x27;20&#x27;</span>, <span class="string">&#x27;test2@itcast.cn&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tb_user` (`id`, `user_name`, `password`, `name`, `age`, `email`) <span class="keyword">VALUES</span> (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;wangwu&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;王五&#x27;</span>, <span class="string">&#x27;28&#x27;</span>, <span class="string">&#x27;test3@itcast.cn&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tb_user` (`id`, `user_name`, `password`, `name`, `age`, `email`) <span class="keyword">VALUES</span> (<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;zhaoliu&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;赵六&#x27;</span>, <span class="string">&#x27;21&#x27;</span>, <span class="string">&#x27;test4@itcast.cn&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tb_user` (`id`, `user_name`, `password`, `name`, `age`, `email`) <span class="keyword">VALUES</span> (<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;sunqi&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;孙七&#x27;</span>, <span class="string">&#x27;24&#x27;</span>, <span class="string">&#x27;test5@itcast.cn&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="2-2-创建工程"><a href="#2-2-创建工程" class="headerlink" title="2.2.创建工程"></a>2.2.创建工程</h3><p>创建普通maven工程</p><p>导入依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.itcast.mp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itcast-mybatis-plus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>itcast-mybatis-plus-simple<span class="tag">&lt;/<span class="name">module</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- mybatis-plus插件依赖 --&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">       <span class="comment">&lt;!-- MySql --&gt;</span> </span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- 连接池 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line">         <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">         <span class="comment">&lt;!--简化bean代码的工具包--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span> </span><br><span class="line">            </span><br><span class="line">            <span class="tag">&lt;<span class="name">build</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">plugins</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line">                        <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span> </span><br><span class="line">                        <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span> </span><br><span class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span> </span><br><span class="line">                  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">project</span>&gt;</span> </span><br></pre></td></tr></table></figure><h3 id="2-3-Mybatis-MP"><a href="#2-3-Mybatis-MP" class="headerlink" title="2.3 Mybatis + MP"></a>2.3 Mybatis + MP</h3><p>下面演示，通过纯Mybatis与Mybatis-Plus整合</p><h4 id="2-3-1、创建子Module"><a href="#2-3-1、创建子Module" class="headerlink" title="2.3.1、创建子Module"></a><strong>2.3.1</strong>、创建子<strong>Module</strong></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itcast-mybatis-plus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.itcast.mp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itcast-mybatis-plus-simple<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>log4j.properties：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">DEBUG,A1 </span></span><br><span class="line"></span><br><span class="line"><span class="attr">log4j.appender.A1</span>=<span class="string">org.apache.log4j.ConsoleAppender log4j.appender.A1.layout=org.apache.log4j.PatternLayout log4j.appender.A1.layout.ConversionPattern=[%t] [%c]-[%p] %m%n</span></span><br></pre></td></tr></table></figure><h3 id="2-3-2-Mybatis实现查询User"><a href="#2-3-2-Mybatis实现查询User" class="headerlink" title="2.3.2 Mybatis实现查询User"></a>2.3.2 Mybatis实现查询User</h3><h4 id="第一步，编写mybatis-confifig-xml文件："><a href="#第一步，编写mybatis-confifig-xml文件：" class="headerlink" title="第一步，编写mybatis-confifig.xml文件："></a><strong>第一步，编写</strong>mybatis-confifig.xml文件：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span> </span></span><br><span class="line"><span class="meta"><span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span> </span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span> <span class="comment">&lt;!--链接池配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mp? useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8<span class="symbol">&amp;amp;</span>autoReconnect=true<span class="symbol">&amp;amp;</span>allowMultiQuerie s=true<span class="symbol">&amp;amp;</span>useSSL=false&quot;</span>/&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;UserMapper.xml&quot;</span>/&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="第二步，编写User实体对象：（这里使用lombok进行了进化bean操作）"><a href="#第二步，编写User实体对象：（这里使用lombok进行了进化bean操作）" class="headerlink" title="第二步，编写User实体对象：（这里使用lombok进行了进化bean操作）"></a><strong>第二步，编写</strong>User实体对象：（这里使用lombok进行了进化bean操作）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mp.simple.pojo;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor; </span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor; </span><br><span class="line"><span class="meta">@Data</span> </span><br><span class="line"><span class="meta">@NoArgsConstructor</span> <span class="comment">//没有参数的构造方法</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span> <span class="comment">//全参数的构造方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123; </span><br><span class="line"><span class="keyword">private</span> Long id; </span><br><span class="line"><span class="keyword">private</span> String userName; </span><br><span class="line"><span class="keyword">private</span> String password; </span><br><span class="line"><span class="keyword">private</span> String name; </span><br><span class="line"><span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第三步，编写UserMapper接口："><a href="#第三步，编写UserMapper接口：" class="headerlink" title="第三步，编写UserMapper接口："></a><strong>第三步，编写</strong>UserMapper接口：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mp.simple.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.mp.simple.pojo.User; </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">List&lt;User&gt; <span class="title function_">findAll</span><span class="params">()</span>; </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第四步，编写UserMapper-xml文件："><a href="#第四步，编写UserMapper-xml文件：" class="headerlink" title="第四步，编写UserMapper.xml文件："></a><strong>第四步，编写</strong>UserMapper.xml文件：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> </span></span><br><span class="line"><span class="meta"><span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> </span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;cn.itcast.mp.simple.mapper.UserMapper&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;cn.itcast.mp.simple.pojo.User&quot;</span>&gt;</span> </span><br><span class="line">select * from tb_user </span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="第五步，编写TestMybatis测试用例："><a href="#第五步，编写TestMybatis测试用例：" class="headerlink" title="第五步，编写TestMybatis测试用例："></a><strong>第五步，编写</strong>TestMybatis测试用例：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mp.simple; </span><br><span class="line"><span class="keyword">import</span> cn.itcast.mp.simple.mapper.UserMapper; </span><br><span class="line"><span class="keyword">import</span> cn.itcast.mp.simple.pojo.User; </span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources; </span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession; </span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory; </span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test; </span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestMybatis</span> &#123; </span><br><span class="line">  </span><br><span class="line"><span class="meta">@Test</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUserList</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123; </span><br><span class="line">        <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource); </span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream); </span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(); </span><br><span class="line">        </span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class); </span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : list) &#123; </span><br><span class="line">              System.out.println(user); </span><br><span class="line">            &#125; </span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.simple.mapper.UserMapper.findAll]-[DEBUG] ==&gt; Parameters: [main] [cn.itcast.mp.simple.mapper.UserMapper.findAll]-[DEBUG] &lt;== Total: 5 User(id=1, userName=null, password=123456, name=张三, age=18, email=test1@itcast.cn) User(id=2, userName=null, password=123456, name=李四, age=20, email=test2@itcast.cn) User(id=3, userName=null, password=123456, name=王五, age=28, email=test3@itcast.cn) User(id=4, userName=null, password=123456, name=赵六, age=21, email=test4@itcast.cn) User(id=5, userName=null, password=123456, name=孙七, age=24, email=test5@itcast.cn)</span><br></pre></td></tr></table></figure><h4 id="2-3-3-Mybatis-MP实现查询User"><a href="#2-3-3-Mybatis-MP实现查询User" class="headerlink" title="2.3.3.Mybatis+MP实现查询User"></a>2.3.3.<strong>Mybatis+MP</strong>实现查询User</h4><p>如果使用3.5.1版本，请在maven中导入spring-core依赖，高于3.4.1的mp无法脱离spring单独运行</p><h4 id="第一步，将UserMapper继承BaseMapper，将拥有了BaseMapper中的所有方法："><a href="#第一步，将UserMapper继承BaseMapper，将拥有了BaseMapper中的所有方法：" class="headerlink" title="第一步，将UserMapper继承BaseMapper，将拥有了BaseMapper中的所有方法："></a><strong>第一步，将</strong>UserMapper继承BaseMapper，将拥有了BaseMapper中的所有方法：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mp.simple.mapper; </span><br><span class="line"><span class="keyword">import</span> cn.itcast.mp.simple.pojo.User; </span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper; </span><br><span class="line"><span class="keyword">import</span> java.util.List; </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123; </span><br><span class="line">List&lt;User&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第二步，使用MP中的MybatisSqlSessionFactoryBuilder进程构建："><a href="#第二步，使用MP中的MybatisSqlSessionFactoryBuilder进程构建：" class="headerlink" title="第二步，使用MP中的MybatisSqlSessionFactoryBuilder进程构建："></a>第二步，使用MP中的MybatisSqlSessionFactoryBuilder进程构建：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mp.simple; </span><br><span class="line"><span class="keyword">import</span> cn.itcast.mp.simple.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> cn.itcast.mp.simple.pojo.User; </span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.MybatisSqlSessionFactoryBuilder; </span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources; </span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession; </span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory; i</span><br><span class="line">mport org.apache.ibatis.session.SqlSessionFactoryBuilder; </span><br><span class="line"><span class="keyword">import</span> org.junit.Test; </span><br><span class="line"><span class="keyword">import</span> java.io.InputStream; </span><br><span class="line"><span class="keyword">import</span> java.util.List; </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestMybatisPlus</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUserList</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123; </span><br><span class="line"><span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>; </span><br><span class="line"><span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource); </span><br><span class="line"><span class="comment">//这里使用的是MP中的MybatisSqlSessionFactoryBuilder </span></span><br><span class="line"><span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisSqlSessionFactoryBuilder</span>().build(inputStream); </span><br><span class="line"><span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(); </span><br><span class="line"><span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class); </span><br><span class="line"><span class="comment">// 可以调用BaseMapper中定义的方法 </span></span><br><span class="line">List&lt;User&gt; list = userMapper.selectList(<span class="literal">null</span>); </span><br><span class="line"><span class="keyword">for</span> (User user : list) &#123; </span><br><span class="line">System.out.println(user); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行报错:找不到表</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-1115.49.24.png"></p><p>解决：在User对象中添加@TableName，指定数据库表名</p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/截屏2022-06-1115.50.18.png" style="zoom:35%;"><p>测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.simple.mapper.UserMapper.selectList]-[DEBUG] ==&gt; Preparing: SELECT id,user_name,password,name,age,email FROM tb_user [main] [cn.itcast.mp.simple.mapper.UserMapper.selectList]-[DEBUG] ==&gt; Parameters: [main] [cn.itcast.mp.simple.mapper.UserMapper.selectList]-[DEBUG] &lt;== Total: 5 User(id=1, userName=zhangsan, password=123456, name=张三, age=18, email=test1@itcast.cn) User(id=2, userName=lisi, password=123456, name=李四, age=20, email=test2@itcast.cn) User(id=3, userName=wangwu, password=123456, name=王五, age=28, email=test3@itcast.cn) User(id=4, userName=zhaoliu, password=123456, name=赵六, age=21, email=test4@itcast.cn) User(id=5, userName=sunqi, password=123456, name=孙七, age=24, email=test5@itcast.cn)</span><br></pre></td></tr></table></figure><p>简单说明：</p><p>由于使用了MybatisSqlSessionFactoryBuilder进行了构建，继承的BaseMapper中的方法就载入到了SqlSession中，所以就可以直接使用相关的方法:</p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/截屏2022-06-1115.52.25.png" style="zoom:35%;"><h3 id="2-4-Spring-Mybatis-MP"><a href="#2-4-Spring-Mybatis-MP" class="headerlink" title="2.4.Spring + Mybatis + MP"></a>2.4.Spring + Mybatis + MP</h3><p>引入了Spring框架，数据源、构建等工作就交给了Spring管理。</p><h4 id="2-4-1、创建子Module"><a href="#2-4-1、创建子Module" class="headerlink" title="2.4.1、创建子Module"></a><strong>2.4.1<em>、创建子</em></strong>Module</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span> <span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">parent</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itcast-mybatis-plus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.itcast.mp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span> </span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itcast-mybatis-plus-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.1.6.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-4-2、实现查询User"><a href="#2-4-2、实现查询User" class="headerlink" title="2.4.2、实现查询User"></a><strong>2.4.2<em>、实现查询</em></strong>User</h4><p>第一步，编写jdbc.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver </span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://127.0.0.1:3306/mp? useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;allowMultiQueries=true&amp;useSSL =false </span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root </span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure><p>第二步，编写applicationContext.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/beans/spring-beans.xsd </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/context </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:*.properties&quot;</span>/&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- 定义数据源 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span> <span class="attr">destroy-</span><span class="attr">method</span>=<span class="string">&quot;close&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxActive&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span>/&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line">  <span class="comment">&lt;!--这里使用MP提供的sqlSessionFactory，完成了Spring与MP的整合--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line">  <span class="comment">&lt;!--扫描mapper接口，使用的依然是Mybatis原生的扫描器--&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;cn.itcast.mp.simple.mapper&quot;</span>/&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第三步，编写User对象以及UserMapper接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mp.simple.pojo; </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableName;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor; </span><br><span class="line"><span class="keyword">import</span> lombok.Data; </span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span> </span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@TableName(&quot;tb_user&quot;)</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123; </span><br><span class="line"><span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String password; </span><br><span class="line">    <span class="keyword">private</span> String name; </span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mp.simple.mapper; </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.mp.simple.pojo.User; </span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第四步，编写测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mp.simple; </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.mp.simple.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> cn.itcast.mp.simple.pojo.User; </span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith; </span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired; </span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration; </span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List; </span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(locations = &quot;classpath:applicationContext.xml&quot;)</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestSpringMP</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectList</span><span class="params">()</span>&#123; </span><br><span class="line">    List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123; </span><br><span class="line">        System.out.println(user); </span><br><span class="line">        &#125; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>测试结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.simple.mapper.UserMapper.selectList]-[DEBUG] ==&gt; Preparing: SELECT id,user_name,password,name,age,email FROM tb_user [main] [cn.itcast.mp.simple.mapper.UserMapper.selectList]-[DEBUG] ==&gt; Parameters: [main] [cn.itcast.mp.simple.mapper.UserMapper.selectList]-[DEBUG] &lt;== Total: 5 [main] [org.mybatis.spring.SqlSessionUtils]-[DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74287ea3] User(id=1, userName=zhangsan, password=123456, name=张三, age=18, email=test1@itcast.cn) User(id=2, userName=lisi, password=123456, name=李四, age=20, email=test2@itcast.cn) User(id=3, userName=wangwu, password=123456, name=王五, age=28, email=test3@itcast.cn) User(id=4, userName=zhaoliu, password=123456, name=赵六, age=21, email=test4@itcast.cn) User(id=5, userName=sunqi, password=123456, name=孙七, age=24, email=test5@itcast.cn) 12345678910</span><br></pre></td></tr></table></figure><h3 id="2-5、SpringBoot-Mybatis-MP"><a href="#2-5、SpringBoot-Mybatis-MP" class="headerlink" title="2.5、SpringBoot + Mybatis + MP"></a><strong>2.5</strong>、SpringBoot + Mybatis + MP</h3><p>使用SpringBoot将进一步的简化MP的整合，需要注意的是，由于使用SpringBoot需要继承parent，所以需要重新创建工程，并不是创建子Module。</p><h4 id="2-5-1、创建工程"><a href="#2-5-1、创建工程" class="headerlink" title="2.5.1、创建工程"></a><strong>2.5.1</strong>、创建工程</h4><h4 id="2-5-2、导入依赖"><a href="#2-5-2、导入依赖" class="headerlink" title="2.5.2、导入依赖"></a><strong>2.5.2</strong>、导入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 </span></span></span><br><span class="line"><span class="string"><span class="tag">http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span> </span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.itcast.mp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itcast-mp-springboot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--简化代码的工具包--&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span> </span><br><span class="line">         <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">         </span><br><span class="line">         <span class="comment">&lt;!--mybatis-plus的springboot支持--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">          <span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line">           <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">           <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">           <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">           </span><br><span class="line">         <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span> </span><br><span class="line">         <span class="tag">&lt;<span class="name">build</span>&gt;</span> </span><br><span class="line">         <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="name">build</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>log4j.properties： </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">DEBUG,A1</span></span><br><span class="line"><span class="attr">log4j.appender.A1</span>=<span class="string">org.apache.log4j.ConsoleAppender log4j.appender.A1.layout=org.apache.log4j.PatternLayout log4j.appender.A1.layout.ConversionPattern=[%t] [%c]-[%p] %m%n</span></span><br></pre></td></tr></table></figure><h4 id="2-5-3、编写application-properties"><a href="#2-5-3、编写application-properties" class="headerlink" title="2.5.3、编写application.properties"></a><strong>2.5.3</strong>、编写application.properties</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.application.name</span> = <span class="string">itcast-mp-springboot </span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.jdbc.Driver spring.datasource.url=jdbc:mysql://127.0.0.1:3306/mp? useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;allowMultiQueries=true&amp;useSSL =false </span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root </span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure><h4 id="2-5-4、编写pojo"><a href="#2-5-4、编写pojo" class="headerlink" title="2.5.4、编写pojo"></a><strong>2.5.4</strong>、编写pojo</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mp.pojo;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableName; </span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor; </span><br><span class="line"><span class="keyword">import</span> lombok.Data; </span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span> </span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span> </span><br><span class="line"><span class="meta">@TableName(&quot;tb_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123; </span><br><span class="line"><span class="keyword">private</span> Long id; </span><br><span class="line"><span class="keyword">private</span> String userName; </span><br><span class="line"><span class="keyword">private</span> String password; </span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age; </span><br><span class="line">    <span class="keyword">private</span> String email; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-5-5、编写mapper"><a href="#2-5-5、编写mapper" class="headerlink" title="2.5.5、编写mapper"></a><strong>2.5.5</strong>、编写mapper</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mp.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.mp.pojo.User; </span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-5-6、编写启动类"><a href="#2-5-6、编写启动类" class="headerlink" title="2.5.6、编写启动类"></a><strong>2.5.6</strong>、编写启动类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mp; </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan; </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication; </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.WebApplicationType; </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication; </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder; </span><br><span class="line"></span><br><span class="line"><span class="meta">@MapperScan(&quot;cn.itcast.mp.mapper&quot;)</span> <span class="comment">//设置mapper接口的扫描包 </span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyApplication</span> &#123; </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123; </span><br><span class="line">SpringApplication.run(MyApplication.class, args); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-5-7、编写测试用例"><a href="#2-5-7、编写测试用例" class="headerlink" title="2.5.7、编写测试用例"></a><strong>2.5.7</strong>、编写测试用例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mp; </span><br><span class="line"><span class="keyword">import</span> cn.itcast.mp.mapper.UserMapper; </span><br><span class="line"><span class="keyword">import</span> cn.itcast.mp.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test; </span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith; </span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired; </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"><span class="keyword">import</span> java.util.List; </span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelect</span><span class="params">()</span> &#123; </span><br><span class="line">List&lt;User&gt; userList = userMapper.selectList(<span class="literal">null</span>); </span><br><span class="line"><span class="keyword">for</span> (User user : userList) &#123; System.out.println(user); </span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.selectList]-[DEBUG] ==&gt; Preparing: SELECT id,user_name,password,name,age,email FROM tb_user [main] [cn.itcast.mp.mapper.UserMapper.selectList]-[DEBUG] ==&gt; Parameters: [main] [cn.itcast.mp.mapper.UserMapper.selectList]-[DEBUG] &lt;== Total: 5 [main] [org.mybatis.spring.SqlSessionUtils]-[DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14faa38c] User(id=1, userName=zhangsan, password=123456, name=张三, age=18, email=test1@itcast.cn) User(id=2, userName=lisi, password=123456, name=李四, age=20, email=test2@itcast.cn) User(id=3, userName=wangwu, password=123456, name=王五, age=28, email=test3@itcast.cn) User(id=4, userName=zhaoliu, password=123456, name=赵六, age=21, email=test4@itcast.cn) User(id=5, userName=sunqi, password=123456, name=孙七, age=24, email=test5@itcast.cn)</span><br></pre></td></tr></table></figure><h2 id="3、通用CRUD"><a href="#3、通用CRUD" class="headerlink" title="3、通用CRUD"></a><strong>3</strong>、通用CRUD</h2><h3 id="3-1、插入操作"><a href="#3-1、插入操作" class="headerlink" title="3.1、插入操作"></a><strong>3.1</strong>、插入操作</h3><h4 id="3-1-1-方法定义"><a href="#3-1-1-方法定义" class="headerlink" title="3.1.1 方法定义"></a>3.1.1 方法定义</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 插入一条记录 *</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> entity 实体对象</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">insert</span><span class="params">(T entity)</span>;</span><br></pre></td></tr></table></figure><h4 id="3-1-2-测试用例"><a href="#3-1-2-测试用例" class="headerlink" title="3.1.2 测试用例"></a>3.1.2 测试用例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(); </span><br><span class="line">    user.setAge(<span class="number">20</span>);</span><br><span class="line">    user.setEmail(<span class="string">&quot;test@itcast.cn&quot;</span>);</span><br><span class="line">       user.setName(<span class="string">&quot;曹操&quot;</span>);</span><br><span class="line">       user.setUserName(<span class="string">&quot;caocao&quot;</span>);</span><br><span class="line">       user.setPassword(<span class="string">&quot;123456&quot;</span>); </span><br><span class="line">       </span><br><span class="line">       <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.insert(user); </span><br><span class="line">       <span class="comment">//返回的result是受影响的行数，并不是自增 后的id</span></span><br><span class="line">       System.out.println(<span class="string">&quot;result = &quot;</span> + result);   System.out.println(user.getId()); <span class="comment">//自增后的id会回填到对象中 &#125; &#125;</span></span><br></pre></td></tr></table></figure><h4 id="3-1-3-测试"><a href="#3-1-3-测试" class="headerlink" title="3.1.3 测试"></a>3.1.3 测试</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.insert]-[DEBUG] ==&gt; Preparing: INSERT INTO tb_user ( id, user_name, password, name, age, email ) VALUES ( ?, ?, ?, ?, ?, ? ) [main] [cn.itcast.mp.mapper.UserMapper.insert]-[DEBUG] ==&gt; Parameters: 1122045867793072130(Long), caocao(String), 123456(String), 曹操(String), 20(Integer), test@itcast.cn(String) [main] [cn.itcast.mp.mapper.UserMapper.insert]-[DEBUG] &lt;== Updates: 1 [main] [org.mybatis.spring.SqlSessionUtils]-[DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@411291e5] </span><br><span class="line">result = 1 1122045867793072130</span><br></pre></td></tr></table></figure><p>可以看到，数据已经写入到了数据库，但是，id的值不正确，我们期望的是数据库自增长，实际是MP生成了id的值</p><p>写入到了数据库。</p><p>如何设置id的生成策略呢？</p><p>MP支持的id策略：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.baomidou.mybatisplus.annotation; <span class="keyword">import</span> lombok.Getter; </span><br><span class="line"><span class="comment">/*** 生成ID类型枚举类 ** <span class="doctag">@author</span> hubin * <span class="doctag">@since</span> 2015-11-10 */</span> </span><br><span class="line"><span class="meta">@Getter</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">IdType</span> &#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 数据库ID自增 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">      AUTO(<span class="number">0</span>),</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 该类型为未设置主键类型</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       NONE(<span class="number">1</span>), </span><br><span class="line">       <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 用户输入ID </span></span><br><span class="line"><span class="comment">       * &lt;p&gt;该类型可以通过自己注册自动填充插件进行填充&lt;/p&gt; </span></span><br><span class="line"><span class="comment">       */</span> </span><br><span class="line">       INPUT(<span class="number">2</span>),</span><br><span class="line">       </span><br><span class="line">       <span class="comment">/* 以下3种类型、只有当插入对象ID 为空，才自动填充。 */</span> <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 全局唯一ID (idWorker) </span></span><br><span class="line"><span class="comment">       */</span> </span><br><span class="line">       ID_WORKER(<span class="number">3</span>), </span><br><span class="line">       <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 全局唯一ID (UUID) </span></span><br><span class="line"><span class="comment">       */</span> </span><br><span class="line">       UUID(<span class="number">4</span>),</span><br><span class="line">       <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 字符串全局唯一ID (idWorker 的字符串表示) </span></span><br><span class="line"><span class="comment">       */</span> </span><br><span class="line">       ID_WORKER_STR(<span class="number">5</span>);</span><br><span class="line">          </span><br><span class="line">          <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> key; </span><br><span class="line">          </span><br><span class="line">          IdType(<span class="type">int</span> key) &#123; </span><br><span class="line">          <span class="built_in">this</span>.key = key; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>修改User对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span> <span class="meta">@NoArgsConstructor</span> </span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@TableName(&quot;tb_user&quot;)</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="meta">@TableId(type = IdType.AUTO)</span> <span class="comment">//指定id类型为自增长 </span></span><br><span class="line"><span class="keyword">private</span> Long id; </span><br><span class="line"><span class="keyword">private</span> String userName; </span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String name; </span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-1-4、-TableField"><a href="#3-1-4、-TableField" class="headerlink" title="3.1.4、@TableField"></a><strong>3.1.4</strong>、@TableField</h3><p>在MP中通过@TableField注解可以指定字段的一些属性，常常解决的问题有2个：</p><p>1、对象中的属性名和字段名不一致的问题（非驼峰）</p><p>2、对象中的属性字段在表中不存在的问题</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-1709.22.16.png"></p><p>其他用法，如大字段不加入查询字段：</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-1709.25.06.png"></p><p>效果：</p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/截屏2022-06-1709.25.17.png" style="zoom:100%;"><h3 id="3-2、更新操作"><a href="#3-2、更新操作" class="headerlink" title="3.2、更新操作"></a><strong>3.2</strong>、更新操作</h3><p>在MP中，更新操作有2种，一种是根据id更新，另一种是根据条件更新。</p><h4 id="3-2-1-根据id更新"><a href="#3-2-1-根据id更新" class="headerlink" title="3.2.1 根据id更新"></a>3.2.1 根据id更新</h4><p>方法定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据 ID 修改</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> entity 实体对象 </span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line">  </span><br><span class="line">  <span class="type">int</span> <span class="title function_">updateById</span><span class="params">(<span class="meta">@Param(Constants.ENTITY)</span> T entity)</span>;</span><br></pre></td></tr></table></figure><p>测试:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> </span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdateById</span><span class="params">()</span> &#123; </span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setId(<span class="number">6L</span>); <span class="comment">//主键,加L是因为数据库中主键是长整型</span></span><br><span class="line">        user.setAge(<span class="number">21</span>); <span class="comment">//更新的字段</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//根据id更新，更新不为null的字段 </span></span><br><span class="line">        <span class="built_in">this</span>.userMapper.updateById(user); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.updateById]-[DEBUG] ==&gt; Preparing: UPDATE tb_user SET age=? WHERE id=? [main] [cn.itcast.mp.mapper.UserMapper.updateById]-[DEBUG] ==&gt; Parameters: 21(Integer), 6(Long) [main] [cn.itcast.mp.mapper.UserMapper.updateById]-[DEBUG] &lt;== Updates: 1</span><br></pre></td></tr></table></figure><h4 id="3-2-2、根据条件更新"><a href="#3-2-2、根据条件更新" class="headerlink" title="3.2.2、根据条件更新"></a><strong>3.2.2</strong>、根据条件更新</h4><p>方法定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据 whereEntity 条件，更新记录 </span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> entity 实体对象 (set 条件值,可以为 null) </span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> updateWrapper 实体对象封装操作类（可以为 null,里面的 entity 用于生成 where 语句）</span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line">  <span class="type">int</span> <span class="title function_">update</span><span class="params">(<span class="meta">@Param(Constants.ENTITY)</span> T entity, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; updateWrapper)</span>;</span><br></pre></td></tr></table></figure><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> </span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setAge(<span class="number">22</span>); <span class="comment">//更新的字段 </span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//更新的条件 </span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;(); </span><br><span class="line">    wrapper.eq(<span class="string">&quot;id&quot;</span>, <span class="number">6</span>); </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//执行更新操作 </span></span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.update(user, wrapper);</span><br><span class="line">    System.out.println(<span class="string">&quot;result = &quot;</span> + result); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者，通过UpdateWrapper进行更新：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span> &#123; </span><br><span class="line"><span class="comment">//更新的条件以及字段 </span></span><br><span class="line">UpdateWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">&quot;id&quot;</span>, <span class="number">6</span>).set(<span class="string">&quot;age&quot;</span>, <span class="number">23</span>); </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//执行更新操作 </span></span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.update(<span class="literal">null</span>, wrapper);</span><br><span class="line">    System.out.println(<span class="string">&quot;result = &quot;</span> + result); </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-删除操作"><a href="#3-3-删除操作" class="headerlink" title="3.3 删除操作"></a>3.3 删除操作</h3><h4 id="3-3-1、deleteById"><a href="#3-3-1、deleteById" class="headerlink" title="3.3.1、deleteById"></a><strong>3.3.1</strong>、deleteById</h4><p>方法定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据 ID 删除 </span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> id 主键ID </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">deleteById</span><span class="params">(Serializable id)</span>;</span><br></pre></td></tr></table></figure><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> </span><br><span class="line"><span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteById</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//执行删除操作 </span></span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> </span><br><span class="line">    <span class="built_in">this</span>.userMapper.deleteById(<span class="number">6L</span>); </span><br><span class="line">    System.out.println(<span class="string">&quot;result = &quot;</span> + result); </span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.deleteById]-[DEBUG] ==&gt; Preparing: DELETE FROM tb_user WHERE id=? [main] [cn.itcast.mp.mapper.UserMapper.deleteById]-[DEBUG] ==&gt; Parameters: 6(Long) [main] [cn.itcast.mp.mapper.UserMapper.deleteById]-[DEBUG] &lt;== Updates: 1</span><br></pre></td></tr></table></figure><p>数据被删除了</p><h4 id="3-3-2、deleteByMap"><a href="#3-3-2、deleteByMap" class="headerlink" title="3.3.2、deleteByMap"></a><strong>3.3.2</strong>、deleteByMap</h4><p>方法定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据 columnMap 条件，删除记录</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> columnMap 表字段 map 对象 </span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="type">int</span> <span class="title function_">deleteByMap</span><span class="params">(<span class="meta">@Param(Constants.COLUMN_MAP)</span> Map&lt;String, Object&gt; columnMap)</span>;</span><br></pre></td></tr></table></figure><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> </span><br><span class="line"><span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteByMap</span><span class="params">()</span> &#123; </span><br><span class="line">    Map&lt;String, Object&gt; columnMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(); </span><br><span class="line">    columnMap.put(<span class="string">&quot;age&quot;</span>,<span class="number">20</span>); </span><br><span class="line">    columnMap.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;张三&quot;</span>); </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//将columnMap中的元素设置为删除的条件，多个之间为and关系 </span></span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.deleteByMap(columnMap);</span><br><span class="line">        System.out.println(<span class="string">&quot;result = &quot;</span> + result); </span><br><span class="line">        &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.deleteByMap]-[DEBUG] ==&gt; Preparing: DELETE FROM tb_user WHERE name = ? AND age = ? [main] [cn.itcast.mp.mapper.UserMapper.deleteByMap]-[DEBUG] ==&gt; Parameters: 张三 (String), 20(Integer) [main] [cn.itcast.mp.mapper.UserMapper.deleteByMap]-[DEBUG] &lt;== Updates: 0</span><br></pre></td></tr></table></figure><h4 id="3-3-3、delete"><a href="#3-3-3、delete" class="headerlink" title="3.3.3、delete"></a><strong>3.3.3</strong>、delete</h4><p>方法定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据 entity 条件，删除记录</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> wrapper 实体对象封装操作类（可以为null）</span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line"><span class="type">int</span> <span class="title function_">delete</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; wrapper)</span>;</span><br></pre></td></tr></table></figure><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteByMap</span><span class="params">()</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(); </span><br><span class="line">user.setAge(<span class="number">20</span>); </span><br><span class="line">user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将实体对象进行包装，包装为操作条件 </span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;(user);</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.delete(wrapper); </span><br><span class="line">    System.out.println(<span class="string">&quot;result = &quot;</span> + result); &#125; &#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.delete]-[DEBUG] ==&gt; Preparing: DELETE FROM tb_user WHERE name=? AND age=? [main] [cn.itcast.mp.mapper.UserMapper.delete]-[DEBUG] ==&gt; Parameters: 张三(String), 20(Integer) [main] [cn.itcast.mp.mapper.UserMapper.delete]-[DEBUG] &lt;== Updates: 0</span><br></pre></td></tr></table></figure><h4 id="3-3-4、deleteBatchIds"><a href="#3-3-4、deleteBatchIds" class="headerlink" title="3.3.4、deleteBatchIds"></a><strong>3.3.4</strong>、deleteBatchIds</h4><p>方法定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 删除（根据ID 批量删除） </span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> idList 主键ID列表(不能为 null 以及 empty)</span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line">  <span class="type">int</span> <span class="title function_">deleteBatchIds</span><span class="params">(<span class="meta">@Param(Constants.COLLECTION)</span></span></span><br><span class="line"><span class="params">  Collection&lt;? extends Serializable&gt; idList)</span>;</span><br></pre></td></tr></table></figure><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> </span><br><span class="line"><span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteByMap</span><span class="params">()</span> &#123; </span><br><span class="line"><span class="comment">//根据id集合批量删除 </span></span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.deleteBatchIds(Arrays.asList(<span class="number">1L</span>,<span class="number">10L</span>,<span class="number">20L</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;result = &quot;</span> + result); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.deleteBatchIds]-[DEBUG] ==&gt; Preparing: DELETE FROM tb_user WHERE id IN ( ? , ? , ? ) [main] [cn.itcast.mp.mapper.UserMapper.deleteBatchIds]-[DEBUG] ==&gt; Parameters: 1(Long), 10(Long), 20(Long) [main] [cn.itcast.mp.mapper.UserMapper.deleteBatchIds]-[DEBUG] &lt;== Updates: 1</span><br></pre></td></tr></table></figure><h3 id="3-4、查询操作"><a href="#3-4、查询操作" class="headerlink" title="3.4、查询操作"></a><strong>3.4</strong>、查询操作</h3><p>MP提供了多种查询操作，包括根据id查询、批量查询、查询单条数据、查询列表、分页查询等操作。</p><h4 id="3-4-1、selectById"><a href="#3-4-1、selectById" class="headerlink" title="3.4.1、selectById"></a><strong>3.4.1</strong>、selectById</h4><p>方法定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据 ID 查询 </span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> id 主键ID </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">T <span class="title function_">selectById</span><span class="params">(Serializable id)</span>;</span><br></pre></td></tr></table></figure><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> </span><br><span class="line"><span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectById</span><span class="params">()</span> &#123; </span><br><span class="line"><span class="comment">//根据id查询数据 </span></span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.selectById(<span class="number">2L</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;result = &quot;</span> + user); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[main] [cn.itcast.mp.mapper.UserMapper.selectById]-[DEBUG] ==&gt; Preparing: SELECT id,user_name,password,name,age,email FROM tb_user WHERE id=? [main] [cn.itcast.mp.mapper.UserMapper.selectById]-[DEBUG] ==&gt; Parameters: 2(Long) [main] [cn.itcast.mp.mapper.UserMapper.selectById]-[DEBUG] &lt;== Total: 1 result = User(id=2, userName=lisi, password=123456, name=李四, age=20, email=test2@itcast.cn, address=null)</span><br></pre></td></tr></table></figure><h4 id="3-4-2、selectBatchIds"><a href="#3-4-2、selectBatchIds" class="headerlink" title="3.4.2、selectBatchIds"></a><strong>3.4.2</strong>、selectBatchIds</h4><p>方法定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 查询（根据ID 批量查询） </span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> idList 主键ID列表(不能为 null 以及 empty) </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">List&lt;T&gt; <span class="title function_">selectBatchIds</span><span class="params">(<span class="meta">@Param(Constants.COLLECTION)</span> Collection&lt;? extends Serializable&gt; idList)</span>;</span><br></pre></td></tr></table></figure><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectBatchIds</span><span class="params">()</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="comment">//根据id集合批量查询 </span></span><br><span class="line">List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectBatchIds(Arrays.asList(<span class="number">2L</span>, <span class="number">3L</span>, <span class="number">10L</span>)); </span><br><span class="line"><span class="keyword">for</span> (User user : users) &#123; </span><br><span class="line">System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-4-3、selectOne"><a href="#3-4-3、selectOne" class="headerlink" title="3.4.3、selectOne"></a><strong>3.4.3</strong>、selectOne</h4><p>方法定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据 entity 条件，查询一条记录 </span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null）</span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line">T <span class="title function_">selectOne</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br></pre></td></tr></table></figure><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> </span><br><span class="line"><span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectOne</span><span class="params">()</span> &#123; </span><br><span class="line"></span><br><span class="line">QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;User&gt;();</span><br><span class="line">wrapper.eq(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;李四&quot;</span>); </span><br><span class="line"></span><br><span class="line"><span class="comment">//根据条件查询一条数据，如果结果超过一条会报错 </span></span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.selectOne(wrapper);</span><br><span class="line">System.out.println(user); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-4-4、selectCount"><a href="#3-4-4、selectCount" class="headerlink" title="3.4.4、selectCount"></a><strong>3.4.4</strong>、selectCount</h4><p>方法定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据 Wrapper 条件，查询总记录数 </span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null） </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">Integer <span class="title function_">selectCount</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br></pre></td></tr></table></figure><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectCount</span><span class="params">()</span> &#123; </span><br><span class="line">QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;User&gt;();</span><br><span class="line">        wrapper.gt(<span class="string">&quot;age&quot;</span>, <span class="number">23</span>); </span><br><span class="line">        <span class="comment">//年龄大于23岁 //根据条件查询数据条数</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">count</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.selectCount(wrapper); </span><br><span class="line">System.out.println(<span class="string">&quot;count = &quot;</span> + count); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">count = 2</span><br></pre></td></tr></table></figure><h4 id="3-4-5、selectList"><a href="#3-4-5、selectList" class="headerlink" title="3.4.5、selectList"></a><strong>3.4.5</strong>、selectList</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据 entity 条件，查询全部记录 </span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">  List&lt;T&gt; <span class="title function_">selectList</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br></pre></td></tr></table></figure><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectList</span><span class="params">()</span> &#123; </span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;User&gt;(); </span><br><span class="line">    wrapper.gt(<span class="string">&quot;age&quot;</span>, <span class="number">23</span>); </span><br><span class="line">    <span class="comment">//年龄大于23岁</span></span><br><span class="line">    <span class="comment">//根据条件查询数据 </span></span><br><span class="line">    List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectList(wrapper);</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123; </span><br><span class="line">    System.out.println(<span class="string">&quot;user = &quot;</span> + user); </span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user = User(id=3, userName=wangwu, password=123456, name=王五, age=28, email=test3@itcast.cn, address=null) user = User(id=5, userName=sunqi, password=123456, name=孙七, age=24, email=test5@itcast.cn, address=null)</span><br></pre></td></tr></table></figure><h4 id="3-4-6、selectPage"><a href="#3-4-6、selectPage" class="headerlink" title="3.4.6、selectPage"></a><strong>3.4.6</strong>、selectPage</h4><p>方法定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据 entity 条件，查询全部记录（并翻页） </span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> page 分页查询条件（可以为 RowBounds.DEFAULT） </span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null） </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">IPage&lt;T&gt; <span class="title function_">selectPage</span><span class="params">(IPage&lt;T&gt; page, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br></pre></td></tr></table></figure><p>配置分页插件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> <span class="meta">@MapperScan(&quot;cn.itcast.mp.mapper&quot;)</span> <span class="comment">//设置mapper接口的扫描包 </span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123; </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 配置分页插件 </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="meta">@Bean</span> </span><br><span class="line"><span class="keyword">public</span> PaginationInterceptor <span class="title function_">paginationInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PaginationInterceptor</span>();</span><br><span class="line">    &#125; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> </span><br><span class="line"><span class="meta">@SpringBootTest</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line">  <span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Test</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectPage</span><span class="params">()</span> &#123; </span><br><span class="line">      QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;User&gt;(); </span><br><span class="line">      wrapper.gt(<span class="string">&quot;age&quot;</span>, <span class="number">20</span>); <span class="comment">//年龄大于20岁</span></span><br><span class="line">      Page&lt;User&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(<span class="number">1</span>,<span class="number">1</span>); <span class="comment">//根据条件查询数据 </span></span><br><span class="line">      IPage&lt;User&gt; iPage = <span class="built_in">this</span>.userMapper.selectPage(page, wrapper); </span><br><span class="line">      System.out.println(<span class="string">&quot;数据总条数：&quot;</span> + iPage.getTotal()); </span><br><span class="line">      System.out.println(<span class="string">&quot;总页数：&quot;</span> + iPage.getPages()); </span><br><span class="line">      List&lt;User&gt; users = iPage.getRecords(); <span class="keyword">for</span> (User user : users) &#123; </span><br><span class="line">        System.out.println(<span class="string">&quot;user = &quot;</span> + user); </span><br><span class="line">      &#125; </span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">数据总条数：3 总页数：3 </span><br><span class="line">user = User(id=3, userName=wangwu, password=123456, name=王五, age=28, email=test3@itcast.cn, address=null)</span><br></pre></td></tr></table></figure><h3 id="3-5、SQL注入的原理"><a href="#3-5、SQL注入的原理" class="headerlink" title="3.5、SQL注入的原理"></a><strong>3.5</strong>、SQL注入的原理</h3><p>在MP中，ISqlInjector负责SQL的注入工作，它是一个接口，AbstractSqlInjector是它的实现类，实现关系如下：</p><p>在AbstractSqlInjector中，主要是由inspectInject()方法进行注入的，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">inspectInject</span><span class="params">(MapperBuilderAssistant builderAssistant, Class&lt;?&gt; mapperClass)</span> &#123; Class&lt;?&gt; modelClass = extractModelClass(mapperClass); </span><br><span class="line"><span class="keyword">if</span> (modelClass != <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> mapperClass.toString(); </span><br><span class="line">    Set&lt;String&gt; mapperRegistryCache = GlobalConfigUtils.getMapperRegistryCache(builderAssistant.getConfiguration()); </span><br><span class="line">    <span class="keyword">if</span> (!mapperRegistryCache.contains(className)) &#123; List&lt;AbstractMethod&gt; methodList = <span class="built_in">this</span>.getMethodList(); </span><br><span class="line">    <span class="keyword">if</span> (CollectionUtils.isNotEmpty(methodList)) &#123; <span class="type">TableInfo</span> <span class="variable">tableInfo</span> <span class="operator">=</span> TableInfoHelper.initTableInfo(builderAssistant, modelClass); </span><br><span class="line">    <span class="comment">// 循环注入自定义方法 </span></span><br><span class="line">    methodList.forEach(m -&gt; m.inject(builderAssistant, mapperClass, modelClass, tableInfo));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      logger.debug(mapperClass.toString() + <span class="string">&quot;, No effective injection method was found.&quot;</span>);</span><br><span class="line">      &#125;mapperRegistryCache.add(className);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在实现方法中， methodList.forEach(m -&gt; m.inject(builderAssistant, mapperClass, modelClass, </p><p>tableInfo)); 是关键，循环遍历方法，进行注入。</p><p>最终调用抽象方法injectMappedStatement进行真正的注入：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 注入自定义 MappedStatement </span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> mapperClass mapper 接口 </span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> modelClass mapper 泛型 </span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> tableInfo 数据库表反射信息 </span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> MappedStatement </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> MappedStatement <span class="title function_">injectMappedStatement</span><span class="params">(Class&lt;?&gt; mapperClass, Class&lt;? &gt; modelClass, TableInfo tableInfo)</span>;</span><br></pre></td></tr></table></figure><p>查看该方法的实现</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-207.03.png"></p><p>以SelectById为例查看：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SelectById</span> <span class="keyword">extends</span> <span class="title class_">AbstractMethod</span> &#123; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MappedStatement <span class="title function_">injectMappedStatement</span><span class="params">(Class&lt;?&gt; mapperClass, Class&lt;?&gt; modelClass, TableInfo tableInfo)</span> &#123;</span><br><span class="line">    <span class="type">SqlMethod</span> <span class="variable">sqlMethod</span> <span class="operator">=</span> SqlMethod.LOGIC_SELECT_BY_ID; </span><br><span class="line">    <span class="type">SqlSource</span> <span class="variable">sqlSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RawSqlSource</span>(configuration, String.format(sqlMethod.getSql(),</span><br><span class="line">    sqlSelectColumns(tableInfo, <span class="literal">false</span>), </span><br><span class="line">    tableInfo.getTableName(), </span><br><span class="line">    tableInfo.getKeyColumn(), </span><br><span class="line">    tableInfo.getKeyProperty(), tableInfo.getLogicDeleteSql(<span class="literal">true</span>, <span class="literal">false</span>)), Object.class); </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.addSelectMappedStatement(mapperClass, sqlMethod.getMethod(), sqlSource, modelClass, tableInfo); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，生成了SqlSource对象，再将SQL通过addSelectMappedStatement方法添加到meppedStatements中。</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-2010.51.23.png"></p><h2 id="4、配置"><a href="#4、配置" class="headerlink" title="4、配置"></a><strong>4</strong>、配置</h2><p>在MP中有大量的配置，其中有一部分是Mybatis原生的配置，另一部分是MP的配置，详情：<a href="https://mybatis.plus/confifig/">https://mybatis.plus/confifig/</a></p><p>以下讲讲常见配置</p><h3 id="4-1、基本配置"><a href="#4-1、基本配置" class="headerlink" title="4.1、基本配置"></a><strong>4.1</strong>、基本配置</h3><h4 id="4-1-1、confifigLocation"><a href="#4-1-1、confifigLocation" class="headerlink" title="4.1.1、confifigLocation"></a><strong>4.1.1</strong>、confifigLocation</h4><p>MyBatis 配置文件位置，如果您有单独的 MyBatis 配置，请将其路径配置到 confifigLocation 中。 MyBatisConfifiguration 的具体内容请参考MyBatis 官方文档</p><p>Spring Boot：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定全局配置文件</span></span><br><span class="line"><span class="attr">mybatis-plus.config-location</span> = <span class="string">classpath:mybatis-config.xml</span></span><br></pre></td></tr></table></figure><p>Spring MVC：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&lt;bean</span> <span class="string">id=&quot;sqlSessionFactory&quot; class=&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;&gt; </span></span><br><span class="line"></span><br><span class="line"><span class="attr">&lt;property</span> <span class="string">name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;/&gt; &lt;/bean&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-1-2、mapperLocations"><a href="#4-1-2、mapperLocations" class="headerlink" title="4.1.2、mapperLocations"></a><strong>4.1.2</strong>、mapperLocations</h4><p>MyBatis Mapper 所对应的 XML 文件位置，如果您在 Mapper 中有自定义方法（XML 中有自定义实现），需要进行该配置，告诉 Mapper 所对应的 XML 文件位置。</p><p>Spring Boot：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定Mapper.xml文件的路径</span></span><br><span class="line"><span class="attr">mybatis-plus.mapper-locations</span> = <span class="string">classpath*:mybatis/*.xml</span></span><br></pre></td></tr></table></figure><p>Spring MVC： </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&lt;bean</span> <span class="string">id=&quot;sqlSessionFactory&quot; </span></span><br><span class="line"><span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;&gt; </span></span><br><span class="line"><span class="attr">&lt;property</span> <span class="string">name=&quot;mapperLocations&quot; value=&quot;classpath*:mybatis/*.xml&quot;/&gt; </span></span><br><span class="line"><span class="attr">&lt;/bean&gt;</span></span><br></pre></td></tr></table></figure><h5 id="Maven-多模块项目的扫描路径需以-classpath-开头-（即加载多个-jar-包下的-XML-文件）"><a href="#Maven-多模块项目的扫描路径需以-classpath-开头-（即加载多个-jar-包下的-XML-文件）" class="headerlink" title="Maven 多模块项目的扫描路径需以 classpath*: 开头 （即加载多个 jar 包下的 XML 文件）"></a><strong>Maven</strong> <strong>多模块项目的扫描路径需以</strong> classpath*: <strong>开头 （即加载多个</strong> <strong>jar</strong> <strong>包下的</strong> <strong>XML</strong> <strong>文件）</strong></h5><p>classpath*:的出现是为了从多个jar文件中加载相同的文件. classpath:只能加载找到的第一个文件.</p><p>测试：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span> <span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> </span></span><br><span class="line"><span class="meta"><span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> </span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;cn.itcast.mp.mapper.UserMapper&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;cn.itcast.mp.pojo.User&quot;</span>&gt;</span> </span><br><span class="line">select * from tb_user where id = #&#123;id&#125; </span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mp.mapper; </span><br><span class="line"><span class="keyword">import</span> cn.itcast.mp.pojo.User; </span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123; </span><br><span class="line">User <span class="title function_">findById</span><span class="params">(Long id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> <span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectPage</span><span class="params">()</span> &#123; </span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.findById(<span class="number">2L</span>); </span><br><span class="line">System.out.println(user);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-1-3、typeAliasesPackage"><a href="#4-1-3、typeAliasesPackage" class="headerlink" title="4.1.3、typeAliasesPackage"></a>4.1.3<strong>、typeAliasesPackage</strong></h4><p>MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名（<strong>即 XML 中调用的时候不用包含包名</strong>）。</p><p>Spring Boot：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus.type-aliases-package</span> = <span class="string">cn.itcast.mp.pojo</span></span><br></pre></td></tr></table></figure><p>Spring MVC：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&lt;bean</span> <span class="string">id=&quot;sqlSessionFactory&quot; class=&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;&gt; </span></span><br><span class="line"><span class="attr">&lt;property</span> <span class="string">name=&quot;typeAliasesPackage&quot; value=&quot;com.baomidou.mybatisplus.samples.quickstart.entity&quot;/&gt; </span></span><br><span class="line"><span class="attr">&lt;/bean&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-2、进阶配置"><a href="#4-2、进阶配置" class="headerlink" title="4.2、进阶配置"></a><strong>4.2</strong>、进阶配置</h3><p>本部分（Confifiguration）的配置大都为 MyBatis 原生支持的配置，这意味着您可以通过 MyBatis XML 配置文件的形式进行配置。</p><h4 id="4-2-1、mapUnderscoreToCamelCase"><a href="#4-2-1、mapUnderscoreToCamelCase" class="headerlink" title="4.2.1、mapUnderscoreToCamelCase"></a><strong>4.2.1</strong>、mapUnderscoreToCamelCase</h4><ul><li><p>类型： boolean</p></li><li><p>默认值： true</p></li></ul><p>是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN（下划线命名） 到经典 Java 属性名 aColumn（驼峰命名） 的类似映射。</p><p>注意:</p><p>此属性在 MyBatis 中原默认值为 false，在 MyBatis-Plus 中，此属性也将用于生成最终的 SQL 的 select body如果您的数据库命名符合规则无需使用 @TableField 注解指定数据库字段名</p><p>示例（SpringBoot）：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#关闭自动驼峰映射，该参数不能和mybatis-plus.config-location同时存在 </span></span><br><span class="line"><span class="attr">mybatis-plus.configuration.map-underscore-to-camel-case</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure><h4 id="4-2-2、cacheEnabled"><a href="#4-2-2、cacheEnabled" class="headerlink" title="4.2.2、cacheEnabled"></a><strong>4.2.2</strong>、cacheEnabled</h4><ul><li><p>类型： boolean</p></li><li><p>默认值： true</p></li></ul><p>全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存，默认为 true。</p><p>示例：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus.configuration.cache-enabled</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure><h3 id="4-3、DB策略配置"><a href="#4-3、DB策略配置" class="headerlink" title="4.3、DB策略配置"></a><strong>4.3</strong>、DB策略配置</h3><h4 id="4-3-1、idType-主键生成策略"><a href="#4-3-1、idType-主键生成策略" class="headerlink" title="4.3.1、idType(主键生成策略)"></a><strong>4.3.1</strong>、idType(主键生成策略)</h4><ul><li><p>类型： com.baomidou.mybatisplus.annotation.IdType</p></li><li><p>默认值： ID_WORKER</p></li></ul><p>全局默认主键类型，设置后，即可省略实体对象中的@TableId(type &#x3D; IdType.AUTO)配置。</p><p>示例：</p><p>SpringBoot：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus.global-config.db-config.id-type</span>=<span class="string">auto</span></span><br></pre></td></tr></table></figure><p>SpringMVC：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&lt;!--这里使用MP提供的sqlSessionFactory，完成了Spring与MP的整合--&gt;</span> <span class="string"></span></span><br><span class="line"><span class="attr">&lt;bean</span> <span class="string">id=&quot;sqlSessionFactory&quot; </span></span><br><span class="line"><span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;&gt; </span></span><br><span class="line"><span class="attr">&lt;property</span> <span class="string">name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;</span></span><br><span class="line">    <span class="attr">&lt;property</span> <span class="string">name=&quot;globalConfig&quot;&gt; </span></span><br><span class="line">    <span class="attr">&lt;bean</span> <span class="string">class=&quot;com.baomidou.mybatisplus.core.config.GlobalConfig&quot;&gt; </span></span><br><span class="line">    <span class="attr">&lt;property</span> <span class="string">name=&quot;dbConfig&quot;&gt; </span></span><br><span class="line">    <span class="attr">&lt;bean</span> <span class="string">class=&quot;com.baomidou.mybatisplus.core.config.GlobalConfig$DbConfig&quot;&gt; </span></span><br><span class="line">    <span class="attr">&lt;property</span> <span class="string">name=&quot;idType&quot; value=&quot;AUTO&quot;/&gt;</span></span><br><span class="line">                  <span class="attr">&lt;/bean&gt;</span> <span class="string"></span></span><br><span class="line">              <span class="attr">&lt;/property&gt;</span> <span class="string"></span></span><br><span class="line">          <span class="attr">&lt;/bean&gt;</span> <span class="string"></span></span><br><span class="line">      <span class="attr">&lt;/property&gt;</span> <span class="string"></span></span><br><span class="line">  <span class="attr">&lt;/bean&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-3-2、tablePrefifix"><a href="#4-3-2、tablePrefifix" class="headerlink" title="4.3.2、tablePrefifix"></a><strong>4.3.2</strong>、tablePrefifix</h4><ul><li><p>类型： String</p></li><li><p>默认值： null</p></li></ul><p>表名前缀，全局配置后可省略@TableName()配置。</p><p>SpringBoot：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus.global-config.db-config.table-prefix</span>=<span class="string">tb_</span></span><br></pre></td></tr></table></figure><p>SpringMVC： </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&lt;bean</span> <span class="string">id=&quot;sqlSessionFactory&quot; </span></span><br><span class="line"><span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;&gt; </span></span><br><span class="line"><span class="attr">&lt;property</span> <span class="string">name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt; </span></span><br><span class="line"><span class="attr">&lt;property</span> <span class="string">name=&quot;globalConfig&quot;&gt; </span></span><br><span class="line"><span class="attr">&lt;bean</span> <span class="string">class=&quot;com.baomidou.mybatisplus.core.config.GlobalConfig&quot;&gt;</span></span><br><span class="line">        <span class="attr">&lt;property</span> <span class="string">name=&quot;dbConfig&quot;&gt; </span></span><br><span class="line">        <span class="attr">&lt;bean</span> <span class="string">class=&quot;com.baomidou.mybatisplus.core.config.GlobalConfig$DbConfig&quot;&gt; </span></span><br><span class="line">        <span class="attr">&lt;property</span> <span class="string">name=&quot;idType&quot; value=&quot;AUTO&quot;/&gt; </span></span><br><span class="line">        <span class="attr">&lt;property</span> <span class="string">name=&quot;tablePrefix&quot; value=&quot;tb_&quot;/&gt; </span></span><br><span class="line">        <span class="attr">&lt;/bean&gt;</span> <span class="string"></span></span><br><span class="line">      <span class="attr">&lt;/property&gt;</span></span><br><span class="line">    <span class="attr">&lt;/bean&gt;</span></span><br><span class="line"><span class="attr">&lt;/property&gt;</span></span><br><span class="line"><span class="attr">&lt;/bean&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5、条件构造器"><a href="#5、条件构造器" class="headerlink" title="5、条件构造器"></a><strong>5</strong>、条件构造器</h2><p>在MP中，Wrapper接口的实现类关系如下：</p><p>可以看到，AbstractWrapperAbstractChainWrapper是重点实现，接下来我们重点学习AbstractWrapper以及其子类。</p><p>说明：</p><p>QueryWrapper(LambdaQueryWrapper) 和 UpdateWrapper(LambdaUpdateWrapper) 的父类 用于生成 sql的 where 条件, entity 属性也用于生成 sql 的 where 条件 注意: entity 生成的 where 条件与 使用各个 api 生成的 where 条件<strong>没有任何关联行为</strong></p><p>官网文档地址：<a href="https://mybatis.plus/guide/wrapper.html">https://mybatis.plus/guide/wrapper.html</a></p><h3 id="5-1、allEq"><a href="#5-1、allEq" class="headerlink" title="5.1、allEq"></a><strong>5.1</strong>、allEq</h3><h4 id="5-1-1、说明"><a href="#5-1-1、说明" class="headerlink" title="5.1.1、说明"></a><strong>5.1.1</strong>、说明</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">allEq(Map&lt;R, V&gt; params)</span><br><span class="line">allEq(Map&lt;R, V&gt; params, booleanv null2IsNull) </span><br><span class="line">allEq(boolean condition, Map&lt;R, V&gt; params, boolean null2IsNull)</span><br></pre></td></tr></table></figure><ul><li>全部eq(或个别isNull)</li></ul><p>个别参数说明: params : key 为数据库字段名, value 为字段值 null2IsNull : 为 true 则在 map 的 value 为 null 时调用 isNull 方法,为 false 时则忽略 value 为 null 的 </p><ul><li>例1: allEq({id:1,name:”老王”,age:null}) —&gt; id &#x3D; 1 and name &#x3D; ‘老王’ and age is null </li><li>例2: allEq({id:1,name:”老王”,age:null}, false) —&gt; id &#x3D; 1 and name &#x3D; ‘老王’</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">allEq(BiPredicate&lt;R, V&gt; filter, Map&lt;R, V&gt; params)</span><br><span class="line">allEq(BiPredicate&lt;R, V&gt; filter, Map&lt;R, V&gt; params, boolean null2IsNull)</span><br><span class="line">allEq(boolean condition, BiPredicate&lt;R, V&gt; filter, Map&lt;R, V&gt; params, boolean null2IsNull)</span><br></pre></td></tr></table></figure><p>个别参数说明: filter : 过滤函数,是否允许字段传入比对条件中 params 与 null2IsNull : 同上</p><ul><li>例1: allEq((k,v) -&gt; k.indexOf(“a”) &gt; 0, {id:1,name:”老王”,age:null}) —&gt; name &#x3D; ‘老王’ and age is null </li><li>例2: allEq((k,v) -&gt; k.indexOf(“a”) &gt; 0, {id:1,name:”老王”,age:null}, false) —&gt; name &#x3D; ‘老王’</li></ul><h4 id="5-1-2、测试用例"><a href="#5-1-2、测试用例" class="headerlink" title="5.1.2、测试用例"></a><strong>5.1.2</strong>、测试用例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> <span class="meta">@SpringBootTest</span> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line">  <span class="meta">@Autowired</span> </span><br><span class="line">  <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line">  </span><br><span class="line"><span class="meta">@Test</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testWrapper</span><span class="params">()</span> &#123; </span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//设置条件 </span></span><br><span class="line">    Map&lt;String,Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(); </span><br><span class="line">    params.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;曹操&quot;</span>); </span><br><span class="line">    params.put(<span class="string">&quot;age&quot;</span>, <span class="string">&quot;20&quot;</span>); </span><br><span class="line">    params.put(<span class="string">&quot;password&quot;</span>, <span class="literal">null</span>); </span><br><span class="line">    <span class="comment">// wrapper.allEq(params);//SELECT * FROM tb_user WHERE password IS NULL AND name = ? AND age = ? </span></span><br><span class="line">    <span class="comment">// wrapper.allEq(params,false); </span></span><br><span class="line">    <span class="comment">//SELECT * FROM tb_user WHERE name = ? AND age = ? </span></span><br><span class="line">    <span class="comment">// wrapper.allEq((k, v) -&gt; (k.equals(&quot;name&quot;) || k.equals(&quot;age&quot;)) ,params);//SELECT * FROM tb_user WHERE name = ? AND age = ? </span></span><br><span class="line">    List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectList(wrapper); </span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123; </span><br><span class="line">      System.out.println(user); </span><br><span class="line">    &#125; </span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2、基本比较操作"><a href="#5-2、基本比较操作" class="headerlink" title="5.2、基本比较操作"></a><strong>5.2</strong>、基本比较操作</h4><ul><li><p>eq</p><ul><li>等于 &#x3D;</li></ul></li><li><p>ne</p><ul><li>不等于 &lt;&gt;</li></ul></li><li><p>gt</p><ul><li>大于 &gt;</li></ul></li><li><p>ge</p><ul><li>大于等于 &gt;&#x3D;</li></ul></li><li><p>lt</p><ul><li>小于 &lt;</li></ul></li><li><p>le</p><ul><li>小于等于 &lt;&#x3D;</li></ul></li><li><p>between</p><ul><li>BETWEEN 值1 AND 值2</li></ul></li><li><p>notBetween</p><ul><li>NOT BETWEEN 值1 AND 值2</li></ul></li><li><p>in</p><ul><li>字段 IN (value.get(0), value.get(1), …)</li></ul></li><li><p>notIn</p><ul><li>字段 NOT IN (v0, v1, …)</li></ul></li></ul><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> <span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line">  <span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line">  </span><br><span class="line"> <span class="meta">@Test</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testEq</span><span class="params">()</span> &#123; </span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;(); </span><br><span class="line">        <span class="comment">//SELECT id,user_name,password,name,age,email FROM tb_user WHERE password = ? AND age &gt;= ? AND name IN (?,?,?) </span></span><br><span class="line">        wrapper.eq(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;123456&quot;</span>) </span><br><span class="line">          .ge(<span class="string">&quot;age&quot;</span>, <span class="number">20</span>) </span><br><span class="line">          .in(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;王五&quot;</span>, <span class="string">&quot;赵六&quot;</span>);</span><br><span class="line">        List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectList(wrapper); </span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123; </span><br><span class="line">          System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-3、模糊查询"><a href="#5-3、模糊查询" class="headerlink" title="5.3、模糊查询"></a><strong>5.3</strong>、模糊查询</h4><ul><li><p>like</p><ul><li>LIKE ‘%值%’</li><li>例: like(“name”, “王”) —&gt; name like ‘%王%’</li></ul></li><li><p>notLike</p><ul><li>NOT LIKE ‘%值%’</li><li>例: notLike(“name”, “王”) —&gt; name not like ‘%王%’</li></ul></li><li><p>likeLeft</p><ul><li>LIKE ‘%值’ </li><li>例: likeLeft(“name”, “王”) —&gt; name like ‘%王’</li></ul></li><li><p>likeRight</p><ul><li>LIKE ‘值%’</li><li>例: likeRight(“name”, “王”) —&gt; name like ‘王%’</li></ul></li></ul><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> <span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line">  <span class="meta">@Autowired</span> </span><br><span class="line">  <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Test</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testWrapper</span><span class="params">()</span> &#123;</span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;(); </span><br><span class="line">        <span class="comment">//SELECT id,user_name,password,name,age,email FROM tb_user WHERE name LIKE ? </span></span><br><span class="line">        <span class="comment">//Parameters: %曹%(String) </span></span><br><span class="line">        wrapper.like(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;曹&quot;</span>);</span><br><span class="line">        List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectList(wrapper); </span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123; </span><br><span class="line">          System.out.println(user); </span><br><span class="line">        &#125; </span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-4、排序"><a href="#5-4、排序" class="headerlink" title="5.4、排序"></a><strong>5.4</strong>、排序</h3><ul><li><p>orderBy</p><ul><li>排序：ORDER BY 字段, …</li><li>例: orderBy(true, true, “id”, “name”) —&gt; order by id ASC,name ASC</li></ul></li><li><p>orderByAsc</p><ul><li>排序：ORDER BY 字段, … ASC</li><li>例: orderByAsc(“id”, “name”) —&gt; order by id ASC,name ASC</li></ul></li><li><p>orderByDesc</p><ul><li>排序：ORDER BY 字段, … DESC</li><li>例: orderByDesc(“id”, “name”) —&gt; order by id DESC,name DESC</li></ul></li></ul><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> <span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line">  <span class="meta">@Autowired</span> </span><br><span class="line">  <span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Test</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testWrapper</span><span class="params">()</span> &#123; </span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//SELECT id,user_name,password,name,age,email FROM tb_user ORDER BY age DESC </span></span><br><span class="line">        wrapper.orderByDesc(<span class="string">&quot;age&quot;</span>); </span><br><span class="line">        List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectList(wrapper); </span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123; </span><br><span class="line">          System.out.println(user); </span><br><span class="line">        &#125; </span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-5、逻辑查询"><a href="#5-5、逻辑查询" class="headerlink" title="5.5、逻辑查询"></a><strong>5.5</strong>、逻辑查询</h3><ul><li><p>or</p><ul><li>拼接 OR</li><li>主动调用 or 表示紧接着下一个<strong>方法</strong>不是用 and 连接!(不调用 or 则默认为使用 and 连接)</li></ul></li><li><p>and</p><ul><li>AND 嵌套</li><li>例: and(i -&gt; i.eq(“name”, “李白”).ne(“status”, “活着”)) —&gt; and (name &#x3D; ‘李白’ and status &lt;&gt; ‘活着’)</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> <span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line">  <span class="meta">@Autowired</span> </span><br><span class="line">  <span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Test</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testWrapper</span><span class="params">()</span> &#123; </span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;(); </span><br><span class="line">        <span class="comment">//SELECT id,user_name,password,name,age,email FROM tb_user WHERE name = ? OR age = ? </span></span><br><span class="line">        wrapper.eq(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;李四&quot;</span>).or().eq(<span class="string">&quot;age&quot;</span>, <span class="number">24</span>); </span><br><span class="line">        List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectList(wrapper); </span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123; </span><br><span class="line">          System.out.println(user); </span><br><span class="line">        &#125; </span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-6、select"><a href="#5-6、select" class="headerlink" title="5.6、select"></a><strong>5.6</strong>、select</h3><p>在MP查询中，默认查询所有的字段，如果有需要也可以通过select方法进行指定字段。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span> <span class="meta">@SpringBootTest</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123; </span><br><span class="line">  <span class="meta">@Autowired</span> </span><br><span class="line">  <span class="keyword">private</span> UserMapper userMapper; </span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Test</span> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testWrapper</span><span class="params">()</span> &#123; </span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;(); </span><br><span class="line">        <span class="comment">//SELECT id,name,age FROM tb_user WHERE name = ? OR age = ? </span></span><br><span class="line">        wrapper.eq(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;李四&quot;</span>) .or() .eq(<span class="string">&quot;age&quot;</span>, <span class="number">24</span>) .select(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>);</span><br><span class="line">        List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectList(wrapper); </span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123; </span><br><span class="line">          System.out.println(user); </span><br><span class="line">        &#125; </span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、了解Mybatis-Plus&quot;&gt;&lt;a href=&quot;#1、了解Mybatis-Plus&quot; class=&quot;headerlink&quot; title=&quot;1、了解Mybatis-Plus&quot;&gt;&lt;/a&gt;&lt;strong&gt;1&lt;/strong&gt;、了解Mybatis-Plus&lt;/h1&gt;</summary>
      
    
    
    
    
    <category term="Mybatis" scheme="http://example.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Vue</title>
    <link href="http://example.com/2022/06/06/Vue/"/>
    <id>http://example.com/2022/06/06/Vue/</id>
    <published>2022-06-06T02:37:19.000Z</published>
    <updated>2022-06-24T02:21:45.828Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Vue概述"><a href="#1-Vue概述" class="headerlink" title="1. Vue概述"></a>1. Vue概述</h2><p><strong>目标</strong>：MVVM模式应用特点，Vue概念</p><p>前端框架三巨头：Vue.js、React.js、AngularJS，vue.js以其轻量易用著称，vue.js和React.js发展速度最快。</p><p>渐进式：可以选择性的使用该框架的一个或一些组件，这些组件的使用也不需要将框架全部组件都应用；而且用了这些组件也不要求你的系统全部都使用该框架。</p><p><strong>小结</strong>：</p><p>MVVM通过视图与模型的双向绑定，简化前端操作。Vue是一款前端渐进式框架，可以提高前端开发效率。</p><h2 id="2-搭建示例工程"><a href="#2-搭建示例工程" class="headerlink" title="2. 搭建示例工程"></a>2. 搭建示例工程</h2><h3 id="2-2-1-下载安装"><a href="#2-2-1-下载安装" class="headerlink" title="2.2.1 下载安装"></a>2.2.1 下载安装</h3><p>下载地址：<a href="https://github.com/vuejs/vue">https://github.com/vuejs/vue</a></p><h3 id="2-2-2-使用CDN"><a href="#2-2-2-使用CDN" class="headerlink" title="2.2.2 使用CDN"></a>2.2.2 使用CDN</h3><p>或者也可以直接使用公共的CDN（内容分发网络）服务：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--开发环境版本，包含了用帮助的命令行警告--&gt;</span></span><br><span class="line">&lt;scriptsrc=&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&gt;<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--生产环境版本，优化了尺寸和速度--&gt;</span></span><br><span class="line">&lt;scriptsrc=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&gt;<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>目标</strong>：使用IDEA创建示例工程并在工程中通过npm安装下载vue.js</p><p><strong>分析</strong>：</p><p>vue是一个前端框架，也是其实是一个js文件；下载vue.js文件并在页面中引入该js文件。</p><p>vue.js的下载方式：</p><ul><li>可以引用在线的vue.js；</li><li>可以离线下载vue.js；</li><li>npm包资源管理器，可以下载vue.js</li></ul><p><strong>小结</strong>：</p><p>使用了npm的方式安装vue模块：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#初始化</span></span><br><span class="line">npm init -y</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载vue模块</span></span><br><span class="line">npm install vue --save</span><br></pre></td></tr></table></figure><h2 id="3-演示双向绑定与事件处理"><a href="#3-演示双向绑定与事件处理" class="headerlink" title="3. 演示双向绑定与事件处理"></a>3. 演示双向绑定与事件处理</h2><p><strong>目标</strong>：创建01-demo.html页面并初始化Vue实例，通过console修改Vue数据实现双向绑定效果和创建按钮实现点击即自增</p><p><strong>分析</strong>：</p><ol><li>创建页面，初始化vue；</li><li>&lt;!–swig￼36–&gt;获取显示数据；</li><li>v-model实现双向绑定；</li><li>v-on演示事件处理</li></ol><p><strong>小结</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vuejs测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;node_modules/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;num&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;num++&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;name&#125;&#125; 非常酷！有&#123;&#123;num&#125;&#125;个学科。<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>:<span class="string">&quot;黑马&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">num</span>: <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>首先通过new Vue()来创建Vue实例</li><li>然后构造函数接收一个对象，对象中有一些属性：<ul><li>el：是element的缩写，通过id选中要渲染的页面元素，本例中是一个div</li><li>data：数据，数据是一个对象，里面有很多属性，都可以渲染到视图中<ul><li>name：这里指定了一个name属性</li></ul></li></ul></li><li>页面中的h2元素中，通过的方式，来渲染刚刚定义的name属性。</li><li>在data添加了新的属性：num</li><li>在页面中有一个input元素，通过v-model与num进行绑定。</li><li>同时通过在页面输出</li><li>可以观察到，输入框的变化引起了data中的num的变化，同时页面输出也跟着变化<ul><li>input与num绑定，input的value值变化，影响到了data中的num值</li><li>页面与数据num绑定，因此num值变化，引起了页面效果变化。</li></ul></li><li>这就是双向绑定</li><li>这里用v-on指令绑定点击事件，而不是普通的onclick，然后直接操作num</li><li>普通onclick是无法直接操作num的。</li></ul><h2 id="4-Vue实例"><a href="#4-Vue实例" class="headerlink" title="4. Vue实例"></a>4. Vue实例</h2><h3 id="4-1创建Vue实例"><a href="#4-1创建Vue实例" class="headerlink" title="4.1创建Vue实例"></a>4.1创建Vue实例</h3><p>每个Vue应用都是通过用Vue函数创建一个新的Vue实例开始的：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var vm = new Vue(&#123;</span><br><span class="line">//选项</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在构造函数中传入一个对象，并且在对象中声明各种Vue需要的数据和方法，包括：</p><ul><li>el</li><li>data</li><li>methods</li><li>…</li></ul><h3 id="4-2-模板或元素"><a href="#4-2-模板或元素" class="headerlink" title="4.2 模板或元素"></a>4.2 模板或元素</h3><p>每个Vue实例都需要关联一段Html模板，Vue会基于此模板进行视图渲染；可以通过el属性来指定。例如一段html模板：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后创建Vue实例，关联这个div</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line"><span class="attr">el</span>:<span class="string">&quot;#app&quot;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这样，Vue就可以基于id为app的div元素作为模板进行渲染了。在这个div范围以外的部分是无法使用vue特性的。</p><h3 id="4-3-数据"><a href="#4-3-数据" class="headerlink" title="4.3 数据"></a>4.3 数据</h3><p>当Vue实例被创建时，它会尝试获取在data中定义的所有属性，用于视图的渲染，并且<strong>监视</strong>data中的属性变化，当data发生改变，所有相关的视图都将重新渲染，这就是“响应式“系统。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line"><span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span><br><span class="line"><span class="attr">data</span>:&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&quot;黑马&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>name的变化会影响到input的值</li><li>input中输入的值，也会导致vm中的name发生改变</li></ul><h4 id="4-4-方法"><a href="#4-4-方法" class="headerlink" title="4.4 方法"></a>4.4 方法</h4><p>Vue实例中除了可以定义data属性，也可以定义方法，并且在Vue的作用范围内使用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">&lt;buttonv-on:click=&quot;add&quot;&gt;点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="title function_">newVue</span>(&#123;</span><br><span class="line"><span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span><br><span class="line"><span class="attr">data</span>:&#123;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>:&#123;</span><br><span class="line"><span class="attr">add</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;点我了...233&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="4-5-生命周期及钩子函数"><a href="#4-5-生命周期及钩子函数" class="headerlink" title="4.5 生命周期及钩子函数"></a>4.5 生命周期及钩子函数</h2><p>每个Vue实例在被创建时都要经过一系列的初始化过程：创建实例，装载模板，渲染模板等。Vue为生命周期中的每个状态都设置了钩子函数（监听函数）。每当Vue实例处于不同的生命周期时，对应的函数就会被触发调用。</p><p>所有的生命周期钩子自动绑定this上下文到实例中，因此你可以访问数据，对属性和方法进行运算。这意味着<strong>你不能使用箭头函数来定义一个生命周期方法</strong>(例如created:()&#x3D;&gt;this.fetchTodos())。这是因为箭头函数绑定了父上下文，因此this与你期待的Vue实例不同，this.fetchTodos的行为未定义。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;! DOCTYPE html&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>vuejs 测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;node_modules/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;msg&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">el : <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//初始化为空</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">msg</span>:<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//钩子函数</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">created</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//this表示vue实例</span></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">this</span>.<span class="property">msg</span> = <span class="string">&quot;hello vue.created&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>小结</strong>：</p><p>钩子函数会在vue实例的各个生命周期阶段自动调用；具体有：beforeCreate，created,beforeMount,mounted,updated,beforeUpdate，destroyed，beforeDestroy</p><p>created钩子函数常用场景：用于初始化数据</p><blockquote><p>钩子函数不要使用箭头函数的方式编写。</p></blockquote><p><strong>this</strong>就是当前的Vue实例，在Vue对象内部，必须使用this才能访问到Vue中定义的data内属性、方法等。</p><h2 id="5-插值、v-text和v-html"><a href="#5-插值、v-text和v-html" class="headerlink" title="5.插值、v-text和v-html"></a>5.插值、v-text和v-html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;表达式&#125;&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>该表达式支持JS语法，可以调用js内置函数（必须有返回值）</li><li>表达式必须有返回结果。例如1+ 1，没有结果的表达式不允许使用，如：var a &#x3D; 1 + 1;</li><li>可以直接获取Vue实例中定义的数据或函数</li></ul><h3 id="5-1-1-指令"><a href="#5-1-1-指令" class="headerlink" title="5.1.1 指令"></a>5.1.1 指令</h3><p>指令(Directives)是带有v-前缀的特殊属性。例如在入门案例中的v-model，代表双向绑定。</p><h3 id="5-1-2-插值闪烁"><a href="#5-1-2-插值闪烁" class="headerlink" title="5.1.2 插值闪烁"></a>5.1.2 插值闪烁</h3><p>使用&lt;!–swig￼40–&gt;方式在网速较慢时会出现问题。在数据未加载完成时，页面会显示出原始的&lt;!–swig￼41–&gt;，加载完毕后才显示正确数据，称为插值闪烁。</p><h3 id="5-1-3-v-text和v-html"><a href="#5-1-3-v-text和v-html" class="headerlink" title="5.1.3 v-text和v-html"></a>5.1.3 v-text和v-html</h3><p>使用v-text和v-html指令来替代&lt;!–swig￼42–&gt;</p><p>说明：</p><ul><li>v-text：将数据输出到元素内部，如果输出的数据有HTML代码，会作为普通文本输出</li><li>v-html：将数据输出到元素内部，如果输出的数据有HTML代码，会被渲染</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;! DOCTYPE html&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>vuejs 测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;node_modules/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">v-text:<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">v-html:<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">el : <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">msg</span>:<span class="string">&quot;&lt;h2&gt;hello,vue.&lt;/h2&gt;&quot;</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-0711.41.14.png"></p><p><strong>插值</strong>可以使用在有需要显示vue实例数据的地方，可以在插值表达式中调用实例的数据属性和函数。</p><p>v-text和v-html的作用：可以将数据在模板中进行显示；</p><p><strong>区别</strong>：v-html会对内容中出现的html标签进行渲染，而v-text会将内容当做普遍文本输出到元素里面。</p><h3 id="5-1-4-v-model"><a href="#5-1-4-v-model" class="headerlink" title="5.1.4 v-model"></a>5.1.4 v-model</h3><p>v-model是双向绑定</p><p>目前v-model的可使用元素有：</p><ul><li>input</li><li>select</li><li>textarea</li><li>checkbox</li><li>radio</li><li>components（Vue中的自定义组件）</li></ul><p>除了最后一项，其他都是表单的输入项</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Java&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;language&quot;</span>&gt;</span>Java<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Python&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;language&quot;</span>&gt;</span>Python<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Swift&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;language&quot;</span>&gt;</span>Swift<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        你选择了：&#123;&#123;language.join(&quot;，&quot;)&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">language</span>:[]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>多个 checkbox 对应一个model时，model的类型是一个数组，单个checkbox值是boolean类型</li><li>radio对应的值是input的value值</li><li>input 和 textarea 默认对应的model是字符串</li><li>select 单选对应字符串，多选对应也是数组</li></ul><h3 id="5-1-5-v-on"><a href="#5-1-5-v-on" class="headerlink" title="5.1.5 v-on"></a>5.1.5 v-on</h3><p>v-on指令用于给页面元素绑定事件。</p><p> 语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-on:事件名=&quot;js片段或函数名&quot;</span><br></pre></td></tr></table></figure><p>简单语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@事件名=&quot;js片段或函数名&quot;</span><br></pre></td></tr></table></figure><p>例如:v-on:click&#x3D;’add’可以简写为@click&#x3D;’add’</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;num++&quot;</span>&gt;</span>增加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;decrement&quot;</span>&gt;</span>减少<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        num = &#123;&#123;num&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    事件冒泡测试：<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color: lightblue; width:100px;height:100px&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;print(&#x27;div被点击了&#x27;)&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">&quot;print(&#x27;点击了button&#x27;)&quot;</span>&gt;</span>点我试试<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span>阻止默认事件：<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.itcast.cn&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;print(&#x27;点击了超链接&#x27;)&quot;</span> &gt;</span>传智播客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">num</span>:<span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//递减</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">decrement</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">num</span>--;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//打印</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">print</span>(<span class="params">str</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>事件修饰符</strong>：语法v-on:xxxx.修饰符，常用的修饰符有：</p><ul><li>.stop ：阻止事件冒泡</li><li>.prevent ：阻止默认事件发生</li><li>.capture ：使用事件捕获模式</li><li>.self ：只有元素自身触发事件才执行。（冒泡或捕获的都不执行）</li><li>.once ：只执行一次</li></ul><h3 id="5-1-6-v-for"><a href="#5-1-6-v-for" class="headerlink" title="5.1.6 v-for"></a>5.1.6 v-for</h3><p>遍历数据渲染页面是非常常用的需求，Vue中通过v-for指令来实现。</p><p>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-for=&quot;item in items&quot;</span><br></pre></td></tr></table></figure><ul><li>items：要遍历的数组，需要在vue的data中定义好。</li><li>item：循环变量</li></ul><p>可以在vue实例化的时候指定要遍历的数据，然后通过v-for指令在模板中遍历显示数据。一般情况下，要遍历的数据可以通过钩子函数created发送异步请求获取数据。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(user, index) in users&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123;index&#125;&#125;--&#123;&#123;user.name&#125;&#125;--&#123;&#123;user.age&#125;&#125;--&#123;&#123;user.gender&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, key, index) in person&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123;index&#125;&#125;--&#123;&#123;key&#125;&#125;--&#123;&#123;value&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">users</span>:[</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;黑马&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">13</span>,<span class="string">&quot;gender&quot;</span>:<span class="string">&quot;男&quot;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;传智播客&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">13</span>,<span class="string">&quot;gender&quot;</span>:<span class="string">&quot;女&quot;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;酷丁鱼&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">4</span>,<span class="string">&quot;gender&quot;</span>:<span class="string">&quot;男&quot;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">            ],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">person</span>:&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;传智汇&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">13</span>,<span class="string">&quot;gender&quot;</span>:<span class="string">&quot;男&quot;</span>,<span class="string">&quot;address&quot;</span>:<span class="string">&quot;中国&quot;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="数组角标"><a href="#数组角标" class="headerlink" title="数组角标"></a>数组角标</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-for=&quot;(item,index) in i=Ωtems&quot;</span><br></pre></td></tr></table></figure><ul><li>items：要迭代的数组</li><li>item：迭代得到的数组元素别名</li><li>index：迭代到的当前元素索引，从0开始。</li></ul><h4 id="遍历对象"><a href="#遍历对象" class="headerlink" title="遍历对象"></a>遍历对象</h4><p>v-for除了可以迭代数组，也可以迭代对象。语法基本类似</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v-for=&quot;value in object&quot;</span><br><span class="line">v-for=&quot;(value,key) in object&quot;</span><br><span class="line">v-for=&quot;(value,key,index) in object&quot;</span><br></pre></td></tr></table></figure><ul><li>1个参数时，得到的是对象的值</li><li>2个参数时，第一个是值，第二个是键</li><li>3个参数时，第三个是索引，从0开始</li></ul><h4 id="key"><a href="#key" class="headerlink" title="key"></a>key</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li v-for=&quot;(item,index) in items&quot; :key=&quot;index&quot;&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li><p>key一般使用在遍历完后，又增、减集合元素的时候更有意义。</p></li><li><p>理想的key值是每项都有的且唯一的id。也就是key是该项的唯一标识。</p></li><li><p>这里使用了一个特殊语法：:key&#x3D;””后面会讲到，它可以让你读取vue中的属性，并赋值给key属性</p></li><li><p>这里绑定的key是数组的索引，应该是唯一的</p></li></ul><h3 id="5-1-7-v-if和v-show"><a href="#5-1-7-v-if和v-show" class="headerlink" title="5.1.7 v-if和v-show"></a>5.1.7 v-if和v-show</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-if=&quot;布尔表达式&quot;</span><br></pre></td></tr></table></figure><p>当得到结果为true时，所在的元素才会被渲染。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>vuejs测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;show =!show&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;show&quot;</span>&gt;</span></span><br><span class="line">Hello VueJS.</span><br><span class="line"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">&lt;ulv-if=&quot;show&quot;&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(user,index) in users&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;user.gender==&#x27;女&#x27;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color:deeppink&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;index&#125;&#125;--&#123;&#123;user.name&#125;&#125;--&#123;&#123;user.age&#125;&#125;--&#123;&#123;user.gender&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-else</span> <span class="attr">style</span>=<span class="string">&quot;background-color:blue&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;index&#125;&#125;--&#123;&#123;user.name&#125;&#125;--&#123;&#123;user.age&#125;&#125;--&#123;&#123;user.gender&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-show</span>=<span class="string">&quot;show&quot;</span>&gt;</span></span><br><span class="line">你好；黑马！</span><br><span class="line"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;node_modules/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123; </span></span><br><span class="line"><span class="language-javascript"><span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,<span class="comment">//el即element，要渲染的页面元素</span></span></span><br><span class="line"><span class="language-javascript"><span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">show</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">users</span>:[</span></span><br><span class="line"><span class="language-javascript">&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;黑马&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">8</span>,<span class="string">&quot;gender&quot;</span>:<span class="string">&quot;男&quot;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;传智播客&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">12</span>,<span class="string">&quot;gender&quot;</span>:<span class="string">&quot;女&quot;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;酷丁鱼&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">4</span>,<span class="string">&quot;gender&quot;</span>:<span class="string">&quot;男&quot;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;传智大学&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">2</span>,<span class="string">&quot;gender&quot;</span>:<span class="string">&quot;女&quot;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>v-if在条件不满足的时候元素不会存在；v-show条件不满足的时候只是对元素进行隐藏。</p><h3 id="5-1-8-指令-v-bind使用"><a href="#5-1-8-指令-v-bind使用" class="headerlink" title="5.1.8.指令-v-bind使用"></a>5.1.8.指令-v-bind使用</h3><p>&lt;img src&#x3D;”” height&#x3D;””&#x2F;&gt; 其中src和height的值如果不想写死，而是想获取vue实例中的数据属性值的话；那可以通过使用v-bind实现：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;vue实例中的数据属性名&quot;</span> <span class="attr">:height</span>=<span class="string">&quot;vue实例中的数据属性名&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;color=&#x27;red&#x27;&quot;</span>&gt;</span>红色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;color=&#x27;blue&#x27;&quot;</span>&gt;</span>蓝色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;color&quot;</span>&gt;</span></span><br><span class="line">        点击按钮改变背景颜色</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;bool=!bool&quot;</span>&gt;</span>点我改变下面色块的颜色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;red:bool, blue:!bool&#125;&quot;</span>&gt;</span></span><br><span class="line">        点击按钮改变背景颜色</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:<span class="string">&quot;red&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">bool</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>v-bind的作用：可以对所有元素的属性设置vue实例的数据。</p><h3 id="5-1-9-计算属性的使用"><a href="#5-1-9-计算属性的使用" class="headerlink" title="5.1.9.计算属性的使用"></a>5.1.9.计算属性的使用</h3><p>一个日期的毫秒值要显示为格式化（yyyy-MM-dd）的日期字符串的话；可以使用computed计算属性里面的方法进行处理。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        你的生日是：</span><br><span class="line">        &#123;&#123;new Date(birthday).getFullYear()&#125;&#125;-&#123;&#123;new Date(birthday).getMonth()+1&#125;&#125;-&#123;&#123;new Date(birthday).getDay()&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        你的生日是：</span><br><span class="line">        &#123;&#123;birth&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">birthday</span>:<span class="number">1429032123201</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">birth</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="variable language_">this</span>.<span class="property">birthday</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> date.<span class="title function_">getFullYear</span>() + <span class="string">&quot;-&quot;</span> + (date.<span class="title function_">getMonth</span>()+<span class="number">1</span>) + <span class="string">&quot;-&quot;</span> + date.<span class="title function_">getDay</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>computed计算属性的应用场景：可以应用在插值或者指令表示式复杂的时候。可以将一些属性数据经过方法处理之后返回。</p><h3 id="5-1-10-watch基本和深度监控"><a href="#5-1-10-watch基本和深度监控" class="headerlink" title="5.1.10.watch基本和深度监控"></a>5.1.10.watch基本和深度监控</h3><p>在vue实例中数据属性；因为在页面中修改而产生了变化；可以通过watch监控获取其改变前后的值。</p><p>如果是修改的对象数据属性，可以开启深度监控获取修改后最新的对象数据。如：person.name</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;person.name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;person.age&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;person.age++&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        姓名为：&#123;&#123;person.name&#125;&#125;；年龄为：&#123;&#123;person.age&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">message</span>:<span class="string">&quot;黑马&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">person</span>:&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;heima&quot;</span>, <span class="string">&quot;age&quot;</span>:<span class="number">13</span>&#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">watch</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">message</span>(<span class="params">newValue, oldValue</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;新值：&quot;</span> + newValue + <span class="string">&quot;；旧值：&quot;</span> + oldValue);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">person</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//开启深度监控；监控对象中的属性值变化</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">deep</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//可以获取到最新的对象属性数据</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">handler</span>(<span class="params">obj</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;name = &quot;</span> + obj.<span class="property">name</span> + <span class="string">&quot;; age=&quot;</span> + obj.<span class="property">age</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>watch使用场景：可以监控视图中数据的变化而做出响应；如：下拉框列表中，当如果选择了对于的下拉框选项之后，要根据最新的值去加载一些其它数据的话。</p><h3 id="5-1-11-组件使用"><a href="#5-1-11-组件使用" class="headerlink" title="5.1.11.组件使用"></a>5.1.11.组件使用</h3><p>了解组件的使用场景；定义点击则计数的组件并使用全局注册和局部注册方式</p><p>可以将通用或者公用的页面模块抽取成vue组件，在vue实例中引用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用组件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">counter</span>&gt;</span><span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">counter</span>&gt;</span><span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">counter</span>&gt;</span><span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//定义组件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> counter = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">template</span>:<span class="string">&quot;&lt;button @click=&#x27;num++&#x27;&gt;你点击了&#123;&#123;num&#125;&#125;次&lt;/button&gt;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;<span class="attr">num</span>:<span class="number">0</span>&#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//全局注册组件：在所有的vue实例中都可以使用组件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//参数1：组件名称，参数2：具体的组件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//Vue.component(&quot;counter&quot;, counter);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">counter</span>: counter</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>组件使用场景：在项目需要重用某个模块（头部、尾部、新闻。。。）的时候，可以将模块抽取成组件，其它页面中注册组件并引用。</p><ul><li><p>全局注册：在任何vue实例中都可以引用，如：一般网站的头部导航菜单</p></li><li><p>局部注册：可以在有需要的页面引入组件，如：商城网站首页页面中各种活动模块</p></li><li><p>组件其实也是一个Vue实例，因此它在定义时也会接收：data、methods、生命周期函数等</p></li><li><p>不同的是组件不会与页面的元素绑定，否则就无法复用了，因此没有el属性。</p></li><li><p>但是组件渲染需要html模板，所以增加了template属性，值就是HTML模板</p></li><li><p>全局组件定义完毕，任何vue实例都可以直接在HTML中通过组件名称来使用组件了。</p></li><li><p>data的定义方式比较特殊，必须是一个函数。</p></li></ul><h3 id="5-1-12-父组件向子组件通信"><a href="#5-1-12-父组件向子组件通信" class="headerlink" title="5.1.12.父组件向子组件通信"></a>5.1.12.父组件向子组件通信</h3><p>通常一个单页应用会以一棵嵌套的组件树的形式来组织：</p><ul><li>页面首先分成了顶部导航、左侧内容区、右侧边栏三部分</li><li>左侧内容区又分为上下两个组件</li><li>右侧边栏中又包含了3个子组件</li></ul><p>各个组件之间以嵌套的关系组合在一起，那么这个时候不可避免的会有组件间通信的需求。</p><ul><li>父组件将简单字符串更新传递到子组件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用组件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">introduce</span> <span class="attr">:title</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">introduce</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//定义组件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> introduce = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">template</span>:<span class="string">&quot;&lt;h2&gt;&#123;&#123;title&#125;&#125;&lt;/h2&gt;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//定义接收父组件的属性</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">props</span>:[<span class="string">&quot;title&quot;</span>]</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//全局注册组件：在所有的vue实例中都可以使用组件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//参数1：组件名称，参数2：具体的组件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;introduce&quot;</span>, introduce);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">msg</span>:<span class="string">&quot;父组件的msg属性数据内容&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>父组件将数组更新传递到子组件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用组件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-list</span> <span class="attr">:items</span>=<span class="string">&quot;lessons&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">my-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//定义组件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> myList = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">template</span>:<span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;ul&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;li v-for=&quot;item in items&quot; :key=&quot;item.id&quot;&gt;&#123;&#123;item.id&#125;&#125;--&#123;&#123;item.name&#125;&#125;&lt;/li&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;/ul&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        `</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//定义接收父组件的属性</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">props</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">items</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//数据类型，如果是数组则是Array，如果是对象则是Object</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>:<span class="title class_">Array</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//默认值</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">default</span>:[]</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">msg</span>:<span class="string">&quot;父组件的msg属性数据内容&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">             :[</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="string">&quot;id&quot;</span>:<span class="number">1</span>, <span class="string">&quot;name&quot;</span>:<span class="string">&quot;Java&quot;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="string">&quot;id&quot;</span>:<span class="number">2</span>, <span class="string">&quot;name&quot;</span>:<span class="string">&quot;Php&quot;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="string">&quot;id&quot;</span>:<span class="number">3</span>, <span class="string">&quot;name&quot;</span>:<span class="string">&quot;前端&quot;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            myList</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>组件通信意义：父子组件之间数据的交换，能够及时更新组件内容。</p><h3 id="5-1-13-子组件向父组件通信"><a href="#5-1-13-子组件向父组件通信" class="headerlink" title="5.1.13.子组件向父组件通信"></a>5.1.13.子组件向父组件通信</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>num = &#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用组件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">counter</span> @<span class="attr">plus</span>=<span class="string">&quot;numPlus&quot;</span> @<span class="attr">reduce</span>=<span class="string">&quot;numReduce&quot;</span> <span class="attr">:snum</span>=<span class="string">&quot;num&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//定义组件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> counter = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">template</span>:<span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;button @click=&#x27;incrNum&#x27;&gt;+&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;button @click=&#x27;decrNum&#x27;&gt;-&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        `</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">props</span>:[<span class="string">&quot;snum&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//递增</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">incrNum</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//调用到父组件中的方法</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="variable language_">this</span>.$emit(<span class="string">&quot;plus&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">decrNum</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//调用到父组件中的方法</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="variable language_">this</span>.$emit(<span class="string">&quot;reduce&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//全局注册组件：在所有的vue实例中都可以使用组件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//参数1：组件名称，参数2：具体的组件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//Vue.component(&quot;counter&quot;, counter);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">counter</span>: counter</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">num</span>:<span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">numPlus</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">num</span>++;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">numReduce</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">num</span>--;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>vue提供了一个内置的this.$emit函数，用来调用父组件绑定的函数</li><li>子组件不能直接修改父组件传递参数的引用或者基本类型参数值。</li></ul><h3 id="5-1-14-axios概述"><a href="#5-1-14-axios概述" class="headerlink" title="5.1.14.axios概述"></a>5.1.14.axios概述</h3><p>axios的用途及了解常见方法</p><p>Axios是一个基于promise的HTTP库，可以用在浏览器和node.js中。</p><p>axios的github地址：<a href="https://github.com/axios/axios">https://github.com/axios/axios</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#如果使用npm则可以如下安装</span><br><span class="line">npm install axios</span><br></pre></td></tr></table></figure><p>或者也可以直接使用公共的CDN（内容分发网络）服务：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--开发环境版本，包含了用帮助的命令行警告--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="方法说明"><a href="#方法说明" class="headerlink" title="方法说明"></a>方法说明</h4><p>axios可以使用的方法有：</p><ul><li>axios(config)</li><li>axios.get(url[, config])</li><li>axios.delete(url[, config])</li><li>axios.head(url[, config])</li><li>axios.post(url[, data[, config]])</li><li>axios.put(url[, data[, config]])</li><li>axios.patch(url[, data[, config]])</li></ul><p>axios的作用：<strong>发送异步请求获取数据</strong>。常见的方法：<strong>get、post</strong>；在发送的时候可以指定参数（地址、请求方式和请求头部信息）；返回数据结构（<strong>data</strong>&#x2F;status&#x2F;statusText&#x2F;headers&#x2F;config）</p><h3 id="5-1-15-axios方法及get、post方法使用"><a href="#5-1-15-axios方法及get、post方法使用" class="headerlink" title="5.1.15.axios方法及get、post方法使用"></a>5.1.15.axios方法及get、post方法使用</h3><p>注意：如果使用axios访问跨域数据的时候，只需要在服务提供方中，在方法上面使用SpringMVC的跨域注解即可解决数据跨域问题。</p><p>如在方法上添加：@CrossOrigin(origins &#x3D; “<a href="http://localhost:10000&quot;">http://localhost:10000&quot;</a>)</p><p>如果请求的地址是使用了网关，那么在网关服务器上配置跨域就可以了；不能同时在网关服务器和服务提供服务工程中同时配置。</p><p><strong>目标</strong>：使用axios方法获取数据并在页面中将数据遍历显示；切换改为get&#x2F;post方法实现数据加载</p><p><strong>小结</strong>：</p><p>可以使用axios获取对应服务器数据；如果不是同一个服务的数据则可能会出现跨域请求；需要在响应的服务器上配置跨域。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vuejs测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;node_modules/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(user, index) in users&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123;index&#125;&#125;--&#123;&#123;user.name&#125;&#125;--&#123;&#123;user.age&#125;&#125;--&#123;&#123;user.gender&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">users</span>:[]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">created</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//初始化加载数据</span></span></span><br><span class="line"><span class="language-javascript">            axios.<span class="title function_">post</span>(<span class="string">&quot;data.json&quot;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//将数据赋值到vue实例中的数据属性users；</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//不能使用this，在axios回调函数中表示窗口，不是vue实例</span></span></span><br><span class="line"><span class="language-javascript">                app.<span class="property">users</span> = res.<span class="property">data</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span>=&gt;</span><span class="title function_">alert</span>(err));</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            axios.<span class="title function_">get</span>(<span class="string">&quot;http://localhost/user/8&quot;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span>=&gt;</span><span class="title function_">alert</span>(err));</span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            axios.get(&quot;data.json&quot;).then(res=&gt;&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                console.log(res);</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                //将数据赋值到vue实例中的数据属性users；</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                //不能使用this，在axios回调函数中表示窗口，不是vue实例</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                app.users = res.data;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#125;).catch(err=&gt;alert(err));</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">*/</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            axios(&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                url:&quot;data.json&quot;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                method:&quot;get&quot;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#125;).then(res=&gt;&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                console.log(res);</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                //将数据赋值到vue实例中的数据属性users；</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                //不能使用this，在axios回调函数中表示窗口，不是vue实例</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                app.users = res.data;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#125;).catch(err=&gt;alert(err));</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">*/</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Vue概述&quot;&gt;&lt;a href=&quot;#1-Vue概述&quot; class=&quot;headerlink&quot; title=&quot;1. Vue概述&quot;&gt;&lt;/a&gt;1. Vue概述&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;目标&lt;/strong&gt;：MVVM模式应用特点，Vue概念&lt;/p&gt;
&lt;p&gt;前端框架</summary>
      
    
    
    
    
    <category term="Java web" scheme="http://example.com/tags/Java-web/"/>
    
  </entry>
  
  <entry>
    <title>Apache Dubbo</title>
    <link href="http://example.com/2022/06/04/Apache-Dubbo/"/>
    <id>http://example.com/2022/06/04/Apache-Dubbo/</id>
    <published>2022-06-04T06:18:23.000Z</published>
    <updated>2022-06-05T05:13:49.739Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分布式RPC框架Apache-Dubbo"><a href="#分布式RPC框架Apache-Dubbo" class="headerlink" title="分布式RPC框架Apache Dubbo"></a>分布式RPC框架Apache Dubbo</h1><h2 id="1-软件架构的演进过程"><a href="#1-软件架构的演进过程" class="headerlink" title="1. 软件架构的演进过程"></a>1. 软件架构的演进过程</h2><p>软件架构的发展经历了由单体架构、垂直架构、SOA架构到微服务架构的演进过程，下面我们分别了解一下这几个架构。</p><h3 id="1-1-单体架构"><a href="#1-1-单体架构" class="headerlink" title="1.1 单体架构"></a>1.1 单体架构</h3><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/截屏2022-06-0417.22.44.png" style="zoom:30%;"><p>架构说明：</p><p>​      全部功能集中在一个项目内（All in one）。</p><p>架构优点：</p><p>​      架构简单，前期开发成本低、开发周期短，适合小型项目。</p><p>架构缺点：</p><p>​       全部功能集成在一个工程中，对于大型项目不易开发、扩展和维护。</p><p>​       技术栈受限，只能使用一种语言开发。</p><p>​       系统性能扩展只能通过扩展集群节点，成本高。</p><h3 id="1-2-垂直架构"><a href="#1-2-垂直架构" class="headerlink" title="1.2 垂直架构"></a>1.2 垂直架构</h3><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/截屏2022-06-0417.27.18.png" style="zoom:30%;"><p>架构说明：       </p><p>​      按照业务进行切割，形成小的单体项目。</p><p>架构优点：</p><p>​      技术栈可扩展（不同的系统可以用不同的编程语言编写）。</p><p>架构缺点：</p><p>​       功能集中在一个项目中，不利于开发、扩展、维护。</p><p>​       系统扩张只能通过集群的方式。</p><p>​       项目之间功能冗余、数据冗余、耦合性强。</p><h3 id="1-3-SOA架构"><a href="#1-3-SOA架构" class="headerlink" title="1.3 SOA架构"></a>1.3 SOA架构</h3><p>SOA全称为Service-Oriented Architecture，即面向服务的架构。它可以根据需求通过网络对松散耦合的粗粒度应用组件(服务)进行分布式部署、组合和使用。一个服务通常以独立的形式存在于操作系统进程中。</p><p>站在功能的角度，把业务逻辑抽象成可复用的服务，通过服务的编排实现业务的快速再生，目的：把原先固有的业务功能转变为通用的业务服务，实现业务逻辑的快速复用。</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/112121239.png"></p><p>架构说明：</p><p>​      将重复功能或模块抽取成组件的形式，对外提供服务，在项目与服务之间使用ESB（企业服务总线）的形式作为通信的桥梁。</p><p>架构优点：</p><p>​       重复功能或模块抽取为服务，提高开发效率。</p><p>​       可重用性高。</p><p>​       可维护性高。</p><p>架构缺点：</p><p>​       各系统之间业务不同，很难确认功能或模块是重复的。</p><p>​       抽取服务的粒度大。</p><p>​       系统和服务之间耦合度高。</p><h3 id="1-4-微服务架构"><a href="#1-4-微服务架构" class="headerlink" title="1.4 微服务架构"></a>1.4 微服务架构</h3><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/12123.png"></p><p>架构说明：</p><p>​       将系统服务层完全独立出来，抽取为一个一个的微服务。</p><p>​       抽取的粒度更细，遵循单一原则。</p><p>​       采用轻量级框架协议传输。</p><p>架构优点：</p><p>​       服务拆分粒度更细，有利于提高开发效率。 </p><p>​       可以针对不同服务制定对应的优化方案。</p><p>​       适用于互联网时代，产品迭代周期更短。</p><p>架构缺点：</p><p>​      粒度太细导致服务太多，维护成本高。</p><p>​      分布式系统开发的技术成本高，对团队的挑战大。</p><h2 id="2-Apache-Dubbo概述"><a href="#2-Apache-Dubbo概述" class="headerlink" title="2.Apache Dubbo概述"></a>2.Apache Dubbo概述</h2><h3 id="2-1-Dubbo简介"><a href="#2-1-Dubbo简介" class="headerlink" title="2.1 Dubbo简介"></a>2.1 Dubbo简介</h3><p>Apache Dubbo是一款高性能的Java RPC框架。其前身是阿里巴巴公司开源的一个高性能、轻量级的开源Java RPC框架，可以和Spring框架无缝集成。</p><p><strong>什么是RPC？</strong></p><p>RPC全称为remote procedure call，即<strong>远程过程调用</strong>。比如两台服务器A和B，A服务器上部署一个应用，B服务器上部署一个应用，A服务器上的应用想调用B服务器上的应用提供的方法，由于两个应用不在一个内存空间，不能直接调用，所以需要通过网络来表达调用的语义和传达调用的数据。</p><p>需要注意的是RPC并不是一个具体的技术，而是指整个网络远程调用过程。</p><p>RPC是一个泛化的概念，严格来说一切远程过程调用手段都属于RPC范畴。各种开发语言都有自己的RPC框架。Java中的RPC框架比较多，广泛使用的有RMI、Hessian、Dubbo等。</p><p>Dubbo官网地址：<a href="http://dubbo.apache.org/">http://dubbo.apache.org</a></p><p>Dubbo提供了三大核心能力：面向接口的远程方法调用，智能容错和负载均衡，以及服务自动注册和发现。</p><h3 id="2-2-Dubbo架构"><a href="#2-2-Dubbo架构" class="headerlink" title="2.2 Dubbo架构"></a>2.2 Dubbo架构</h3><p>Dubbo架构图（Dubbo官方提供）如下：</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/2(1)12312.png"></p><p>节点角色说明：</p><table><thead><tr><th>节点</th><th>角色名称</th></tr></thead><tbody><tr><td>Provider</td><td>暴露服务的服务提供方</td></tr><tr><td>Consumer</td><td>调用远程服务的服务消费方</td></tr><tr><td>Registry</td><td>服务注册与发现的注册中心</td></tr><tr><td>Monitor</td><td>统计服务的调用次数和调用时间的监控中心</td></tr><tr><td>Container</td><td>服务运行容器</td></tr></tbody></table><p><strong>虚线</strong>都是异步访问，<strong>实线</strong>都是同步访问<br><strong>蓝色虚线</strong>:在启动时完成的功能<br>**红色虚线(实线)**都是程序运行过程中执行的功能</p><p>调用关系说明:</p><ol start="0"><li>服务容器负责启动，加载，运行服务提供者。</li><li>服务提供者在启动时，向注册中心注册自己提供的服务。</li><li>服务消费者在启动时，向注册中心订阅自己所需的服务。</li><li>注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。</li><li>服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</li><li>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。</li></ol><h2 id="3-服务注册中心Zookeeper"><a href="#3-服务注册中心Zookeeper" class="headerlink" title="3. 服务注册中心Zookeeper"></a>3. 服务注册中心Zookeeper</h2><p>通过前面的Dubbo架构图可以看到，Registry（服务注册中心）在其中起着至关重要的作用。Dubbo官方推荐使用Zookeeper作为服务注册中心。</p><h3 id="3-1-Zookeeper介绍"><a href="#3-1-Zookeeper介绍" class="headerlink" title="3.1 Zookeeper介绍"></a>3.1 Zookeeper介绍</h3><p>Zookeeper 是 Apache Hadoop 的子项目，是一个树型的目录服务，支持变更推送，适合作为 Dubbo 服务的注册中心，工业强度较高，可用于生产环境，并推荐使用 。</p><p>为了便于理解Zookeeper的树型目录服务，我们先来看一下我们电脑的文件系统(也是一个树型目录结构)：</p><p>我的电脑可以分为多个盘符（例如C、D、E等），每个盘符下可以创建多个目录，每个目录下面可以创建文件，也可以创建子目录，最终构成了一个树型结构。通过这种树型结构的目录，我们可以将文件分门别类的进行存放，方便我们后期查找。而且磁盘上的每个文件都有一个唯一的访问路径，例如：C:\Windows\itcast\hello.txt。</p><p>Zookeeper树型目录服务：</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/1234343.png"></p><p>流程说明：</p><ul><li>服务提供者(Provider)启动时: 向 <code>/dubbo/com.foo.BarService/providers</code> 目录下写入自己的 URL 地址</li><li>服务消费者(Consumer)启动时: 订阅 <code>/dubbo/com.foo.BarService/providers</code> 目录下的提供者 URL 地址。并向 <code>/dubbo/com.foo.BarService/consumers</code> 目录下写入自己的 URL 地址</li><li>监控中心(Monitor)启动时: 订阅 <code>/dubbo/com.foo.BarService</code> 目录下的所有提供者和消费者 URL 地址</li></ul><h3 id="3-2-安装Zookeeper"><a href="#3-2-安装Zookeeper" class="headerlink" title="3.2 安装Zookeeper"></a>3.2 安装Zookeeper</h3><p>下载地址：<a href="http://archive.apache.org/dist/zookeeper/">http://archive.apache.org/dist/zookeeper/</a></p><p>本课程使用的Zookeeper版本为3.4.6，下载完成后可以获得名称为zookeeper-3.4.6.tar.gz的压缩文件。</p><p>安装步骤：</p><p>第一步：安装 jdk（略）<br>第二步：把 zookeeper 的压缩包（zookeeper-3.4.6.tar.gz）上传到 linux 系统<br>第三步：解压缩压缩包<br>​    tar -zxvf zookeeper-3.4.6.tar.gz<br>第四步：进入zookeeper-3.4.6目录，创建data目录<br>​    mkdir data<br>第五步：进入conf目录 ，把zoo_sample.cfg 改名为zoo.cfg<br>​    cd conf<br>​    mv zoo_sample.cfg zoo.cfg<br>第六步：打开zoo.cfg文件,  修改data属性：dataDir&#x3D;&#x2F;root&#x2F;zookeeper-3.4.6&#x2F;data</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;分布式RPC框架Apache-Dubbo&quot;&gt;&lt;a href=&quot;#分布式RPC框架Apache-Dubbo&quot; class=&quot;headerlink&quot; title=&quot;分布式RPC框架Apache Dubbo&quot;&gt;&lt;/a&gt;分布式RPC框架Apache Dubbo&lt;/h1&gt;&lt;</summary>
      
    
    
    
    
    <category term="Spring Cloud(微服务开发)" scheme="http://example.com/tags/Spring-Cloud-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Maven高级</title>
    <link href="http://example.com/2022/06/01/Maven%E9%AB%98%E7%BA%A7/"/>
    <id>http://example.com/2022/06/01/Maven%E9%AB%98%E7%BA%A7/</id>
    <published>2022-06-01T05:34:26.000Z</published>
    <updated>2022-06-04T02:28:40.159Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Maven高级"><a href="#Maven高级" class="headerlink" title="Maven高级"></a>Maven高级</h1><h2 id="1-maven基础知识回顾"><a href="#1-maven基础知识回顾" class="headerlink" title="1.maven基础知识回顾"></a>1.maven基础知识回顾</h2><h3 id="1-1-maven介绍"><a href="#1-1-maven介绍" class="headerlink" title="1.1 maven介绍"></a>1.1 maven介绍</h3><p><strong>maven</strong> 是一个项目管理工具，主要作用是在项目开发阶段对Java项目进行<strong>依赖管理</strong>和<strong>项目构建</strong>。</p><p><strong>依赖管理</strong>：就是对jar包的管理。通过导入maven坐标，就相当于将仓库中的jar包导入了当前项目中。</p><p><strong>项目构建</strong>：通过maven的一个命令就可以完成项目从清理、编译、测试、报告、打包，部署整个过程。</p><h3 id="1-2-maven的仓库类型"><a href="#1-2-maven的仓库类型" class="headerlink" title="1.2 maven的仓库类型"></a>1.2 maven的仓库类型</h3><p>1.本地仓库 </p><p>2.远程仓库</p><p>①maven中央仓库（地址：<a href="http://repo2.maven.org/maven2/%EF%BC%89">http://repo2.maven.org/maven2/）</a></p><p>②maven私服（公司局域网内的仓库，需要自己搭建）</p><p>③其他公共远程仓库（例如apache提供的远程仓库，地址：<a href="http://repo.maven.apache.org/maven2/%EF%BC%89">http://repo.maven.apache.org/maven2/）</a></p><h3 id="1-3-maven常用命令"><a href="#1-3-maven常用命令" class="headerlink" title="1.3 maven常用命令"></a>1.3 maven常用命令</h3><p>clean：     清理</p><p>compile：编译</p><p>test：        测试</p><p>package：打包</p><p>install：    安装</p><h3 id="1-4-maven坐标书写规范"><a href="#1-4-maven坐标书写规范" class="headerlink" title="1.4 maven坐标书写规范"></a>1.4 maven坐标书写规范</h3><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-0114.58.38.png"></p><h3 id="1-5-maven的依赖范围"><a href="#1-5-maven的依赖范围" class="headerlink" title="1.5 maven的依赖范围"></a>1.5 maven的依赖范围</h3><h3 id><a href="#" class="headerlink" title></a></h3><table><thead><tr><th>依赖范围</th><th>对于编译classpath有效</th><th>对于测试classpath有效</th><th>对于运行时classpath有效</th><th>例子</th></tr></thead><tbody><tr><td>compile</td><td>Y</td><td>Y</td><td>Y</td><td>spring-core</td></tr><tr><td>test</td><td>-</td><td>Y</td><td>-</td><td>Junit</td></tr><tr><td>provided</td><td>Y</td><td>Y</td><td>-</td><td>servlet-api</td></tr><tr><td>runtime</td><td>-</td><td>Y</td><td>Y</td><td>JDBC驱动</td></tr><tr><td>system</td><td>Y</td><td>Y</td><td>-</td><td>本地的，maven仓库之外的类库</td></tr></tbody></table><h2 id="2-maven的依赖传递"><a href="#2-maven的依赖传递" class="headerlink" title="2. maven的依赖传递"></a>2. maven的依赖传递</h2><h3 id="2-1-什么是依赖传递"><a href="#2-1-什么是依赖传递" class="headerlink" title="2.1 什么是依赖传递"></a>2.1 什么是依赖传递</h3><p>jar包的传递</p><p>在maven中，依赖是可以传递的，假设存在三个项目，分别是项目A，项目B以及项目C。假设C依赖B，B依赖A，那么我们可以根据maven项目依赖的特征不难推出项目C也依赖A。</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-0116.04.47.png"></p><p>通过上面的图可以看到，我们的web项目直接依赖了spring-webmvc，而spring-webmvc依赖了sping-aop、spring-beans等。最终的结果就是在我们的web项目中间接依赖了spring-aop、spring-beans等。</p><h3 id="2-2-什么是依赖冲突"><a href="#2-2-什么是依赖冲突" class="headerlink" title="2.2 什么是依赖冲突"></a>2.2 什么是依赖冲突</h3><p>由于依赖传递现象的存在， spring-webmvc 依赖 spirng-beans-4.2.4，spring-aop 依赖 spring-beans-5.0.2，但是发现 spirng-beans-4.2.4 加入到了工程中，而我们希望 spring-beans-5.0.2 加入工程。这就造成了<strong>依赖冲突</strong>。</p><h3 id="2-3-如何解决依赖冲突"><a href="#2-3-如何解决依赖冲突" class="headerlink" title="2.3 如何解决依赖冲突"></a>2.3 如何解决依赖冲突</h3><p>1.使用maven提供的依赖调解原则 </p><p>第一声明者优先原则</p><p> 路径近者优先原则</p><p>2.排除依赖</p><p>3.锁定版本 </p><h3 id="2-4-依赖调节原则——第一声明者优先原则"><a href="#2-4-依赖调节原则——第一声明者优先原则" class="headerlink" title="2.4 依赖调节原则——第一声明者优先原则"></a>2.4 依赖调节原则——第一声明者优先原则</h3><p>在 pom 文件中定义依赖，以先声明的依赖为准。其实就是根据坐标导入的顺序来确定最终使用哪个传递过来的依赖。</p><p>结论：通过上图可以看到，spring-aop和spring-webmvc都传递过来了spring-beans，但是因为spring-aop在前面，所以最终使用的spring-beans是由spring-aop传递过来的，而spring-webmvc传递过来的spring-beans则被忽略了。</p><h3 id="2-4依赖调节原则——路径近者优先原则"><a href="#2-4依赖调节原则——路径近者优先原则" class="headerlink" title="2.4依赖调节原则——路径近者优先原则"></a>2.4依赖调节原则——路径近者优先原则</h3><p>在 pom 文件定义依赖，以路径近者为准。还是上述情况，spring-aop 和 spring-webmvc 都会传递过来 spirng-beans，那如果直接把 spring-beans 的依赖直接写到 pom 文件中，那么项目就不会再使用其他依赖传递来的 spring-beans，因为自己直接在 pom 中定义spring-beans要比其他依赖传递过来的路径要近。</p><h3 id="2-5-排除依赖"><a href="#2-5-排除依赖" class="headerlink" title="2.5 排除依赖"></a>2.5 排除依赖</h3><p>可以使用exclusions标签将传递过来的依赖排除出去。</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-0117.26.46.png"></p><h3 id="2-6-版本锁定-重点掌握"><a href="#2-6-版本锁定-重点掌握" class="headerlink" title="2.6 版本锁定(重点掌握)"></a>2.6 版本锁定(重点掌握)</h3><p>采用直接锁定版本的方法确定依赖jar包的版本，版本锁定后则不考虑依赖的声明顺序或依赖的路径，以锁定的版本为准添加到工程中，此方法在企业开发中经常使用。</p><p>版本锁定的使用方式：</p><p>第一步：在dependencyManagement标签中锁定依赖的版本</p><p>第二步：在dependencies标签中声明需要导入的maven坐标</p><p>①在dependencyManagement标签中锁定依赖的版本</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-0117.33.03.png"></p><p>②在dependencies标签中声明需要导入的maven坐标</p><p>![](<a href="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-01">https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/截屏2022-06-01</a> 17.34.12.png)</p><h2 id="3-基于maven构建SSM工程案例"><a href="#3-基于maven构建SSM工程案例" class="headerlink" title="3.基于maven构建SSM工程案例"></a>3.基于maven构建SSM工程案例</h2><h3 id="3-1-需求描述"><a href="#3-1-需求描述" class="headerlink" title="3.1 需求描述"></a>3.1 需求描述</h3><p>本案例基于maven构建 SSM（Spring+SpringMVC+Mybatis）工程，通过maven坐标进行依赖管理。最终实现根据 id 查询商品信息的功能。</p><h3 id="3-2-构建maven工程"><a href="#3-2-构建maven工程" class="headerlink" title="3.2 构建maven工程"></a>3.2 构建maven工程</h3><h4 id="1-数据库环境搭建"><a href="#1-数据库环境搭建" class="headerlink" title="1.数据库环境搭建"></a>1.数据库环境搭建</h4><p> ①创建数据库ssmtest</p><p>②创建商品表item</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `item` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> auto_increment,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">default</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `price` <span class="type">float</span> <span class="keyword">default</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `createtime` datetime <span class="keyword">default</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `detail` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">default</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY  (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `item` <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;电视机&#x27;</span>,<span class="string">&#x27;4500&#x27;</span>,<span class="string">&#x27;2021-6-1&#x27;</span>,<span class="string">&#x27;电视机&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="2-maven项目构建"><a href="#2-maven项目构建" class="headerlink" title="2.maven项目构建"></a>2.maven项目构建</h4><p><strong>①创建maven web项目</strong></p><p><strong>②配置pom.xml文件</strong></p><p><strong>③实现spring+mybatis整合</strong></p><p>创建POJO类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Item</span> &#123;</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> Float price;</span><br><span class="line"><span class="keyword">private</span> Date createtime;</span><br><span class="line"><span class="keyword">private</span> String detail;</span><br><span class="line"><span class="comment">//省略setter、getter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>持久层DAO接口编写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ItemMapper</span> &#123;</span><br><span class="line">       <span class="keyword">public</span> Item <span class="title function_">findById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Mapper映射文件编写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.ssm.dao.ItemMapper&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">         select * from item where id=#&#123;id&#125;<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>业务层Service编写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line"><span class="keyword">package</span> com.itheima.ssm.service;</span><br><span class="line"><span class="keyword">import</span> com.itheima.ssm.pojo.Item;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ItemService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Items <span class="title function_">findById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实现类</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ItemServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">ItemService</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> ItemMapper itemMapper;</span><br><span class="line"><span class="keyword">public</span> Item <span class="title function_">findById</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> itemMapper.findById(id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>spring配置文件applicationContext-dao.xml编写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span>      <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span>   <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span>       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span>       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span>       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/bean       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd       http://www.springframework.org/schema/context      http://www.springframework.org/schema/context/spring-context-4.0.xsd      http://www.springframework.org/schema/aop   http://www.springframework.org/schema/aop/spring-aop-4.0.xsd     http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 驱动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- url --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/ssmtest&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 用户名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 密码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mapper配置 --&gt;</span> <span class="comment">&lt;!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 --&gt;</span>    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span>        <span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--为指定包下的所有实体类创建别名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;typeAliasesPackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.itheima.ssm.pojo&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mapper扫描器 ：用来产生代理对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.itheima.ssm.dao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>spring配置文件applicationContext-service.xml编写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置扫描器，扫描Service--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.itheima.ssm.service&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--事务管理器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--事物注解驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>④加入springmvc相关配置</strong></p><p>表现层Controller编写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/item&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ItemController</span> &#123;</span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> ItemService itemService;</span><br><span class="line">  <span class="meta">@RequestMapping(&quot;/showItem/&#123;id&#125;&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">showItem</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="type">int</span> id, Model model)</span>&#123;</span><br><span class="line">        <span class="type">Item</span> <span class="variable">item</span> <span class="operator">=</span> itemService.findById(id);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;item&quot;</span>,item);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;item&quot;</span>;   </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>springmvc.xml文件编写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span>       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span>       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>      <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd       http://www.springframework.org/schema/context      http://www.springframework.org/schema/context/spring-context-4.0.xsd&quot;</span>&gt;</span>    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.itheima.ssm.controller&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  配置视图解析器的前缀和后缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span>           <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix“ value=&quot;</span>/<span class="attr">WEB-INF</span>/<span class="attr">jsp</span>/&quot;&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>jsp页面编写</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> isELIgnored=<span class="string">&quot;false&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    $&#123;item&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>配置web.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--监听器 加载spring容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--前端控制器 加载springmvc容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-分模块构建maven工程"><a href="#4-分模块构建maven工程" class="headerlink" title="4.分模块构建maven工程"></a>4.分模块构建maven工程</h2><h3 id="4-1-分模块构建maven工程分析"><a href="#4-1-分模块构建maven工程分析" class="headerlink" title="4.1 分模块构建maven工程分析"></a>4.1 分模块构建maven工程分析</h3><p>在现实生活中，汽车厂家进行汽车生产时，由于整个生产过程非常复杂和繁琐，工作量非常大，所以车场都会将整个汽车的部件分开生产，最终再将生产好的部件进行组装，形成一台完整的汽车。</p><p>常见的拆分方式有两种：</p><p>第一种：按照业务模块进行拆分，每个模块拆分成一个maven工程，例如将一个项目分为用户模块，订单模块，购物车模块等，每个模块对应就是一个maven工程</p><p>第二种：按照层进行拆分，例如持久层，业务层，表现层等，每个层对应就是一个maven工程</p><p>不管是上面哪种拆分方式，通常都会提供一个父工程，将一些公共的代码和配置取到父工程中进行统一管理和配置</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-06-0223.30.32.png"></p><h3 id="4-2-maven工程的继承"><a href="#4-2-maven工程的继承" class="headerlink" title="4.2 maven工程的继承"></a>4.2 maven工程的继承</h3><p>在Java语言中，类之间是可以继承的，通过继承，子类就可以引用父类中非private的属性和方法。同样，在maven工程之间也可以继承，子工程继承父工程后，就可以使用在父工程中引入的依赖。继承的目的是为了消除重复代码。 </p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE%E7%89%8714562.png"></p><h3 id="4-3-maven工程的聚合"><a href="#4-3-maven工程的聚合" class="headerlink" title="4.3 maven工程的聚合"></a>4.3 maven工程的聚合</h3><p>在maven工程的pom.xml文件中可以使用<strong>&lt;modules&gt;<strong>标签将其他maven工程聚合到一起，聚合的目的是为了进行</strong>统一操作</strong>。</p><p>例如拆分后的maven工程有多个，如果要进行打包，就需要针对每个工程分别执行打包命令，操作起来非常繁琐。这时就可以使用&lt;modules&gt;标签将这些工程统一聚合到maven工程中，需要打包的时候，只需要在此工程中执行一次打包命令，其下被聚合的工程就都会被打包了。</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE%E7%89%87151213.png"></p><h3 id="4-4-分模块构建maven工程具体实现"><a href="#4-4-分模块构建maven工程具体实现" class="headerlink" title="4.4 分模块构建maven工程具体实现"></a>4.4 分模块构建maven工程具体实现</h3><p>①父工程maven_parent构建</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">springmvc.version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">springmvc.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis.version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">mybatis.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--锁定jar版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Mybatis --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- springMVC --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;springmvc.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>②子工程maven_pojo构建</p><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>③3.1子工程maven_dao构建</p><p>​    3.2 配置maven_dao工程的pom.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itheima<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven_pojo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- Mybatis和mybatis与spring的整合 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- MySql驱动 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.32<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- druid数据库连接池 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- spring相关 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    3.3 创建DAO接口和Mapper映射文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.ssm.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.ssm.pojo.Item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ItemMapper</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Item <span class="title function_">findById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.ssm.dao.ItemMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Item&quot;</span>&gt;</span></span><br><span class="line">        select * from item where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    3.4 在resources目录下创建spring配置文件applicationContext-dao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置数据源信息，使用druid连接池--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/ssmtest&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置spring整合mybatis框架的SQLSessionFactoryBean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--扫描pojo包，为实体类创建别名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;typeAliasesPackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.itheima.ssm.pojo&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mapper扫描器，用于产生代理对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.itheima.ssm.dao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">&lt;/bean</span><br></pre></td></tr></table></figure><p>④子工程maven_service构建</p><p>​    第一步：创建maven_service工程</p><p>​    第二步：配置maven_service工程的pom.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itheima<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven_dao<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​     第三步：创建Service接口和实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.ssm.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.ssm.pojo.Item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ItemService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Item <span class="title function_">findById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.ssm.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.ssm.dao.ItemMapper;</span><br><span class="line"><span class="keyword">import</span> com.itheima.ssm.pojo.Item;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ItemServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">ItemService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ItemMapper itemMapper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Item <span class="title function_">findById</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> itemMapper.findById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 第四步：创建spring配置文件applicationContext-service.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置扫描器，扫描Service--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.itheima.ssm.service&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--事务管理器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--事物注解驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>⑤子工程maven_web构建</p><p>​    第一步：创建maven_web工程，注意打包方式为war</p><p>​    第二步：配置maven_web工程的pom.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span>     <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span>       <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itheima<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven_service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>maven_web<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​         第三步：创建Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.ssm.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.ssm.pojo.Item;</span><br><span class="line"><span class="keyword">import</span> com.itheima.ssm.service.ItemService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/item&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ItemController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ItemService itemService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/showItem/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">findById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="type">int</span> id, Model model)</span>&#123;</span><br><span class="line">        <span class="type">Item</span> <span class="variable">item</span> <span class="operator">=</span> itemService.findById(id);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;item&quot;</span>,item);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;item&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    第四步：创建jsp页面</p><p>​    第五步：配置web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--指定Spring配置文件位置--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:applicationContext*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--配置Spring框架启动时使用的监听器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--配置SpringMVC的前端控制器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    第六步：创建springmvc配置文件springmvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="string"><span class="tag">   http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置扫描器，扫描Controller--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.itheima.ssm.controller&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>项目整体结构如下：</p><p>1）maven_parent为父工程，其余工程为子工程，都继承父工程maven_parent</p><p>2）maven_parent工程将其子工程都进行了聚合 </p><p>3）子工程之间存在依赖关系，比如maven_dao依赖， maven_pojo、maven_service依赖maven_dao、 maven_web依赖maven_service</p><h2 id="5-maven私服"><a href="#5-maven私服" class="headerlink" title="5. maven私服"></a>5. maven私服</h2><h3 id="5-1-私服说明"><a href="#5-1-私服说明" class="headerlink" title="5.1 私服说明"></a>5.1 私服说明</h3><p>maven仓库分为本地仓库和远程仓库，而远程仓库又分为maven中央仓库、其他远程仓库和私服（私有服务器）。其中，中央仓库是由maven官方提供的，而私服就需要我们自己搭建了。</p><p>maven私服就是公司局域网内的maven远程仓库，每个员工的电脑上安装maven软件并且连接maven私服，程序员可以将自己开发的项目打成jar并发布到私服，其它项目组成员就可以从私服下载所依赖的jar。私服还充当一个代理服务器的角色，当私服上没有jar包时会从maven中央仓库自动下载。</p><p><strong>nexus</strong> 是一个maven仓库管理器（其实就是一个软件），nexus可以充当maven私服，同时nexus还提供强大的仓库管理、构件搜索等功能。</p><h3 id="5-2-搭建maven私服"><a href="#5-2-搭建maven私服" class="headerlink" title="5.2 搭建maven私服"></a>5.2 搭建maven私服</h3><p>①下载nexus</p><p><a href="https://help.sonatype.com/repomanager2/download/download-archives---repository-manager-oss">https://help.sonatype.com/repomanager2/download/download-archives---repository-manager-oss</a></p><p>②安装nexus</p><p>将下载的压缩包进行解压，进入bin目录</p><p>打开cmd窗口并进入上面bin目录下，执行nexus.bat install命令安装服务（注意需要以管理员身份运行cmd命令）</p><p>③启动nexus</p><p>经过前面命令已经完成nexus的安装，可以通过如下两种方式启动nexus服务：</p><p>在Windows系统服务中启动nexus</p><p>在命令行执行nexus.bat start命令启动nexus</p><p>④访问nexus</p><p>启动nexus服务后，访问<a href="http://localhost:8081/nexus">http://localhost:8081/nexus</a></p><p>点击右上角LogIn按钮，进行登录。使用默认用户名admin和密码admin123登录系统</p><p>登录成功后点击左侧菜单Repositories可以看到nexus内置的仓库列表（如下图）</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE%E7%89%871213434.png"></p><p>nexus仓库类型</p><p>通过前面的仓库列表可以看到，nexus默认内置了很多仓库，这些仓库可以划分为4种类型，每种类型的仓库用于存放特定的jar包，具体说明如下：</p><p>①hosted，宿主仓库，部署自己的jar到这个类型的仓库，包括<strong>Releases</strong>和<strong>Snapshots</strong>两部分，Releases为公司内部发布版本仓库、 Snapshots为公司内部测试版本仓库 </p><p>②proxy，代理仓库，用于代理远程的公共仓库，如maven中央仓库，用户连接私服，私服自动去中央仓库下载jar包或者插件</p><p>③group，仓库组，用来合并多个hosted&#x2F;proxy仓库，通常我们配置自己的maven连接仓库组</p><p>④virtual(虚拟)：兼容Maven1版本的jar或者插件</p><p>nexus仓库类型与安装目录对应关系</p><h3 id="5-3-将项目发布到maven私服"><a href="#5-3-将项目发布到maven私服" class="headerlink" title="5.3 将项目发布到maven私服"></a>5.3 将项目发布到maven私服</h3><p>maven私服是搭建在公司局域网内的maven仓库，公司内的所有开发团队都可以使用。例如技术研发团队开发了一个基础组件，就可以将这个基础组件打成jar包发布到私服，其他团队成员就可以从私服下载这个jar包到本地仓库并在项目中使用。</p><p>将项目发布到maven私服操作步骤如下：</p><ol><li>配置maven的settings.xml文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置用户名密码--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​      注意：一定要在idea工具中引入的maven的settings.xml文件中配置 </p><p>2.配置项目的pom.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--添加要上传到项目pom中确定上传路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">id</span>&gt;</span>releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://localhost:8081/nexus/content/repositories/releases/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">id</span>&gt;</span>snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span>               <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://localhost:8081/nexus/content/repositories/snapshots/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>    <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.执行mvn deploy命令</p><h3 id="5-4-从私服下载jar到本地仓库"><a href="#5-4-从私服下载jar到本地仓库" class="headerlink" title="5.4 从私服下载jar到本地仓库"></a>5.4 从私服下载jar到本地仓库</h3><p>前面我们已经完成了将本地项目打成jar包发布到maven私服，下面我们就需要从maven私服下载jar包到本地仓库。</p><p>具体操作步骤如下：</p><p>在maven的settings.xml文件中配置下载模板</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--profile的id--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--仓库地址，即nexus仓库组的地址--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span></span><br><span class="line">http://localhost:8081/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--是否下载releases构件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--是否下载snapshots构件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 插件仓库，maven的运行依赖插件，也需要从私服下载插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Public Repositories<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span></span><br><span class="line">http://localhost:8081/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在maven的settings.xml文件中配置激活下载模板</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activeProfiles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activeProfile</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">activeProfile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activeProfiles</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-将第三方jar安装到本地仓库和maven私服"><a href="#6-将第三方jar安装到本地仓库和maven私服" class="headerlink" title="6.将第三方jar安装到本地仓库和maven私服"></a>6.将第三方jar安装到本地仓库和maven私服</h2><p>在maven工程的pom.xml文件中配置某个jar包的坐标后，如果本地的maven仓库不存在这个jar包，maven工具会自动到配置的maven私服下载，如果私服中也不存在，maven私服就会从maven中央仓库进行下载。</p><p>但是并不是所有的jar包都可以从中央仓库下载到，比如常用的Oracle数据库驱动的jar包在中央仓库就不存在。此时需要到Oracle的官网下载驱动jar包，然后将此jar包通过maven命令安装到我们本地的maven仓库或者maven私服中，这样在maven项目中就可以使用maven坐标引用到此jar包了。</p><h3 id="6-1-将第三方jar安装到本地仓库"><a href="#6-1-将第三方jar安装到本地仓库" class="headerlink" title="6.1 将第三方jar安装到本地仓库"></a>6.1 将第三方jar安装到本地仓库</h3><p>①下载Oracle的jar包（略）</p><p>②mvn install命令进行安装</p><p>​      mvn install:install-file -Dfile&#x3D;ojdbc14-10.2.0.4.0.jar -DgroupId&#x3D;com.oracle -DartifactId&#x3D;ojdbc14 – </p><p>​      Dversion&#x3D;10.2.0.4.0 -Dpackaging&#x3D;jar</p><p>③查看本地maven仓库，确认安装是否成功</p><h3 id="6-2-将第三方jar安装到maven私服"><a href="#6-2-将第三方jar安装到maven私服" class="headerlink" title="6.2 将第三方jar安装到maven私服"></a>6.2 将第三方jar安装到maven私服</h3><p>①下载Oracle的jar包（略）</p><p>②在maven的settings.xml配置文件中配置第三方仓库的server信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>thirdparty<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure><p>③执行mvn deploy命令进行安装</p><p>​      mvn deploy:deploy-file -Dfile&#x3D;ojdbc14-10.2.0.4.0.jar -DgroupId&#x3D;com.oracle -DartifactId&#x3D;ojdbc14 –</p><p>​      Dversion&#x3D;10.2.0.4.0 -Dpackaging&#x3D;jar –</p><p>​      Durl&#x3D;<a href="http://localhost:8081/nexus/content/repositories/thirdparty/">http://localhost:8081/nexus/content/repositories/thirdparty/</a> -DrepositoryId&#x3D;thirdparty</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Maven高级&quot;&gt;&lt;a href=&quot;#Maven高级&quot; class=&quot;headerlink&quot; title=&quot;Maven高级&quot;&gt;&lt;/a&gt;Maven高级&lt;/h1&gt;&lt;h2 id=&quot;1-maven基础知识回顾&quot;&gt;&lt;a href=&quot;#1-maven基础知识回顾&quot; class</summary>
      
    
    
    
    
    <category term="Maven" scheme="http://example.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Git分布式版本控制工具</title>
    <link href="http://example.com/2022/05/22/Git%E5%88%86%E5%B8%83%E5%BC%8F%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7/"/>
    <id>http://example.com/2022/05/22/Git%E5%88%86%E5%B8%83%E5%BC%8F%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7/</id>
    <published>2022-05-22T06:11:05.000Z</published>
    <updated>2022-05-31T15:40:00.284Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git分布式版本控制工具"><a href="#Git分布式版本控制工具" class="headerlink" title="Git分布式版本控制工具"></a>Git分布式版本控制工具</h1><h2 id="1-Git概述"><a href="#1-Git概述" class="headerlink" title="1. Git概述"></a>1. Git概述</h2><h3 id="1-1-Git历史"><a href="#1-1-Git历史" class="headerlink" title="1.1 Git历史"></a>1.1 Git历史</h3><p>Git 诞生于一个极富纷争大举创新的年代。Linux 内核开源项目有着为数众多的参与者。 绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上（1991－2002年间）。 到 2002 年，整个项目组开始启用一个专有的分布式版本控制系统 BitKeeper 来管理和维护代码。</p><p>到了 2005 年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了 Linux 内核社区免费使用 BitKeeper 的权力。 这就迫使 Linux 开源社区（特别是 Linux 的缔造者 Linus Torvalds）基于使用 BitKeeper 时的经验教训，开发出自己的版本系统。 </p><p>他们对新的系统制订了若干目标：</p><p>速度</p><p> 简单的设计</p><p> 对非线性开发模式的强力支持（允许成千上万个并行开发的分支）</p><p> 完全分布式</p><p> 有能力高效管理类似 Linux 内核一样的超大规模项目（速度和数据量）</p><h3 id="1-2-Git与SVN对比"><a href="#1-2-Git与SVN对比" class="headerlink" title="1.2 Git与SVN对比"></a>1.2 Git与SVN对比</h3><p>SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而开发人员工作的时候，用的都是自己的电脑，所以首先要从中央服务器下载最新的版本，然后开发，开发完后，需要把自己开发的代码提交到中央服务器。</p><p>集中式版本控制工具缺点：</p><p>  服务器单点故障</p><p>  容错性差</p><p>Git是<strong>分布式</strong>版本控制系统（Distributed Version Control System，简称 DVCS） ，分为两种类型的仓库：</p><p>本地仓库和远程仓库</p><p>本地仓库：是在开发人员自己电脑上的Git仓库        </p><p>远程仓库：是在远程服务器上的Git仓库</p><p>Clone：克隆，就是将远程仓库复制到本地</p><p>Push：推送，就是将本地仓库代码上传到远程仓库</p><p>Pull：拉取，就是将远程仓库代码下载到本地仓库</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2216.07.11.png"></p><h3 id="1-3-Git工作流程"><a href="#1-3-Git工作流程" class="headerlink" title="1.3 Git工作流程"></a>1.3 Git工作流程</h3><p>工作流程如下：</p><p>1．从远程仓库中克隆代码到本地仓库</p><p>2．从本地仓库中checkout(剪出)代码然后进行代码修改</p><p>3．在提交前先将代码提交到暂存区</p><p>4．提交到本地仓库。本地仓库中保存修改的各个历史版本</p><p>5．修改完成后，需要和团队成员共享代码时，将代码push到远程仓库</p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/截屏2022-05-2216.09.32.png" style="zoom:50%;"><h3 id="1-4-Git下载与安装"><a href="#1-4-Git下载与安装" class="headerlink" title="1.4 Git下载与安装"></a>1.4 Git下载与安装</h3><p>下载地址： <a href="https://git-scm.com/download">https://git-scm.com/download</a></p><p>mac安装参考：<a href="https://blog.csdn.net/weixin_43880061/article/details/123783116">https://blog.csdn.net/weixin_43880061/article/details/123783116</a></p><h2 id="2-Git代码托管服务"><a href="#2-Git代码托管服务" class="headerlink" title="2. Git代码托管服务"></a>2. Git代码托管服务</h2><h3 id="2-1-常用的Git代码托管服务"><a href="#2-1-常用的Git代码托管服务" class="headerlink" title="2.1 常用的Git代码托管服务"></a>2.1 常用的Git代码托管服务</h3><p>前面我们已经知道了Git中存在两种类型的仓库，即本地仓库和远程仓库。那么我们如何搭建Git远程仓库呢？我们可以借助互联网上提供的一些代码托管服务来实现，其中比较常用的有GitHub、码云、GitLab等。</p><p>gitHub（ 地址：<a href="https://github.com/">https://github.com/</a> ）是一个面向开源及私有软件项目的托管平台，因为只支持Git 作为唯一的版本库格式进行托管，故名gitHub</p><p>码云（地址： <a href="https://gitee.com/">https://gitee.com/</a> ）是国内的一个代码托管平台，由于服务器在国内，所以相比于GitHub，码云速度会更快</p><p>GitLab （地址： <a href="https://about.gitlab.com/">https://about.gitlab.com/</a> ）是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的web服务</p><h3 id="2-2-在码云注册账号"><a href="#2-2-在码云注册账号" class="headerlink" title="2.2 在码云注册账号"></a>2.2 在码云注册账号</h3><p>要想使用码云的相关服务，需要注册账号（地址： <a href="https://gitee.com/signup">https://gitee.com/signup</a> ）</p><h3 id="2-3-登录码云并创建Git远程仓库"><a href="#2-3-登录码云并创建Git远程仓库" class="headerlink" title="2.3 登录码云并创建Git远程仓库"></a>2.3 登录码云并创建Git远程仓库</h3><p>注册完成后就可以使用刚刚注册的邮箱进行登录（地址： <a href="https://gitee.com/login">https://gitee.com/login</a> ）</p><p>登录成功后就可以创建Git远程仓库</p><p>创建完成后可以查看仓库信息</p><p>每个Git远程仓库都会对应一个网络地址，可以点击克隆&#x2F;下载按钮弹出窗口并点击复制按钮获得这个网络地址</p><p>我们当前创建的Git远程仓库对应的地址为：<a href="https://gitee.com/mahongyue-dai/my-repo1">https://gitee.com/mahongyue-dai/my-repo1</a></p><h3 id="2-4-邀请其他用户成为仓库成员"><a href="#2-4-邀请其他用户成为仓库成员" class="headerlink" title="2.4 邀请其他用户成为仓库成员"></a>2.4 邀请其他用户成为仓库成员</h3><p>前面已经在码云上创建了自己的远程仓库，目前仓库成员只有自己一个人（身份为管理员）。在企业实际开发中，一个项目往往是由多个人共同开发完成的，为了使多个参与者都有权限操作远程仓库，就需要邀请其他项目参与者成为当前仓库的成员。</p><p>在仓库管理中可以管理仓库成员</p><h2 id="3-Git常用命令"><a href="#3-Git常用命令" class="headerlink" title="3. Git常用命令"></a>3. Git常用命令</h2><h3 id="3-1-环境配置"><a href="#3-1-环境配置" class="headerlink" title="3.1 环境配置"></a>3.1 环境配置</h3><p>当安装Git后首先要做的事情是设置用户名称和email地址。这是非常重要的，因为每次Git提交都会使用该用户信息</p><p>设置用户信息 </p><p>   git config –global user.name “itcast”</p><p>   git config –global user.email “<a href="mailto:&#x68;&#x65;&#x6c;&#108;&#x6f;&#x40;&#105;&#x74;&#x63;&#x61;&#x73;&#x74;&#x2e;&#x63;&#110;">&#x68;&#x65;&#x6c;&#108;&#x6f;&#x40;&#105;&#x74;&#x63;&#x61;&#x73;&#x74;&#x2e;&#x63;&#110;</a>”</p><p>查看配置信息</p><p>   git config –list</p><p>   git config user.name</p><p>通过上面的命令设置的信息会保存在~&#x2F;.gitconfig文件中</p><h3 id="3-2-获取Git仓库"><a href="#3-2-获取Git仓库" class="headerlink" title="3.2 获取Git仓库"></a>3.2 获取Git仓库</h3><p>要使用Git对我们的代码进行版本控制，首先需要获得Git仓库</p><p>获取Git仓库通常有两种方式：</p><p>  在本地初始化一个Git仓库</p><p>  从远程仓库克隆</p><h4 id="3-2-1在本地初始化一个Git仓库"><a href="#3-2-1在本地初始化一个Git仓库" class="headerlink" title="3.2.1在本地初始化一个Git仓库"></a>3.2.1在本地初始化一个Git仓库</h4><p>执行步骤如下：</p><ol><li><p>在电脑的任意位置创建一个空目录（例如repo1）作为我们的本地Git仓库</p></li><li><p>进入这个目录中，点击右键打开Git bash窗口</p></li><li><p>执行命令git init</p></li></ol><p>如果在当前目录中看到.git文件夹（此文件夹为隐藏文件夹）则说明Git仓库创建成功</p><p><a href="https://blog.csdn.net/Yqy_12/article/details/109686899">mac创建本地git仓库</a></p><p><strong>mac显示隐藏文件快捷键：Command + Shift + .</strong></p><h4 id="3-2-2从远程仓库克隆"><a href="#3-2-2从远程仓库克隆" class="headerlink" title="3.2.2从远程仓库克隆"></a>3.2.2从远程仓库克隆</h4><p>可以通过Git提供的命令从远程仓库进行克隆，将远程仓库克隆到本地</p><p>命令形式为：git clone 远程Git仓库地址 </p><p>远程仓库地址：</p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/截屏2022-05-2223.23.18.png" style="zoom:50%;"><h3 id="3-3工作目录、暂存区以及版本库概念"><a href="#3-3工作目录、暂存区以及版本库概念" class="headerlink" title="3.3工作目录、暂存区以及版本库概念"></a>3.3工作目录、暂存区以及版本库概念</h3><p>为了更好的学习Git，我们需要了解Git相关的一些概念，这些概念在后面的学习中会经常提到</p><p>版本库：前面看到的.git隐藏文件夹就是版本库，版本库中存储了很多配置信息、日志信息和文件版本信息等</p><p>工作目录（工作区）：包含.git文件夹的目录就是工作目录，主要用于存放开发的代码</p><p>暂存区：.git文件夹中有很多文件，其中有一个index文件就是暂存区，也可以叫做stage。暂存区是一个临时保存修改文件的地方</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-236.01.32.png"></p><h3 id="3-4-Git工作目录下文件的两种状态"><a href="#3-4-Git工作目录下文件的两种状态" class="headerlink" title="3.4 Git工作目录下文件的两种状态"></a>3.4 Git工作目录下文件的两种状态</h3><p>Git工作目录下的文件存在两种状态：</p><p>  untracked 未跟踪（未被纳入版本控制）</p><p>  tracked 已跟踪（被纳入版本控制）</p><p>​        Unmodified 未修改状态</p><p>​        Modified 已修改状态</p><p>​        Staged 已暂存状态</p><p>这些文件的状态会随着我们执行Git的命令发生变化</p><h3 id="3-5-本地仓库操作"><a href="#3-5-本地仓库操作" class="headerlink" title="3.5 本地仓库操作"></a>3.5 本地仓库操作</h3><p><strong>git status 查看文件状态</strong></p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2316.12.44.png"></p><p>也<strong>可以使用git status –s 使输出信息更加简洁</strong></p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2316.14.17.png"></p><p><strong>git add 将未跟踪的文件加入暂存区</strong></p><p>**tab键自动补全文件名字 **</p><p>将新创建的文件加入暂存区后查看文件状态</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2316.18.36.png"></p><p><strong>git reset 将暂存区的文件取消暂存</strong></p><p>将文件取消暂存后查看文件状态</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2316.24.50.png"></p><p><strong>git commit 将暂存区的文件修改提交到本地仓库</strong></p><p>-m是编辑日志</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2410.31.02.png"></p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2410.36.59.png"></p><p><strong>git rm 删除文件</strong></p><p>删除文件后查看文件状态 文件删除还在暂存区 上面删除的只是工作区的文件，需要提交到本地仓库</p><h5 id="将文件添加至忽略列表"><a href="#将文件添加至忽略列表" class="headerlink" title="将文件添加至忽略列表"></a>将文件添加至忽略列表</h5><p>一般我们总会有些文件无需纳入Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以在工作目录中创建一个名为 .gitignore 的文件（文件名称固定），列出要忽略的文件模式。下面是一个示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># no .a files</span><br><span class="line">*.a      <span class="comment">//忽略以点a为结尾的文件</span></span><br><span class="line"># but do track lib.a<span class="punctuation">,</span> even though you&#x27;re ignoring .a files above</span><br><span class="line">!lib.a   <span class="comment">//不需要忽略lib.a文件</span></span><br><span class="line"># only ignore the TODO file in the current directory<span class="punctuation">,</span> not subdir/TODO</span><br><span class="line">/TODO    <span class="comment">//当前目录下TODO文件需要忽略</span></span><br><span class="line"># ignore all files in the build/ directory</span><br><span class="line">build/   <span class="comment">//build下面所有的文件需要忽略</span></span><br><span class="line"># ignore doc/notes.txt<span class="punctuation">,</span> but not doc/server/arch.txt</span><br><span class="line">doc<span class="comment">/*.txt    //doc下所有以txt为结尾的文件需要忽略忽略</span></span><br><span class="line"><span class="comment"># ignore all .pdf files in the doc/ directory</span></span><br><span class="line"><span class="comment">doc/**/</span>*.pdf   <span class="comment">//**代表多级目录</span></span><br></pre></td></tr></table></figure><p>在命令行中创建文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch .gitignore</span><br></pre></td></tr></table></figure><p>文件内容 忽略以class结尾的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*.class</span><br></pre></td></tr></table></figure><h5 id="git-log-查看日志记录"><a href="#git-log-查看日志记录" class="headerlink" title="git log 查看日志记录"></a>git log 查看日志记录</h5><p>输入q退出</p><h3 id="3-6-远程仓库操作"><a href="#3-6-远程仓库操作" class="headerlink" title="3.6 远程仓库操作"></a>3.6 远程仓库操作</h3><p>前面执行的命令操作都是针对的本地仓库，本章节我们会学习关于远程仓库的一些操作，具体包括：</p><h4 id="3-6-1查看远程仓库"><a href="#3-6-1查看远程仓库" class="headerlink" title="3.6.1查看远程仓库"></a>3.6.1查看远程仓库</h4><p>如果想查看已经配置的远程仓库服务器，可以运行 git remote 命令。 它会列出指定的每一个远程服务器的简写。 如果已经克隆了远程仓库，那么至少应该能看到 origin ，这是 Git 克隆的仓库服务器的默认名字</p><p>git remote -v 显示更加详细的信息</p><p>git remote show origin 更加详细信息</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3018.16.54.png"></p><h4 id="3-6-2-添加远程仓库"><a href="#3-6-2-添加远程仓库" class="headerlink" title="3.6.2 添加远程仓库"></a>3.6.2 添加远程仓库</h4><p>运行 git remote add &lt;shortname&gt; &lt;url&gt; 添加一个新的远程 Git 仓库，同时指定一个可以引用的简写</p><p>&lt;shotname&gt;类似于origin 可以随便取</p><p>&lt;url&gt;任何的一个远程的git仓库的</p><p>一个本地仓库可以添加多个远程仓库</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3018.28.28.png"></p><h4 id="3-6-3-从远程仓库克隆"><a href="#3-6-3-从远程仓库克隆" class="headerlink" title="3.6.3 从远程仓库克隆"></a>3.6.3 从远程仓库克隆</h4><p>如果你想获得一份已经存在了的 Git 仓库的拷贝，这时就要用到 git clone 命令。 Git 克隆的是该 Git 仓库服务器上的几乎所有数据（包括日志信息、历史记录等），而不仅仅是复制工作所需要的文件。 当你执行 git clone 命令的时候，默认配置下远程 Git 仓库中的每一个文件的每一个版本都将被拉取下来。</p><p>克隆仓库的命令格式是 git clone [url] </p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3022.48.25.png"></p><h4 id="3-6-4-移除无效的远程仓库"><a href="#3-6-4-移除无效的远程仓库" class="headerlink" title="3.6.4 移除无效的远程仓库"></a>3.6.4 移除无效的远程仓库</h4><p>如果因为一些原因想要移除一个远程仓库 ，可以使用 git remote rm</p><p>将本地与远程仓库的关联移除并没有删除远程仓库</p><p>注意：此命令只是从本地移除远程仓库的记录，并不会真正影响到远程仓库</p><h4 id="3-6-5-从远程仓库中抓取与拉取"><a href="#3-6-5-从远程仓库中抓取与拉取" class="headerlink" title="3.6.5 从远程仓库中抓取与拉取"></a>3.6.5 从远程仓库中抓取与拉取</h4><p>git fetch 是从远程仓库获取最新版本到本地仓库，不会自动merge（不会自动合并数据，会存到.git文件中）(merge 能不能在工作区中看到这些文件)</p><p>需要输入git merge 分支     来手动合数据</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3022.02.57.png"></p><p>git pull 是从远程仓库获取最新版本并merge到本地仓库</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3022.34.59.png"></p><p>注意：如果当前本地仓库不是从远程仓库克隆，而是本地创建的仓库，并且仓库中存在文件，此时再从远程仓库拉取文件的时候会报错（fatal: refusing to merge unrelated histories ），解决此问题可以在git pull命令后加入参数–allow-unrelated-histories</p><h4 id="3-6-6-推送到远程仓库"><a href="#3-6-6-推送到远程仓库" class="headerlink" title="3.6.6 推送到远程仓库"></a>3.6.6 推送到远程仓库</h4><p>当你想分享你的代码时，可以将其推送到远程仓库。 命令形式：git push [remote-name][branch-name]</p><p>现将文件提交到本地仓库，再将文件推送到git</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3023.04.59.png"></p><h3 id="3-7-Git分支"><a href="#3-7-Git分支" class="headerlink" title="3.7 Git分支"></a>3.7 Git分支</h3><p>几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线。Git 的master分支并不是一个特殊分支。 它跟其它分支没有区别。 之所以几乎每一个仓库都有 master 分支，是因为git init 命令默认创建它，并且大多数人都懒得去改动它。</p><p>在本章节我们会学习到关于分支的相关命令，具体如下：</p><h4 id="3-7-1-查看分支"><a href="#3-7-1-查看分支" class="headerlink" title="3.7.1 查看分支"></a>3.7.1 查看分支</h4><p># 列出所有本地分支</p><p>$ git branch</p><p># 列出所有远程分支</p><p>$ git branch -r</p><p># 列出所有本地分支和远程分支</p><p>$ git branch -a</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3023.12.41.png"></p><h4 id="3-7-2-创建分支"><a href="#3-7-2-创建分支" class="headerlink" title="3.7.2 创建分支"></a>3.7.2 创建分支</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3023.14.52.png"></p><h4 id="3-7-3-切换分支"><a href="#3-7-3-切换分支" class="headerlink" title="3.7.3 切换分支"></a>3.7.3 切换分支</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3023.16.12.png"></p><h4 id="3-7-4-推送至远程仓库分支"><a href="#3-7-4-推送至远程仓库分支" class="headerlink" title="3.7.4 推送至远程仓库分支"></a>3.7.4 推送至远程仓库分支</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3109.41.56.png"></p><p>因为这些分支是在master分支上创建出来的所以内容跟master分支内容一致</p><h4 id="3-7-5-合并分支"><a href="#3-7-5-合并分支" class="headerlink" title="3.7.5 合并分支"></a>3.7.5 合并分支</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3110.02.56.png"></p><p>有时候合并操作不会如此顺利。 如果你在两个不同的分支中，对同一个文件的同一个部分进行了不同的修改，Git 就没办法合并它们，同时会提示文件冲突。此时需要我们打开冲突的文件并修复冲突内容，最后执行git add命令来标识冲突已解决</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3110.08.48.png"></p><h4 id="3-7-5-删除分支"><a href="#3-7-5-删除分支" class="headerlink" title="3.7.5 删除分支"></a>3.7.5 删除分支</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3110.13.52.png"></p><p>如果要删除的分支中进行了一些开发动作，此时执行上面的删除命令并不会删除分支，如果坚持要删除此分支，可以将命令中的-d参数改为-D</p><p>注：如果要删除远程仓库中的分支，可以使用命令git push<br>origin –d branchName</p><h3 id="3-8-Git标签"><a href="#3-8-Git标签" class="headerlink" title="3.8 Git标签"></a>3.8 Git标签</h3><p>像其他版本控制系统（VCS）一样，Git可以给历史中的某一个提交打上标签，以示重要。比较有代表性的是人们会使用这个功能来标记发布结点（v1.0、v1.2等）。标签指的是某个分支某个特定时间点的状态。通过标签，可以很方便的切换到标记时的状态。</p><p>在本节中，我们将学习：</p><ul><li>列出已有的标签</li><li>创建新标签</li><li>将标签推送至远程仓库</li><li>检出标签</li><li>删除标签</li></ul><h4 id="3-8-1-列出已有标签"><a href="#3-8-1-列出已有标签" class="headerlink" title="3.8.1 列出已有标签"></a>3.8.1 列出已有标签</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 列出所有tag</span><br><span class="line">$ git tag</span><br><span class="line"># 查看tag信息</span><br><span class="line">$ git show [tag]</span><br></pre></td></tr></table></figure><h4 id="3-8-2-创建新标签"><a href="#3-8-2-创建新标签" class="headerlink" title="3.8.2 创建新标签"></a>3.8.2 创建新标签</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 新建一个tag</span><br><span class="line">$ git tag [tagName]</span><br></pre></td></tr></table></figure><h4 id="3-8-3-将标签推送至远程仓库"><a href="#3-8-3-将标签推送至远程仓库" class="headerlink" title="3.8.3 将标签推送至远程仓库"></a>3.8.3 将标签推送至远程仓库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 提交指定tag</span><br><span class="line">$ git push [remote][tag]</span><br></pre></td></tr></table></figure><h4 id="3-8-4-检出标签"><a href="#3-8-4-检出标签" class="headerlink" title="3.8.4  检出标签"></a>3.8.4  检出标签</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 新建一个分支，指向某个tag（复制这个tag的文件到新分支）</span><br><span class="line">$ git checkout -b [branch][tag]</span><br></pre></td></tr></table></figure><h4 id="3-8-5-删除标签"><a href="#3-8-5-删除标签" class="headerlink" title="3.8.5 删除标签"></a>3.8.5 删除标签</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 删除本地tag</span><br><span class="line">$ git tag -d [tag]</span><br><span class="line"># 删除远程tag</span><br><span class="line">$ git push origin:refs/tags/[tag]</span><br></pre></td></tr></table></figure><h3 id="4-0-使用TortoiseGit管理文件版本"><a href="#4-0-使用TortoiseGit管理文件版本" class="headerlink" title="4.0 使用TortoiseGit管理文件版本"></a>4.0 使用TortoiseGit管理文件版本</h3><h4 id="4-1-TortoiseGit下载与安装"><a href="#4-1-TortoiseGit下载与安装" class="headerlink" title="4.1 TortoiseGit下载与安装"></a>4.1 TortoiseGit下载与安装</h4><p>TortoiseGit是一款开源的Git图形界面工具，使用TortoiseGit可以简化Git相关的操作（本质上还是执行的Git相关命令）。</p><p>TortoiseGit下载地址：<a href="https://tortoisegit.org/download/">https://tortoisegit.org/download/</a></p><p>mac系统没有TortoiseGit</p><h4 id="4-2-TortoiseGit使用"><a href="#4-2-TortoiseGit使用" class="headerlink" title="4.2 TortoiseGit使用"></a>4.2 TortoiseGit使用</h4><p>在前面我们已经通过Git命令完成了Git的常用操作，本章节我们会通过TortoiseGit来完成如下操作：</p><ul><li>创建仓库</li><li>克隆仓库</li><li>将文件添加到暂存区</li><li>提交文件</li><li>推送本地仓库至远程仓库</li><li>拉取代码</li><li>创建分支</li><li>切换分支</li><li>合并分支</li></ul><h2 id="5-在IDEA中使用Git"><a href="#5-在IDEA中使用Git" class="headerlink" title="5.在IDEA中使用Git"></a>5.在IDEA中使用Git</h2><h3 id="5-1-在IDEA中配置Git"><a href="#5-1-在IDEA中配置Git" class="headerlink" title="5.1 在IDEA中配置Git"></a>5.1 在IDEA中配置Git</h3><p>安装好IntelliJ IDEA后，如果Git安装在默认路径下，那么idea会自动找到git的位置，如果更改了Git的安装位置则需要手动配置下Git的路径。</p><p>选择File→Settings打开设置窗口，找到Version Control下的git选项</p><p>选择git的安装目录后可以点击“Test”按钮测试是否正确配置</p><h3 id="5-2-在IDEA中使用Git"><a href="#5-2-在IDEA中使用Git" class="headerlink" title="5.2 在IDEA中使用Git"></a>5.2 在IDEA中使用Git</h3><h4 id="5-2-1在IDEA中创建工程并将工程添加至Git"><a href="#5-2-1在IDEA中创建工程并将工程添加至Git" class="headerlink" title="5.2.1在IDEA中创建工程并将工程添加至Git"></a>5.2.1在IDEA中创建工程并将工程添加至Git</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE%E7%89%8744.png"></p><h4 id="5-2-2-将文件添加到暂存区"><a href="#5-2-2-将文件添加到暂存区" class="headerlink" title="5.2.2 将文件添加到暂存区"></a>5.2.2 将文件添加到暂存区</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE%E7%89%8745.png"></p><h4 id="5-2-3-提交文件"><a href="#5-2-3-提交文件" class="headerlink" title="5.2.3 提交文件"></a>5.2.3 提交文件</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE%E7%89%8746.png"></p><h4 id="5-2-4-将代码推送到远程仓库"><a href="#5-2-4-将代码推送到远程仓库" class="headerlink" title="5.2.4 将代码推送到远程仓库"></a>5.2.4 将代码推送到远程仓库</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE%E7%89%8747.png"></p><h4 id="5-2-5-从远程仓库克隆工程到本地"><a href="#5-2-5-从远程仓库克隆工程到本地" class="headerlink" title="5.2.5 从远程仓库克隆工程到本地"></a>5.2.5 从远程仓库克隆工程到本地</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE%E7%89%8748.png"></p><h4 id="5-2-6-从远程拉取代码"><a href="#5-2-6-从远程拉取代码" class="headerlink" title="5.2.6 从远程拉取代码"></a>5.2.6 从远程拉取代码</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE%E7%89%8749.png"></p><h4 id="5-2-7-版本对比-每次push都会产生一个版本"><a href="#5-2-7-版本对比-每次push都会产生一个版本" class="headerlink" title="5.2.7 版本对比(每次push都会产生一个版本)"></a>5.2.7 版本对比(每次push都会产生一个版本)</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE%E7%89%8750.png"></p><h4 id="5-2-8-创建分支"><a href="#5-2-8-创建分支" class="headerlink" title="5.2.8 创建分支"></a>5.2.8 创建分支</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE%E7%89%8751.png"></p><h4 id="5-2-9-切换分支"><a href="#5-2-9-切换分支" class="headerlink" title="5.2.9 切换分支"></a>5.2.9 切换分支</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE%E7%89%8752.png"></p><h4 id="5-2-10-分支合并"><a href="#5-2-10-分支合并" class="headerlink" title="5.2.10 分支合并"></a>5.2.10 分支合并</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE%E7%89%8753.png"></p><h2 id="6-使用SSH协议传输数据"><a href="#6-使用SSH协议传输数据" class="headerlink" title="6.使用SSH协议传输数据"></a>6.使用SSH协议传输数据</h2><h3 id="6-1Git支持的传输协议"><a href="#6-1Git支持的传输协议" class="headerlink" title="6.1Git支持的传输协议"></a>6.1Git支持的传输协议</h3><p>由于Git的远程仓库并不在我们本地，当我们在使用远程仓库的时候（例如克隆、拉取、推送）就会涉及到数据的网络传输，Git支持多种数据传输协议</p><ul><li>本地协议（Local）</li><li>HTTPS 协议</li><li>SSH（Secure Shell）协议</li><li>Git 协议</li></ul><p>我们前面的操作都是基于HTTPS协议进行的，本章节我们会学习如何使用SSH协议</p><h4 id="6-2-什么是SSH协议"><a href="#6-2-什么是SSH协议" class="headerlink" title="6.2 什么是SSH协议"></a>6.2 什么是SSH协议</h4><p>SSH 为 Secure Shell（安全外壳协议）的缩写，由IETF的网络小组（NetworkWorkingGroup）所制定。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。</p><p>由于本地Git仓库和远程仓库之间的传输是通过SSH加密的，所以必须要让远程仓库服务器认证你的SSHkey，在此之前，必须要生成SSHkey。</p><p>使用ssh协议通信时，推荐使用基于密钥的验证方式。你必须为自己创建一对密匙（公钥和私钥），并把公匙放在需要访问的服务器上。</p><h4 id="6-3-配置SSH协议"><a href="#6-3-配置SSH协议" class="headerlink" title="6.3 配置SSH协议"></a>6.3 配置SSH协议</h4><p>可以使用Git提供的命令行工具Git Bash生成公钥和私钥，具体操作过程如下：</p><p>1、使用命令ssh-keygen–t rsa生成公钥和私钥，执行完成后在window本地用户.ssh目录C:\Users\用户名.ssh下面生成如下名称的公钥和私钥</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3123.36.26.png"></p><p>2、复制公钥文件内容至码云服务器</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-3123.36.36.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Git分布式版本控制工具&quot;&gt;&lt;a href=&quot;#Git分布式版本控制工具&quot; class=&quot;headerlink&quot; title=&quot;Git分布式版本控制工具&quot;&gt;&lt;/a&gt;Git分布式版本控制工具&lt;/h1&gt;&lt;h2 id=&quot;1-Git概述&quot;&gt;&lt;a href=&quot;#1-Git概</summary>
      
    
    
    
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Spring与Mybatic整合</title>
    <link href="http://example.com/2022/05/20/Spring%E4%B8%8EMybatic%E6%95%B4%E5%90%88/"/>
    <id>http://example.com/2022/05/20/Spring%E4%B8%8EMybatic%E6%95%B4%E5%90%88/</id>
    <published>2022-05-20T13:42:21.000Z</published>
    <updated>2022-05-22T02:50:36.841Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SSM框架整合"><a href="#SSM框架整合" class="headerlink" title="SSM框架整合"></a>SSM框架整合</h2><h3 id="1-1-原始方式整合"><a href="#1-1-原始方式整合" class="headerlink" title="1.1 原始方式整合"></a>1.1 原始方式整合</h3><h5 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1.准备工作"></a>1.准备工作</h5><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2021.53.37.png"></p><h5 id="2-创建Maven工程"><a href="#2-创建Maven工程" class="headerlink" title="2.创建Maven工程"></a>2.创建Maven工程</h5><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/截屏2022-05-2021.54.46.png" style="zoom:30%;"><h5 id="3-导入Maven坐标"><a href="#3-导入Maven坐标" class="headerlink" title="3.导入Maven坐标"></a>3.导入Maven坐标</h5><p>参考：<strong>素材&#x2F;配置文件&#x2F;pom.xml文件</strong></p><h5 id="4-编写实体类"><a href="#4-编写实体类" class="headerlink" title="4.编写实体类"></a>4.编写实体类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Account</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> money;</span><br><span class="line">    <span class="comment">//省略getter和setter方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5-编写Mapper接口"><a href="#5-编写Mapper接口" class="headerlink" title="5.编写Mapper接口"></a>5.编写Mapper接口</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AccountMapper</span> &#123;</span><br><span class="line">    <span class="comment">//保存账户数据</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Account account)</span>;</span><br><span class="line">    <span class="comment">//查询账户数据</span></span><br><span class="line">    List&lt;Account&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-编写Service接口"><a href="#6-编写Service接口" class="headerlink" title="6.编写Service接口"></a>6.编写Service接口</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AccountService</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Account account)</span>; <span class="comment">//保存账户数据</span></span><br><span class="line">    List&lt;Account&gt; <span class="title function_">findAll</span><span class="params">()</span>; <span class="comment">//查询账户数据</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="7-编写Service接口实现"><a href="#7-编写Service接口实现" class="headerlink" title="7.编写Service接口实现"></a>7.编写Service接口实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service(&quot;accountService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">AccountService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Account account)</span> &#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MyBatisUtils.openSession();</span><br><span class="line">        <span class="type">AccountMapper</span> <span class="variable">accountMapper</span> <span class="operator">=</span> sqlSession.getMapper(AccountMapper.class);</span><br><span class="line">        accountMapper.save(account);</span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Account&gt; <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MyBatisUtils.openSession();</span><br><span class="line">        <span class="type">AccountMapper</span> <span class="variable">accountMapper</span> <span class="operator">=</span> sqlSession.getMapper(AccountMapper.class);</span><br><span class="line">        <span class="keyword">return</span> accountMapper.findAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="8-编写Controller"><a href="#8-编写Controller" class="headerlink" title="8.编写Controller"></a>8.编写Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AccountController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">save</span><span class="params">(Account account)</span>&#123;</span><br><span class="line">        accountService.save(account);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;save success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findAll&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">findAll</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">ModelAndView</span> <span class="variable">modelAndView</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">        modelAndView.setViewName(<span class="string">&quot;accountList&quot;</span>);</span><br><span class="line">        modelAndView.addObject(<span class="string">&quot;accountList&quot;</span>,accountService.findAll());</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="9-编写添加页面"><a href="#9-编写添加页面" class="headerlink" title="9.编写添加页面"></a>9.编写添加页面</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>保存账户信息表单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/save.action&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        用户名称<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        账户金额<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;money&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;保存&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="10-编写列表页面"><a href="#10-编写列表页面" class="headerlink" title="10.编写列表页面"></a>10.编写列表页面</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>账户id<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>账户名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>账户金额<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">&quot;$&#123;accountList&#125;&quot;</span> <span class="attr">var</span>=<span class="string">&quot;account&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;account.id&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;account.name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;account.money&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="11-编写相应配置文件-文件参考目录：素材-x2F-配置文件"><a href="#11-编写相应配置文件-文件参考目录：素材-x2F-配置文件" class="headerlink" title="11.编写相应配置文件(文件参考目录：素材&#x2F;配置文件)"></a>11.编写相应配置文件(文件参考目录：素材&#x2F;配置文件)</h5><p>•Spring配置文件：[applicationContext.xml](配置文件&#x2F;applicationContext.xml)</p><p>•SprngMVC配置文件：[spring-mvc.xml](配置文件&#x2F;spring-mvc.xml)</p><p>•MyBatis映射文件：[AccountMapper.xml](配置文件&#x2F;AccountMapper.xml)</p><p>•MyBatis核心文件：[sqlMapConfig.xml](配置文件&#x2F;sqlMapConfig.xml)</p><p>•数据库连接信息文件：[jdbc.properties](配置文件&#x2F;jdbc.properties)</p><p>•Web.xml文件：[web.xml](配置文件&#x2F;web.xml)</p><p>•日志文件：[log4j.xml](</p><h5 id="12-测试添加账户"><a href="#12-测试添加账户" class="headerlink" title="12.测试添加账户"></a>12.测试添加账户</h5><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2022.02.10.png"></p><h5 id="13-测试账户列表"><a href="#13-测试账户列表" class="headerlink" title="13.测试账户列表"></a>13.测试账户列表</h5><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2022.03.02.png"></p><h4 id="1-2-Spring整合MyBatis"><a href="#1-2-Spring整合MyBatis" class="headerlink" title="1.2 Spring整合MyBatis"></a>1.2 Spring整合MyBatis</h4><h5 id="1-整合思路"><a href="#1-整合思路" class="headerlink" title="1.整合思路"></a>1.整合思路</h5><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2210.19.30.png"></p><h5 id="2-将SqlSessionFactory配置到Spring容器中"><a href="#2-将SqlSessionFactory配置到Spring容器中" class="headerlink" title="2.将SqlSessionFactory配置到Spring容器中"></a>2.将SqlSessionFactory配置到Spring容器中</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--加载jdbc.properties--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置数据源--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置MyBatis的SqlSessionFactory--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:sqlMapConfig.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-扫描Mapper，让Spring容器产生Mapper实现类"><a href="#3-扫描Mapper，让Spring容器产生Mapper实现类" class="headerlink" title="3.扫描Mapper，让Spring容器产生Mapper实现类"></a>3.扫描Mapper，让Spring容器产生Mapper实现类</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置Mapper扫描--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.itheima.mapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-配置声明式事务控制"><a href="#4-配置声明式事务控制" class="headerlink" title="4.配置声明式事务控制"></a>4.配置声明式事务控制</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置声明式事务控制--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transacionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transacionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;txPointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.itheima.service.impl.*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;txPointcut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="5-修改Service实现类代码"><a href="#5-修改Service实现类代码" class="headerlink" title="5.修改Service实现类代码"></a>5.修改Service实现类代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service(&quot;accountService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">AccountService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountMapper accountMapper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Account account)</span> &#123;</span><br><span class="line">        accountMapper.save(account);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Account&gt; <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> accountMapper.findAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;SSM框架整合&quot;&gt;&lt;a href=&quot;#SSM框架整合&quot; class=&quot;headerlink&quot; title=&quot;SSM框架整合&quot;&gt;&lt;/a&gt;SSM框架整合&lt;/h2&gt;&lt;h3 id=&quot;1-1-原始方式整合&quot;&gt;&lt;a href=&quot;#1-1-原始方式整合&quot; class=&quot;head</summary>
      
    
    
    
    
    <category term="Mybastic" scheme="http://example.com/tags/Mybastic/"/>
    
  </entry>
  
  <entry>
    <title>halo博客无法解析图床链接</title>
    <link href="http://example.com/2022/05/20/halo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E8%A7%A3%E6%9E%90%E5%9B%BE%E5%BA%8A%E9%93%BE%E6%8E%A5/"/>
    <id>http://example.com/2022/05/20/halo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E8%A7%A3%E6%9E%90%E5%9B%BE%E5%BA%8A%E9%93%BE%E6%8E%A5/</id>
    <published>2022-05-20T01:36:14.000Z</published>
    <updated>2022-05-20T01:51:50.518Z</updated>
    
    <content type="html"><![CDATA[<p>Halo无法显示图床中的链接</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2009.37.06.png"></p><p>先开始使用的是七牛的图床</p><p>Typora可以显示图片，但Halo上却不行</p><p>网上找了半天方法，都没有效果</p><p>以为是七牛图床的问题，于是换了阿里的oss对象存储</p><p>结果发现情况跟上面一样</p><p>于是我换了别的图发现可以</p><p>最后发现Halo博客图床链接中不能又空格，有空格就不能显示</p><p>网上也查了 发现没有说这个问题的东西</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.bilibili.com/video/BV1HZ4y1o7VT?spm_id_from=333.337.search-card.all.click">什么是图床</a></p><p><a href="https://www.bilibili.com/video/BV1pF41147Xu">图床搭建</a></p><p><a href="https://www.bilibili.com/video/BV1Ca411t7ZV?spm_id_from=333.337.search-card.all.click">图床转移</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Halo无法显示图床中的链接&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2009.37.06.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;先开始使用的</summary>
      
    
    
    
    
    <category term="经验" scheme="http://example.com/tags/%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis的多表操作</title>
    <link href="http://example.com/2022/05/20/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2022/05/20/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/</id>
    <published>2022-05-20T01:21:28.000Z</published>
    <updated>2022-05-20T10:10:12.257Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Mybatis多表查询"><a href="#1-Mybatis多表查询" class="headerlink" title="1.Mybatis多表查询"></a>1.Mybatis多表查询</h2><h3 id="1-1-一对一查询"><a href="#1-1-一对一查询" class="headerlink" title="1.1 一对一查询"></a>1.1 一对一查询</h3><h5 id="1-1-1-一对一查询的模型MapperScannerConfigurer"><a href="#1-1-1-一对一查询的模型MapperScannerConfigurer" class="headerlink" title="1.1.1 一对一查询的模型MapperScannerConfigurer"></a>1.1.1 一对一查询的模型MapperScannerConfigurer</h5><p>用户表和订单表的关系为，一个用户有多个订单，一个订单只从属于一个用户</p><p>一对一查询的需求：查询一个订单，与此同时查询出该订单所属的用户</p><h5 id="1-1-2一对一查询的语句"><a href="#1-1-2一对一查询的语句" class="headerlink" title="1.1.2一对一查询的语句"></a>1.1.2一对一查询的语句</h5><p>对应的sql语句：select *  from orders o,user u where o.uid&#x3D;u.id;</p><p>查询的结果如下：</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2010.10.10.png"></p><h5 id="1-1-3-创建Order和User实体"><a href="#1-1-3-创建Order和User实体" class="headerlink" title="1.1.3 创建Order和User实体"></a>1.1.3 创建Order和User实体</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Order</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> Date ordertime;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> total;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//代表当前订单从属于哪一个客户</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-1-4-创建OrderMapper接口"><a href="#1-1-4-创建OrderMapper接口" class="headerlink" title="1.1.4 创建OrderMapper接口"></a>1.1.4 创建OrderMapper接口</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OrderMapper</span> &#123;</span><br><span class="line">    List&lt;Order&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-1-5-配置OrderMapper-xml"><a href="#1-1-5-配置OrderMapper-xml" class="headerlink" title="1.1.5 配置OrderMapper.xml"></a>1.1.5 配置OrderMapper.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.mapper.OrderMapper&quot;</span>&gt;</span></span><br><span class="line">  //封装的resultMap type封装什么javabean的</span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;orderMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.itheima.domain.Order&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--手动指定字段与实体属性映射</span></span><br><span class="line"><span class="comment">column：数据表的字段名称</span></span><br><span class="line"><span class="comment">property：实体的属性名称</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">      </span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;uid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;user.id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">property</span>=<span class="string">&quot;user.username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;user.password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;birthday&quot;</span> <span class="attr">property</span>=<span class="string">&quot;user.birthday&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;orderMap&quot;</span>&gt;</span>//填写上面封装的resultMap</span><br><span class="line">        select * from orders o,user u where o.uid=u.id</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中&lt;resultMap&gt;还可以配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;orderMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.itheima.domain.Order&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;ordertime&quot;</span> <span class="attr">column</span>=<span class="string">&quot;ordertime&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;total&quot;</span> <span class="attr">column</span>=<span class="string">&quot;total&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">property:当前实体（Order）的属性名称（private User user）</span></span><br><span class="line"><span class="comment">  javaType：当前实体中（Order）的属性类型（User）</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;user&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;com.itheima.domain.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;uid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;birthday&quot;</span> <span class="attr">property</span>=<span class="string">&quot;birthday&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="1-1-6-测试结果"><a href="#1-1-6-测试结果" class="headerlink" title="1.1.6 测试结果"></a>1.1.6 测试结果</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">OrderMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(OrderMapper.class);</span><br><span class="line">List&lt;Order&gt; all = mapper.findAll();</span><br><span class="line"><span class="keyword">for</span>(Order order : all)&#123;</span><br><span class="line">    System.out.println(order);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-一对多查询"><a href="#1-2-一对多查询" class="headerlink" title="1.2 一对多查询"></a>1.2 一对多查询</h3><h5 id="1-2-1-一对多查询的模型"><a href="#1-2-1-一对多查询的模型" class="headerlink" title="1.2.1 一对多查询的模型"></a>1.2.1 一对多查询的模型</h5><p>用户表和订单表的关系为，一个用户有多个订单，一个订单只从属于一个用户</p><p>一对多查询的需求：查询一个用户，与此同时查询出该用户具有的订单</p><h5 id="1-2-2-一对多查询的语句"><a href="#1-2-2-一对多查询的语句" class="headerlink" title="1.2.2 一对多查询的语句"></a>1.2.2 一对多查询的语句</h5><p>对应的sql语句：select *,o.id oid from user u left join orders o on u.id&#x3D;o.uid;</p><p>查询的结果如下：</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2011.49.20.png"></p><h5 id="1-2-3-修改User实体"><a href="#1-2-3-修改User实体" class="headerlink" title="1.2.3 修改User实体"></a>1.2.3 修改User实体</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Order</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> Date ordertime;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> total;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//代表当前订单从属于哪一个客户</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="comment">//代表当前用户具备哪些订单 一个用户有多个订单</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Order&gt; orderList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-2-4-创建UserMapper接口"><a href="#1-2-4-创建UserMapper接口" class="headerlink" title="1.2.4 创建UserMapper接口"></a>1.2.4 创建UserMapper接口</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    List&lt;User&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-2-5-配置UserMapper-xml"><a href="#1-2-5-配置UserMapper-xml" class="headerlink" title="1.2.5 配置UserMapper.xml"></a>1.2.5 配置UserMapper.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.itheima.domain.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;birthday&quot;</span> <span class="attr">property</span>=<span class="string">&quot;birthday&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--配置集合信息</span></span><br><span class="line"><span class="comment">property：集合名称</span></span><br><span class="line"><span class="comment">ofType：当前集合中的数据类型</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;orderList&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;com.itheima.domain.Order&quot;</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--封装oeder的数据--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;oid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;ordertime&quot;</span> <span class="attr">property</span>=<span class="string">&quot;ordertime&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;total&quot;</span> <span class="attr">property</span>=<span class="string">&quot;total&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span>&gt;</span></span><br><span class="line">        select *,o.id oid from user u left join orders o on u.id=o.uid</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="1-2-6-测试结果"><a href="#1-2-6-测试结果" class="headerlink" title="1.2.6 测试结果"></a>1.2.6 测试结果</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">List&lt;User&gt; all = mapper.findAll();</span><br><span class="line"><span class="keyword">for</span>(User user : all)&#123;</span><br><span class="line">    System.out.println(user.getUsername());</span><br><span class="line">    List&lt;Order&gt; orderList = user.getOrderList();</span><br><span class="line">    <span class="keyword">for</span>(Order order : orderList)&#123;</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;----------------------------------&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2012.00.19.png"></p><h3 id="1-3-多对多查询"><a href="#1-3-多对多查询" class="headerlink" title="1.3 多对多查询"></a>1.3 多对多查询</h3><h5 id="1-3-1-多对多查询的模型"><a href="#1-3-1-多对多查询的模型" class="headerlink" title="1.3.1 多对多查询的模型"></a>1.3.1 多对多查询的模型</h5><p>用户表和角色表的关系为，一个用户有多个角色，一个角色被多个用户使用</p><p>多对多查询的需求：查询用户同时查询出该用户的所有角色</p><h5 id="1-3-2-多对多查询的语句"><a href="#1-3-2-多对多查询的语句" class="headerlink" title="1.3.2 多对多查询的语句"></a>1.3.2 多对多查询的语句</h5><p> 对应的sql语句：select * from USER u, sys_user_role ur,sys_role r WHERE u.id&#x3D;ur.userId AND ur.roleId&#x3D;r.id</p><p>查询的结果如下：</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2014.25.25.png"></p><h5 id="1-3-3-创建Role实体，修改User实体"><a href="#1-3-3-创建Role实体，修改User实体" class="headerlink" title="1.3.3 创建Role实体，修改User实体"></a>1.3.3 创建Role实体，修改User实体</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="comment">//代表当前用户具备哪些订单</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Order&gt; orderList;</span><br><span class="line">    <span class="comment">//代表当前用户具备哪些角色</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Role&gt; roleList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Role</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String rolename;</span><br><span class="line">  <span class="keyword">private</span> String roleDesc;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-3-4-添加UserMapper接口方法"><a href="#1-3-4-添加UserMapper接口方法" class="headerlink" title="1.3.4  添加UserMapper接口方法"></a>1.3.4  添加UserMapper接口方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; <span class="title function_">findAllUserAndRole</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><h5 id="1-3-5-配置UserMapper-xml"><a href="#1-3-5-配置UserMapper-xml" class="headerlink" title="1.3.5 配置UserMapper.xml"></a>1.3.5 配置UserMapper.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;userRoleMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.itheima.domain.User&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--user的信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;birthday&quot;</span> <span class="attr">property</span>=<span class="string">&quot;birthday&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--user内部的roleList信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;roleList&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;com.itheima.domain.Role&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;rid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;rolename&quot;</span> <span class="attr">property</span>=<span class="string">&quot;rolename&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAllUserAndRole&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userRoleMap&quot;</span>&gt;</span></span><br><span class="line">    select * from USER u, sys_user_role ur,sys_role r WHERE u.id=ur.userId AND ur.roleId=r.id</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="1-3-6-测试结果"><a href="#1-3-6-测试结果" class="headerlink" title="1.3.6 测试结果"></a>1.3.6 测试结果</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">List&lt;User&gt; all = mapper.findAllUserAndRole();</span><br><span class="line"><span class="keyword">for</span>(User user : all)&#123;</span><br><span class="line">    System.out.println(user.getUsername());</span><br><span class="line">    List&lt;Role&gt; roleList = user.getRoleList();</span><br><span class="line">    <span class="keyword">for</span>(Role role : roleList)&#123;</span><br><span class="line">        System.out.println(role);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;----------------------------------&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2014.31.31.png"></p><h3 id="1-4-知识小结"><a href="#1-4-知识小结" class="headerlink" title="1.4 知识小结"></a>1.4 知识小结</h3><p>MyBatis多表配置方式：</p><p><strong>一对一配置：使用&lt;resultMap&gt;做配置</strong></p><p><strong>一对多配置：使用&lt;resultMap&gt;+&lt;collection&gt;做配置</strong></p><p><strong>多对多配置：使用&lt;resultMap&gt;+&lt;collection&gt;做配置</strong></p><h2 id="2-Mybatis的注解开发"><a href="#2-Mybatis的注解开发" class="headerlink" title="2.Mybatis的注解开发"></a>2.Mybatis的注解开发</h2><h3 id="2-1-MyBatis的常用注解"><a href="#2-1-MyBatis的常用注解" class="headerlink" title="2.1 MyBatis的常用注解"></a>2.1 MyBatis的常用注解</h3><p>这几年来注解开发越来越流行，Mybatis也可以使用注解开发方式，这样我们就可以减少编写Mapper</p><p>映射文件了。我们先围绕一些基本的CRUD来学习，再学习复杂映射多表操作。</p><p>@Insert：实现新增</p><p>@Update：实现更新</p><p>@Delete：实现删除</p><p>@Select：实现查询</p><p>@Result：实现结果集封装</p><p>@Results：可以与@Result 一起使用，封装多个结果集</p><p>@One：实现一对一结果集封装</p><p>@Many：实现一对多结果集封装</p><h3 id="2-2-MyBatis的增删改查"><a href="#2-2-MyBatis的增删改查" class="headerlink" title="2.2 MyBatis的增删改查"></a>2.2 MyBatis的增删改查</h3><p>我们完成简单的user表的增删改查的操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line">    <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">    userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAdd</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setUsername(<span class="string">&quot;测试数据&quot;</span>);</span><br><span class="line">    user.setPassword(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">    user.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    userMapper.add(user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setId(<span class="number">16</span>);</span><br><span class="line">    user.setUsername(<span class="string">&quot;测试数据修改&quot;</span>);</span><br><span class="line">    user.setPassword(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">    user.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    userMapper.update(user);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    userMapper.delete(<span class="number">16</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testFindById</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.findById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    List&lt;User&gt; all = userMapper.findAll();</span><br><span class="line">    <span class="keyword">for</span>(User user : all)&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改MyBatis的核心配置文件，我们使用了注解替代的映射文件，所以我们只需要加载使用了注解的Mapper接口即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--扫描使用注解的类--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.mapper.UserMapper&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或者指定扫描包含映射关系的接口所在的包也可以</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--扫描使用注解的类所在的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.itheima.mapper&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在接口中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Insert(&quot;insert into user values(#&#123;id&#125;,#&#123;username&#125;,#&#123;password&#125;,#&#123;birthday&#125;)&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Update(&quot;update user set username=#&#123;username&#125;,password=#&#123;password&#125; where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Delete(&quot;delete from user where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Select(&quot;select * from user where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> User <span class="title function_">findById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><h3 id="2-3-MyBatis的注解实现复杂映射开发"><a href="#2-3-MyBatis的注解实现复杂映射开发" class="headerlink" title="2.3 MyBatis的注解实现复杂映射开发"></a>2.3 MyBatis的注解实现复杂映射开发</h3><p>实现复杂关系映射之前我们可以在映射文件中通过配置&lt;resultMap&gt;来实现，使用注解开发后，我们可以使用@Results注解，@Result注解，@One注解，@Many注解组合完成复杂关系的配置</p><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@Results</td><td>代替的是标签&lt;resultMap&gt;该注解中可以使用单个@Result注解，也可以使用@Result集合。使用格式：@Results（{@Result（），@Result（）}）或@Results（@Result（））</td></tr><tr><td>@Resut</td><td>代替了&lt;id&gt;标签和&lt;result&gt;标签@Result中属性介绍：column：数据库的列名property：需要装配的属性名one：需要使用的@One 注解（@Result（one&#x3D;@One）（）））many：需要使用的@Many 注解（@Result（many&#x3D;@many）（）））</td></tr></tbody></table><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@One（一对一）</td><td>代替了&lt;assocation&gt; 标签，是多表查询的关键，在注解中用来指定子查询返回单一对象。@One注解属性介绍：select: 指定用来多表查询的 sqlmapper使用格式：@Result(column&#x3D;” “,property&#x3D;””,one&#x3D;@One(select&#x3D;””))</td></tr><tr><td>@Many（多对一）</td><td>代替了&lt;collection&gt;标签,是是多表查询的关键，在注解中用来指定子查询返回对象集合。使用格式：@Result(property&#x3D;””,column&#x3D;””,many&#x3D;@Many(select&#x3D;””))</td></tr></tbody></table><h3 id="2-4-一对一查询"><a href="#2-4-一对一查询" class="headerlink" title="2.4 一对一查询"></a>2.4 一对一查询</h3><h5 id="2-4-1-一对一查询的模型"><a href="#2-4-1-一对一查询的模型" class="headerlink" title="2.4.1 一对一查询的模型"></a>2.4.1 一对一查询的模型</h5><p>用户表和订单表的关系为，一个用户有多个订单，一个订单只从属于一个用户</p><p>一对一查询的需求：查询一个订单，与此同时查询出该订单所属的用户</p><h5 id="2-4-2-一对一查询的语句"><a href="#2-4-2-一对一查询的语句" class="headerlink" title="2.4.2 一对一查询的语句"></a>2.4.2 一对一查询的语句</h5><p>对应的sql语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,o.id oid <span class="keyword">from</span> orders o,<span class="keyword">user</span> u <span class="keyword">where</span> o.uid<span class="operator">=</span>u.id </span><br><span class="line"></span><br><span class="line">方法二：</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> orders;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span>查询出订单的uid;</span><br></pre></td></tr></table></figure><p>查询的结果如下：</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2017.25.51.png"></p><h5 id="2-4-3-创建Order和User实体"><a href="#2-4-3-创建Order和User实体" class="headerlink" title="2.4.3 创建Order和User实体"></a>2.4.3 创建Order和User实体</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Order</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> Date ordertime;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> total;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//代表当前订单从属于哪一个客户</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-4-4-创建OrderMapper接口"><a href="#2-4-4-创建OrderMapper接口" class="headerlink" title="2.4.4 创建OrderMapper接口"></a>2.4.4 创建OrderMapper接口</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OrderMapper</span> &#123;</span><br><span class="line">    List&lt;Order&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-4-5-使用注解配置Mapper"><a href="#2-4-5-使用注解配置Mapper" class="headerlink" title="2.4.5 使用注解配置Mapper"></a>2.4.5 使用注解配置Mapper</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OrderMapper</span> &#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select * from orders&quot;)</span></span><br><span class="line">    <span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">      //id=true 表示该标签为id</span></span><br><span class="line"><span class="meta">            @Result(id=true,property = &quot;id&quot;,column = &quot;id&quot;),</span></span><br><span class="line"><span class="meta">            @Result(property = &quot;ordertime&quot;,column = &quot;ordertime&quot;),</span></span><br><span class="line"><span class="meta">            @Result(property = &quot;total&quot;,column = &quot;total&quot;),</span></span><br><span class="line"><span class="meta">      //封装javabean的内部类</span></span><br><span class="line"><span class="meta">            @Result(property = &quot;user&quot;,//要封装的属性名称</span></span><br><span class="line"><span class="meta">                    column = &quot;uid&quot;,//根据那个字段查询user表的数据</span></span><br><span class="line"><span class="meta">                    javaType = User.class,//要封装的实体类型</span></span><br><span class="line"><span class="meta">                    //select属性 代表查询那个接口的方法获取数据</span></span><br><span class="line"><span class="meta">                    //使用userMapper中的接口</span></span><br><span class="line"><span class="meta">                    one = @One(select = &quot;com.itheima.mapper.UserMapper.findById&quot;))</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    List&lt;Order&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line"><span class="comment">//userMapper中的根据id查询的接口</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    User <span class="title function_">findById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-4-6-测试结果"><a href="#2-4-6-测试结果" class="headerlink" title="2.4.6 测试结果"></a>2.4.6 测试结果</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectOrderAndUser</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;Order&gt; all = orderMapper.findAll();</span><br><span class="line">    <span class="keyword">for</span>(Order order : all)&#123;</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2017.39.59.png"></p><h3 id="2-5-一对多查询"><a href="#2-5-一对多查询" class="headerlink" title="2.5 一对多查询"></a>2.5 一对多查询</h3><h5 id="2-5-1-一对多查询的模型"><a href="#2-5-1-一对多查询的模型" class="headerlink" title="2.5.1 一对多查询的模型"></a>2.5.1 一对多查询的模型</h5><p>用户表和订单表的关系为，一个用户有多个订单，一个订单只从属于一个用户</p><p>一对多查询的需求：查询一个用户，与此同时查询出该用户具有的订单</p><h5 id="2-5-2-一对多查询的语句"><a href="#2-5-2-一对多查询的语句" class="headerlink" title="2.5.2 一对多查询的语句"></a>2.5.2 一对多查询的语句</h5><p>对应的sql语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> orders <span class="keyword">where</span> uid<span class="operator">=</span>查询出用户的id;</span><br></pre></td></tr></table></figure><h5 id="2-5-3-修改User实体"><a href="#2-5-3-修改User实体" class="headerlink" title="2.5.3 修改User实体"></a>2.5.3 修改User实体</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Order</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> Date ordertime;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> total;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//代表当前订单从属于哪一个客户</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="comment">//代表当前用户具备哪些订单</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Order&gt; orderList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-5-4-创建UserMapper接口"><a href="#2-5-4-创建UserMapper接口" class="headerlink" title="2.5.4 创建UserMapper接口"></a>2.5.4 创建UserMapper接口</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; <span class="title function_">findAllUserAndOrder</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><h5 id="2-5-5-使用注解配置Mapper"><a href="#2-5-5-使用注解配置Mapper" class="headerlink" title="2.5.5 使用注解配置Mapper"></a>2.5.5 使用注解配置Mapper</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line">    <span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">            @Result(id = true,property = &quot;id&quot;,column = &quot;id&quot;),</span></span><br><span class="line"><span class="meta">            @Result(property = &quot;username&quot;,column = &quot;username&quot;),</span></span><br><span class="line"><span class="meta">            @Result(property = &quot;password&quot;,column = &quot;password&quot;),</span></span><br><span class="line"><span class="meta">            @Result(property = &quot;birthday&quot;,column = &quot;birthday&quot;),</span></span><br><span class="line"><span class="meta">            @Result(property = &quot;orderList&quot;,column = &quot;id&quot;,</span></span><br><span class="line"><span class="meta">                    javaType = List.class,</span></span><br><span class="line"><span class="meta">                    //使用自己查询的数据，用别人的方法来查询</span></span><br><span class="line"><span class="meta">                    many = @Many(select = &quot;com.itheima.mapper.OrderMapper.findByUid&quot;))</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    List&lt;User&gt; <span class="title function_">findAllUserAndOrder</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用他的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OrderMapper</span> &#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select * from orders where uid=#&#123;uid&#125;&quot;)</span></span><br><span class="line">    List&lt;Order&gt; <span class="title function_">findByUid</span><span class="params">(<span class="type">int</span> uid)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-5-6-测试结果"><a href="#2-5-6-测试结果" class="headerlink" title="2.5.6 测试结果"></a>2.5.6 测试结果</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; all = userMapper.findAllUserAndOrder();</span><br><span class="line"><span class="keyword">for</span>(User user : all)&#123;</span><br><span class="line">    System.out.println(user.getUsername());</span><br><span class="line">    List&lt;Order&gt; orderList = user.getOrderList();</span><br><span class="line">    <span class="keyword">for</span>(Order order : orderList)&#123;</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;-----------------------------&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2017.58.49.png"></p><h3 id="2-6-多对多查询"><a href="#2-6-多对多查询" class="headerlink" title="2.6 多对多查询"></a>2.6 多对多查询</h3><h5 id="2-6-1-多对多查询的模型"><a href="#2-6-1-多对多查询的模型" class="headerlink" title="2.6.1 多对多查询的模型"></a>2.6.1 多对多查询的模型</h5><p>用户表和角色表的关系为，一个用户有多个角色，一个角色被多个用户使用</p><p>多对多查询的需求：查询用户同时查询出该用户的所有角色</p><h5 id="2-6-2-多对多查询的语句"><a href="#2-6-2-多对多查询的语句" class="headerlink" title="2.6.2 多对多查询的语句"></a>2.6.2 多对多查询的语句</h5><p>对应的sql语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> role r,user_role ur <span class="keyword">where</span> r.id<span class="operator">=</span>ur.role_id <span class="keyword">and</span> ur.user_id<span class="operator">=</span>用户的id</span><br></pre></td></tr></table></figure><h5 id="2-6-3-创建Role实体，修改User实体"><a href="#2-6-3-创建Role实体，修改User实体" class="headerlink" title="2.6.3 创建Role实体，修改User实体"></a>2.6.3 创建Role实体，修改User实体</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="comment">//代表当前用户具备哪些订单</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Order&gt; orderList;</span><br><span class="line">    <span class="comment">//代表当前用户具备哪些角色</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Role&gt; roleList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Role</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String rolename;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-6-4-添加UserMapper接口方法"><a href="#2-6-4-添加UserMapper接口方法" class="headerlink" title="2.6.4 添加UserMapper接口方法"></a>2.6.4 添加UserMapper接口方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; <span class="title function_">findAllUserAndRole</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><h5 id="2-6-5-使用注解配置Mapper"><a href="#2-6-5-使用注解配置Mapper" class="headerlink" title="2.6.5 使用注解配置Mapper"></a>2.6.5 使用注解配置Mapper</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line">    <span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">        @Result(id = true,property = &quot;id&quot;,column = &quot;id&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;username&quot;,column = &quot;username&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;password&quot;,column = &quot;password&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;birthday&quot;,column = &quot;birthday&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;roleList&quot;,column = &quot;id&quot;,</span></span><br><span class="line"><span class="meta">                javaType = List.class,</span></span><br><span class="line"><span class="meta">                many = @Many(select = &quot;com.itheima.mapper.RoleMapper.findByUid&quot;))</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line">List&lt;User&gt; <span class="title function_">findAllUserAndRole</span><span class="params">()</span>;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">RoleMapper</span> &#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select * from role r,user_role ur where r.id=ur.role_id and ur.user_id=#&#123;uid&#125;&quot;)</span></span><br><span class="line">    List&lt;Role&gt; <span class="title function_">findByUid</span><span class="params">(<span class="type">int</span> uid)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-6-6-测试结果"><a href="#2-6-6-测试结果" class="headerlink" title="2.6.6 测试结果"></a>2.6.6 测试结果</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">List&lt;User&gt; all = mapper.findAllUserAndRole();</span><br><span class="line"><span class="keyword">for</span>(User user : all)&#123;</span><br><span class="line">    System.out.println(user.getUsername());</span><br><span class="line">    List&lt;Role&gt; roleList = user.getRoleList();</span><br><span class="line">    <span class="keyword">for</span>(Role role : roleList)&#123;</span><br><span class="line">        System.out.println(role);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;----------------------------------&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-05-2018.09.44.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Mybatis多表查询&quot;&gt;&lt;a href=&quot;#1-Mybatis多表查询&quot; class=&quot;headerlink&quot; title=&quot;1.Mybatis多表查询&quot;&gt;&lt;/a&gt;1.Mybatis多表查询&lt;/h2&gt;&lt;h3 id=&quot;1-1-一对一查询&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    
    <category term="Mybatis" scheme="http://example.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis_dao层实现原理</title>
    <link href="http://example.com/2022/05/18/Mybatis-dao%E5%B1%82%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/"/>
    <id>http://example.com/2022/05/18/Mybatis-dao%E5%B1%82%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</id>
    <published>2022-05-18T06:49:33.000Z</published>
    <updated>2022-05-19T15:28:09.333Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Mybatis的Dao层实现"><a href="#1-Mybatis的Dao层实现" class="headerlink" title="1.Mybatis的Dao层实现"></a>1.Mybatis的Dao层实现</h2><h3 id="1-1-传统开发方式"><a href="#1-1-传统开发方式" class="headerlink" title="1.1 传统开发方式"></a>1.1 传统开发方式</h3><h4 id="1-1-1编写UserDao接口"><a href="#1-1-1编写UserDao接口" class="headerlink" title="1.1.1编写UserDao接口"></a>1.1.1编写UserDao接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    List&lt;User&gt; <span class="title function_">findAll</span><span class="params">()</span> <span class="keyword">throws</span> IOException;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-1-2-编写UserDaoImpl实现"><a href="#1-1-2-编写UserDaoImpl实现" class="headerlink" title="1.1.2.编写UserDaoImpl实现"></a>1.1.2.编写UserDaoImpl实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findAll</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> </span><br><span class="line">                    Resources.getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> </span><br><span class="line">                    <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">        List&lt;User&gt; userList = sqlSession.selectList(<span class="string">&quot;userMapper.findAll&quot;</span>);</span><br><span class="line">        sqlSession.close();</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-1-3-测试传统方式"><a href="#1-1-3-测试传统方式" class="headerlink" title="1.1.3 测试传统方式"></a>1.1.3 测试传统方式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testTraditionDao</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br><span class="line">    List&lt;User&gt; all = userDao.findAll();</span><br><span class="line">    System.out.println(all);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-代理开发方式"><a href="#1-2-代理开发方式" class="headerlink" title="1.2 代理开发方式"></a>1.2 代理开发方式</h3><h4 id="1-2-1-代理开发方式介绍"><a href="#1-2-1-代理开发方式介绍" class="headerlink" title="1.2.1 代理开发方式介绍"></a>1.2.1 代理开发方式介绍</h4><p>采用 Mybatis 的代理开发方式实现 DAO 层的开发，这种方式是我们后面进入企业的主流。</p><p>Mapper 接口开发方法只需要程序员编写Mapper 接口（相当于Dao 接口），由Mybatis 框架根据接口定义创建接口的动态代理对象，代理对象的方法体同上边Dao接口实现类方法。</p><p>Mapper 接口开发需要遵循以下规范：</p><p><strong>1) Mapper.xml文件中的namespace与mapper接口的全限定名相同</strong></p><p><strong>2) Mapper接口方法名和Mapper.xml中定义的每个statement的id相同</strong></p><p><strong>3) Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql的parameterType的类型相同</strong></p><p><strong>4) Mapper接口方法的输出参数类型和mapper.xml中定义的每个sql的resultType的类型相同</strong></p><h4 id="1-2-2-编写UserMapper接口"><a href="#1-2-2-编写UserMapper接口" class="headerlink" title="1.2.2 编写UserMapper接口"></a>1.2.2 编写UserMapper接口</h4><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE1.png"></p><h4 id="1-2-3测试代理方式"><a href="#1-2-3测试代理方式" class="headerlink" title="1.2.3测试代理方式"></a>1.2.3测试代理方式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testProxyDao</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line">    <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">    <span class="comment">//获得MyBatis框架生成的UserMapper接口的实现类</span></span><br><span class="line">  <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);<span class="comment">//输入接口类型</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.findById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-知识小结"><a href="#1-3-知识小结" class="headerlink" title="1.3 知识小结"></a>1.3 知识小结</h4><p>MyBatis的Dao层实现的两种方式：</p><p>手动对Dao进行实现：传统开发方式</p><p><strong>代理方式对Dao进行实现：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br></pre></td></tr></table></figure><h2 id="2-MyBatis映射文件深入"><a href="#2-MyBatis映射文件深入" class="headerlink" title="2.MyBatis映射文件深入"></a>2.MyBatis映射文件深入</h2><h3 id="2-1-动态sql语句"><a href="#2-1-动态sql语句" class="headerlink" title="2.1 动态sql语句"></a>2.1 动态sql语句</h3><h4 id="2-1-1动态sql语句概述"><a href="#2-1-1动态sql语句概述" class="headerlink" title="2.1.1动态sql语句概述"></a>2.1.1动态sql语句概述</h4><p>Mybatis 的映射文件中，前面我们的 SQL 都是比较简单的，有些时候业务逻辑复杂时，我们的 SQL是动态变化的，此时在前面的学习中我们的 SQL 就不能满足要求了。</p><p>参考的官方文档，描述如下：</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E5%9B%BE%E7%89%872.png"></p><h4 id="2-1-2动态-SQL-之-lt-if-gt"><a href="#2-1-2动态-SQL-之-lt-if-gt" class="headerlink" title="2.1.2动态 SQL  之&lt;if&gt;"></a>2.1.2动态 SQL  之&lt;<strong>if&gt;</strong></h4><p>我们根据实体类的不同取值，使用不同的 SQL语句来进行查询。比如在 id如果不为空时可以根据id查询，如果username 不同空时还要加入用户名作为条件。这种情况在我们的多条件组合查询中经常会碰到。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findByCondition&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;user&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    select * from User</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span>//where相当于1=1的条件</span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;id!=0&quot;</span>&gt;</span></span><br><span class="line">            and id=#&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;username!=null&quot;</span>&gt;</span></span><br><span class="line">            and username=#&#123;username&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当查询条件id和username都存在时，控制台打印的sql语句如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获得MyBatis框架生成的UserMapper接口的实现类</span></span><br><span class="line"><span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">  <span class="type">User</span> <span class="variable">condition</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">  condition.setId(<span class="number">1</span>);</span><br><span class="line">  condition.setUsername(<span class="string">&quot;lucy&quot;</span>);</span><br><span class="line">  <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.findByCondition(condition);</span><br></pre></td></tr></table></figure><p>![](<a href="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F">https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/截屏</a> 3.png)</p><p>当查询条件只有id存在时，控制台打印的sql语句如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获得MyBatis框架生成的UserMapper接口的实现类</span></span><br><span class="line"><span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line"><span class="type">User</span> <span class="variable">condition</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">condition.setId(<span class="number">1</span>);</span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.findByCondition(condition);</span><br></pre></td></tr></table></figure><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F_4.png"></p><h4 id="2-1-3-动态-SQL-之-lt-foreach-gt"><a href="#2-1-3-动态-SQL-之-lt-foreach-gt" class="headerlink" title="2.1.3 动态 SQL  之&lt;foreach&gt;"></a>2.1.3 动态 SQL  之&lt;<strong>foreach&gt;</strong></h4><p>循环执行sql的拼接操作，例如：SELECT * FROM USER WHERE id IN (1,2,5)。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findByIds&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;list&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    select * from User</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;array&quot;</span> <span class="attr">open</span>=<span class="string">&quot;id in(&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试代码片段如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//获得MyBatis框架生成的UserMapper接口的实现类</span></span><br><span class="line"><span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line"><span class="type">int</span>[] ids = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">2</span>,<span class="number">5</span>&#125;;</span><br><span class="line">List&lt;User&gt; userList = userMapper.findByIds(ids);</span><br><span class="line">System.out.println(userList);</span><br></pre></td></tr></table></figure><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F_5.png"></p><p>foreach标签的属性含义如下：</p><p>&lt;foreach&gt;标签用于遍历集合，它的属性：</p><p>•collection：代表要遍历的集合元素，注意编写时不要写#{}</p><p>•open：代表语句的开始部分</p><p>•close：代表结束部分</p><p>•item：代表遍历集合的每个元素，生成的变量名</p><p>•sperator：代表分隔符</p><h4 id="2-2-SQL片段抽取"><a href="#2-2-SQL片段抽取" class="headerlink" title="2.2 SQL片段抽取"></a>2.2 SQL片段抽取</h4><p>Sql 中可将重复的 sql 提取出来，使用时用 include 引用即可，最终达到 sql 重用的目的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--抽取sql片段简化编写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;selectUser&quot;</span> <span class="attr">select</span> * <span class="attr">from</span> <span class="attr">User</span>&lt;/<span class="attr">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;selectUser&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span> where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findByIds&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;list&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;selectUser&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;array&quot;</span> <span class="attr">open</span>=<span class="string">&quot;id in(&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-3-知识小结"><a href="#2-3-知识小结" class="headerlink" title="2.3 知识小结"></a>2.3 知识小结</h4><p>MyBatis映射文件配置：</p><p>&lt;select&gt;：查询</p><p>&lt;insert&gt;：插入</p><p>&lt;update&gt;：修改</p><p>&lt;delete&gt;：删除</p><p>&lt;where&gt;：where条件</p><p>&lt;if&gt;：if判断</p><p>&lt;foreach&gt;：循环</p><p>&lt;sql&gt;：sql片段抽取</p><h2 id="3-MyBatis核心配置文件深入"><a href="#3-MyBatis核心配置文件深入" class="headerlink" title="3.MyBatis核心配置文件深入"></a>3.MyBatis核心配置文件深入</h2><h3 id="3-1typeHandlers标签"><a href="#3-1typeHandlers标签" class="headerlink" title="3.1typeHandlers标签"></a>3.1typeHandlers标签</h3><p>无论是 MyBatis 在预处理语句（PreparedStatement）中设置一个参数时，还是从结果集中取出一个值时， 都会用类型处理器将获取的值以合适的方式转换成 Java 类型。下表描述了一些默认的类型处理器（截取部分）。</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/%E6%88%AA%E5%B1%8F_6.png"></p><p>你可以重写类型处理器或创建你自己的类型处理器来处理不支持的或非标准的类型。具体做法为：实现 org.apache.ibatis.type.TypeHandler 接口， 或继承一个很便利的类 org.apache.ibatis.type.BaseTypeHandler， 然后可以选择性地将它映射到一个JDBC类型。例如需求：一个Java中的Date数据类型，我想将之存到数据库的时候存成一个1970年至今的毫秒数，取出来时转换成java的Date，即java的Date与数据库的varchar毫秒值之间转换。</p><p><strong>开发步骤：</strong></p><p>①定义转换类继承类BaseTypeHandler&lt;T&gt;</p><p>②覆盖4个未实现的方法，其中setNonNullParameter为java程序设置数据到数据库的回调方法，getNullableResult为查询时 mysql的字符串类型转换成 java的Type类型的方法</p><p>③在MyBatis核心配置文件中进行注册</p><p>测试转换是否正确</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyDateTypeHandler</span> <span class="keyword">extends</span> <span class="title class_">BaseTypeHandler</span>&lt;Date&gt; &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNonNullParameter</span><span class="params">(PreparedStatement preparedStatement, <span class="type">int</span> i, Date date, JdbcType type)</span> &#123;</span><br><span class="line">        preparedStatement.setString(i,date.getTime()+<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getNullableResult</span><span class="params">(ResultSet resultSet, String s)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Date</span>(resultSet.getLong(s));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getNullableResult</span><span class="params">(ResultSet resultSet, <span class="type">int</span> i)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Date</span>(resultSet.getLong(i));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getNullableResult</span><span class="params">(CallableStatement callableStatement, <span class="type">int</span> i)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="keyword">return</span> callableStatement.getDate(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//在核心配置文件中</span><br><span class="line"><span class="comment">&lt;!--注册类型自定义转换器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeHandlers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeHandler</span> <span class="attr">handler</span>=<span class="string">&quot;com.itheima.typeHandlers.MyDateTypeHandler&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">typeHandler</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeHandlers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>数据库中添加一列数据</p><p>剩下没什么不同</p><h3 id="3-2-plugins标签"><a href="#3-2-plugins标签" class="headerlink" title="3.2 plugins标签"></a>3.2 plugins标签</h3><p>MyBatis可以使用第三方的插件来对功能进行扩展，分页助手PageHelper是将分页的复杂操作进行封装，使用简单的方式即可获得分页的相关数据</p><p>开发步骤：</p><p>①导入通用PageHelper的坐标</p><p>②在mybatis核心配置文件中配置PageHelper插件</p><p>③测试分页数据获取</p><p>先要设置一个查询全部的方法findAll() 在使用findAll()方法前使用plugins设置</p><h5 id="①导入通用PageHelper坐标"><a href="#①导入通用PageHelper坐标" class="headerlink" title="①导入通用PageHelper坐标"></a>①导入通用PageHelper坐标</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 分页助手 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.7.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.jsqlparser<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsqlparser<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="②在mybatis核心配置文件中配置PageHelper插件"><a href="#②在mybatis核心配置文件中配置PageHelper插件" class="headerlink" title="②在mybatis核心配置文件中配置PageHelper插件"></a>②在mybatis核心配置文件中配置PageHelper插件</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注意：分页助手的插件  配置在通用馆mapper之前 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.github.pagehelper.PageHelper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定方言 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dialect&quot;</span> <span class="attr">value</span>=<span class="string">&quot;mysql&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="③测试分页代码实现"><a href="#③测试分页代码实现" class="headerlink" title="③测试分页代码实现"></a>③测试分页代码实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPageHelper</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//设置分页参数</span></span><br><span class="line">    PageHelper.startPage(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; select = userMapper2.select(<span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">for</span>(User user : select)&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>获得分页相关的其他参数</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//其他分页的数据</span></span><br><span class="line">PageInfo&lt;User&gt; pageInfo = <span class="keyword">new</span> <span class="title class_">PageInfo</span>&lt;User&gt;(select);</span><br><span class="line">System.out.println(<span class="string">&quot;总条数：&quot;</span>+pageInfo.getTotal());</span><br><span class="line">System.out.println(<span class="string">&quot;总页数：&quot;</span>+pageInfo.getPages());</span><br><span class="line">System.out.println(<span class="string">&quot;当前页：&quot;</span>+pageInfo.getPageNum());</span><br><span class="line">System.out.println(<span class="string">&quot;每页显示长度：&quot;</span>+pageInfo.getPageSize());</span><br><span class="line">System.out.println(<span class="string">&quot;是否第一页：&quot;</span>+pageInfo.isIsFirstPage());</span><br><span class="line">System.out.println(<span class="string">&quot;是否最后一页：&quot;</span>+pageInfo.isIsLastPage());</span><br></pre></td></tr></table></figure><h3 id="3-3-知识小结"><a href="#3-3-知识小结" class="headerlink" title="3.3 知识小结"></a>3.3 知识小结</h3><p>MyBatis核心配置文件常用标签：</p><p>1、properties标签：该标签可以加载外部的properties文件</p><p>2、typeAliases标签：设置类型别名</p><p>3、environments标签：数据源环境配置标签</p><p>4、typeHandlers标签：配置自定义类型处理器</p><p>5、plugins标签：配置MyBatis的插件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Mybatis的Dao层实现&quot;&gt;&lt;a href=&quot;#1-Mybatis的Dao层实现&quot; class=&quot;headerlink&quot; title=&quot;1.Mybatis的Dao层实现&quot;&gt;&lt;/a&gt;1.Mybatis的Dao层实现&lt;/h2&gt;&lt;h3 id=&quot;1-1-传统开发方</summary>
      
    
    
    
    
    <category term="Mybatis" scheme="http://example.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis入门</title>
    <link href="http://example.com/2022/05/17/Mybatis%E5%85%A5%E9%97%A8/"/>
    <id>http://example.com/2022/05/17/Mybatis%E5%85%A5%E9%97%A8/</id>
    <published>2022-05-17T04:40:06.000Z</published>
    <updated>2022-05-18T11:00:17.116Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Mybatis简介"><a href="#1-Mybatis简介" class="headerlink" title="1.Mybatis简介"></a>1.Mybatis简介</h2><h3 id="1-1原始jdbc操作（查询数据）"><a href="#1-1原始jdbc操作（查询数据）" class="headerlink" title="1.1原始jdbc操作（查询数据）"></a>1.1原始jdbc操作（查询数据）</h3><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/1.png"></p><h3 id="1-2原始jdbc操作（插入数据）"><a href="#1-2原始jdbc操作（插入数据）" class="headerlink" title="1.2原始jdbc操作（插入数据）"></a>1.2原始jdbc操作（插入数据）</h3><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/2.png"></p><h3 id="1-3-原始jdbc操作的分析"><a href="#1-3-原始jdbc操作的分析" class="headerlink" title="1.3 原始jdbc操作的分析"></a>1.3 原始jdbc操作的分析</h3><p>原始jdbc开发存在的问题如下：</p><p>①数据库连接创建、释放频繁造成系统资源浪费从而影响系统性能</p><p>②sql 语句在代码中硬编码，造成代码不易维护，实际应用 sql 变化的可能较大，sql 变动需要改变java代码。</p><p>③查询操作时，需要手动将结果集中的数据手动封装到实体中。插入操作时，需要手动将实体的数据设置到sql语句的占位符位置</p><p>应对上述问题给出的解决方案：</p><p>①使用数据库连接池初始化连接资源</p><p>②将sql语句抽取到xml配置文件中</p><p>③使用反射、内省等底层技术，自动将实体与表进行属性与字段的自动映射</p><h3 id="1-4-什么是Mybatis-dao层框架"><a href="#1-4-什么是Mybatis-dao层框架" class="headerlink" title="1.4 什么是Mybatis(dao层框架)"></a>1.4 什么是Mybatis(dao层框架)</h3><p>mybatis 是一个优秀的基于<strong>java的持久层框架</strong>，它内部封装了jdbc，使开发者只需要关注sql语句本身，而不需要花费精力去处理加载驱动、创建连接、创建statement等繁杂的过程。</p><p>mybatis通过xml或注解的方式将要执行的各种 statement配置起来，并通过java对象和statement中sql的动态参数进行映射生成最终执行的sql语句。</p><p>最后mybatis框架执行sql并将结果映射为java对象并返回。采用ORM思想解决了实体和数据库映射的问题，对jdbc 进行了封装，<strong>屏蔽了jdbc api 底层访问细节</strong> ，使我们不用与jdbc api 打交道，就可以完成对数据库的持久化操作。</p><h2 id="2-Mybatis的快速入门"><a href="#2-Mybatis的快速入门" class="headerlink" title="2.Mybatis的快速入门"></a>2.Mybatis的快速入门</h2><h3 id="2-1-MyBatis开发步骤"><a href="#2-1-MyBatis开发步骤" class="headerlink" title="2.1 MyBatis开发步骤"></a>2.1 MyBatis开发步骤</h3><p>MyBatis官网地址：<a href="http://www.mybatis.org/mybatis-3/">http://www.mybatis.org/mybatis-3/</a> </p><p><strong>MyBatis开发步骤：</strong></p><p>①添加MyBatis的坐标</p><p>②创建user数据表</p><p>③编写User实体类 </p><p>④编写映射文件UserMapper.xml</p><p>⑤编写核心文件SqlMapConfig.xml</p><p>⑥编写测试类</p><h3 id="2-2-环境搭建"><a href="#2-2-环境搭建" class="headerlink" title="2.2 环境搭建"></a>2.2 环境搭建</h3><ol><li>导入MyBatis的坐标和其他相关坐标</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis坐标--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--mysql驱动坐标--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--单元测试坐标--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--日志坐标--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>创建user数据表</li><li>编写User实体</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;    </span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> id;    </span><br><span class="line"><span class="keyword">private</span> String username;    </span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line">    <span class="comment">//省略get个set方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>编写UserMapper映射文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span>        </span></span><br><span class="line"><span class="meta"><span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>        </span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;userMapper&quot;</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.itheima.domain.User&quot;</span>&gt;</span>        </span><br><span class="line">select * from User    </span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>编写MyBatis核心文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN“ &quot;</span>http://mybatis.org/dtd/mybatis-3-config.dtd<span class="string">&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;configuration&gt;    </span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;environments default=&quot;</span>development<span class="string">&quot;&gt;//默认使用环境        </span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;environment id=&quot;</span>development<span class="string">&quot;&gt;//环境之一            </span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;transactionManager type=&quot;</span>JDBC<span class="string">&quot;/&gt;//事物管理器           </span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;dataSource type=&quot;</span>POOLED<span class="string">&quot;&gt;                </span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;property name=&quot;</span>driver<span class="string">&quot; value=&quot;</span>com.mysql.jdbc.Driver<span class="string">&quot;/&gt;</span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;property name=&quot;</span>url<span class="string">&quot; value=&quot;</span>jdbc:mysql:///test<span class="string">&quot;/&gt;                </span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;property name=&quot;</span>username<span class="string">&quot; value=&quot;</span>root<span class="string">&quot;/&gt;</span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;property name=&quot;</span>password<span class="string">&quot; value=&quot;</span>root<span class="string">&quot;/&gt;            </span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;/dataSource&gt;        </span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;/environment&gt;    </span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;/environments&gt;    </span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">  &lt;!--加载映射文件--&gt;</span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;mappers&gt; </span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;mapper resource=&quot;</span>com/itheima/mapper/UserMapper.xml<span class="string">&quot;/&gt; </span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;/mappers&gt;</span></span></span><br><span class="line"><span class="string"><span class="meta">&lt;/configuration&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="2-3-编写测试代码"><a href="#2-3-编写测试代码" class="headerlink" title="2.3 编写测试代码"></a>2.3 编写测试代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载核心配置文件</span></span><br><span class="line"><span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line"><span class="comment">//获得sqlSession工厂对象</span></span><br><span class="line"><span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span>            </span><br><span class="line">                           <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line"><span class="comment">//获得sqlSession对象</span></span><br><span class="line"><span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line"><span class="comment">//执行sql语句</span></span><br><span class="line">List&lt;User&gt; userList = sqlSession.selectList(<span class="string">&quot;userMapper.findAll&quot;</span>);</span><br><span class="line"><span class="comment">//打印结果</span></span><br><span class="line">System.out.println(userList);</span><br><span class="line"><span class="comment">//释放资源</span></span><br><span class="line">sqlSession.close();</span><br></pre></td></tr></table></figure><h3 id="2-4-知识小结"><a href="#2-4-知识小结" class="headerlink" title="2.4 知识小结"></a>2.4 知识小结</h3><p><strong>MyBatis开发步骤：</strong></p><p>①添加MyBatis的坐标</p><p>②创建user数据表</p><p>③编写User实体类 </p><p>④编写映射文件UserMapper.xml(主要描述sql语句)</p><p>⑤编写核心文件SqlMapConfig.xml</p><p>⑥编写测试类</p><h2 id="3-MyBatis的映射文件概述"><a href="#3-MyBatis的映射文件概述" class="headerlink" title="3. MyBatis的映射文件概述"></a>3. MyBatis的映射文件概述</h2><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/3.png"></p><h2 id="4-MyBatis的增删改查操作"><a href="#4-MyBatis的增删改查操作" class="headerlink" title="4. MyBatis的增删改查操作"></a>4. MyBatis的增删改查操作</h2><h3 id="4-1-MyBatis的插入数据操作"><a href="#4-1-MyBatis的插入数据操作" class="headerlink" title="4.1 MyBatis的插入数据操作"></a>4.1 MyBatis的插入数据操作</h3><ol><li><h4 id="编写UserMapper映射文件"><a href="#编写UserMapper映射文件" class="headerlink" title="编写UserMapper映射文件"></a>编写UserMapper映射文件</h4></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;userMapper&quot;</span>&gt;</span>//需输入的类型    </span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;add&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.itheima.domain.User&quot;</span>&gt;</span>        </span><br><span class="line">insert into user values(#&#123;id&#125;,#&#123;username&#125;,#&#123;password&#125;)    </span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><h4 id="编写插入实体User的代码"><a href="#编写插入实体User的代码" class="headerlink" title="编写插入实体User的代码"></a>编写插入实体User的代码</h4></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line"><span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> </span><br><span class="line">                        <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line"><span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line"><span class="type">int</span> <span class="variable">insert</span> <span class="operator">=</span> sqlSession.insert(<span class="string">&quot;userMapper.add&quot;</span>, user);</span><br><span class="line">System.out.println(insert);</span><br><span class="line"><span class="comment">//提交事务 mybatis默认事物不提交</span></span><br><span class="line">sqlSession.commit();</span><br><span class="line">sqlSession.close();</span><br></pre></td></tr></table></figure><ol start="3"><li><h4 id="插入操作注意问题"><a href="#插入操作注意问题" class="headerlink" title="插入操作注意问题"></a>插入操作注意问题</h4></li></ol><p>• 插入语句使用insert标签</p><p>• 在映射文件中使用parameterType属性指定要插入的数据类型</p><p>•Sql语句中使用#{实体属性名}方式引用实体中的属性值</p><p>•插入操作使用的API是sqlSession.insert(“命名空间.id”,实体对象);</p><p>•插入操作涉及数据库数据变化，所以要使用sqlSession对象显示的提交事务，即sqlSession.commit() </p><h3 id="4-2-MyBatis的修改数据操作"><a href="#4-2-MyBatis的修改数据操作" class="headerlink" title="4.2 MyBatis的修改数据操作"></a>4.2 MyBatis的修改数据操作</h3><ol><li><h4 id="编写UserMapper映射文件-1"><a href="#编写UserMapper映射文件-1" class="headerlink" title="编写UserMapper映射文件"></a>编写UserMapper映射文件</h4></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;userMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.itheima.domain.User&quot;</span>&gt;</span></span><br><span class="line">        update user set username=#&#123;username&#125;,password=#&#123;password&#125; where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><h4 id="编写修改实体User的代码"><a href="#编写修改实体User的代码" class="headerlink" title="编写修改实体User的代码"></a>编写修改实体User的代码</h4></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line"></span><br><span class="line"><span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">update</span> <span class="operator">=</span> sqlSession.update(<span class="string">&quot;userMapper.update&quot;</span>, user);</span><br><span class="line">System.out.println(update);</span><br><span class="line">sqlSession.commit();</span><br><span class="line">sqlSession.close();</span><br></pre></td></tr></table></figure><ol start="3"><li><h4 id="修改操作注意问题"><a href="#修改操作注意问题" class="headerlink" title="修改操作注意问题"></a>修改操作注意问题</h4></li></ol><p>• 修改语句使用update标签</p><p>• 修改操作使用的API是sqlSession.update(“命名空间.id”,实体对象);</p><h3 id="4-3-MyBatis的删除数据操作"><a href="#4-3-MyBatis的删除数据操作" class="headerlink" title="4.3 MyBatis的删除数据操作"></a>4.3 MyBatis的删除数据操作</h3><ol><li><h4 id="编写UserMapper映射文件-2"><a href="#编写UserMapper映射文件-2" class="headerlink" title="编写UserMapper映射文件"></a>编写UserMapper映射文件</h4></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;userMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;delete&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.Integer&quot;</span>&gt;</span></span><br><span class="line">        delete from user where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line">//当你传type为一个参数且为简单类型 #写什么都行</span><br></pre></td></tr></table></figure><ol start="2"><li><h4 id="编写删除数据的代码"><a href="#编写删除数据的代码" class="headerlink" title="编写删除数据的代码"></a>编写删除数据的代码</h4></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;SqlMapConfig.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line"></span><br><span class="line"><span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">delete</span> <span class="operator">=</span> sqlSession.delete(<span class="string">&quot;userMapper.delete&quot;</span>,<span class="number">3</span>);</span><br><span class="line">System.out.println(delete);</span><br><span class="line">sqlSession.commit();</span><br><span class="line">sqlSession.close();</span><br></pre></td></tr></table></figure><ol start="3"><li><h4 id="删除操作注意问题"><a href="#删除操作注意问题" class="headerlink" title="删除操作注意问题"></a>删除操作注意问题</h4></li></ol><p>• 删除语句使用delete标签</p><p>•Sql语句中使用#{任意字符串}方式引用传递的单个参数</p><p>•删除操作使用的API是sqlSession.delete(“命名空间.id”,Object);</p><h3 id="4-4-知识小结"><a href="#4-4-知识小结" class="headerlink" title="4.4 知识小结"></a>4.4 知识小结</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">增删改查映射配置与API：</span><br><span class="line">查询数据： </span><br><span class="line">  List&lt;User&gt; userList = sqlSession.selectList(<span class="string">&quot;userMapper.findAll&quot;</span>);</span><br><span class="line">    &lt;select id=<span class="string">&quot;findAll&quot;</span> resultType=<span class="string">&quot;com.itheima.domain.User&quot;</span>&gt;</span><br><span class="line">        select * from User</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">      </span><br><span class="line">添加数据： </span><br><span class="line">      sqlSession.insert(<span class="string">&quot;userMapper.add&quot;</span>, user);</span><br><span class="line">    &lt;insert id=<span class="string">&quot;add&quot;</span> parameterType=<span class="string">&quot;com.itheima.domain.User&quot;</span>&gt;</span><br><span class="line">        insert into user <span class="title function_">values</span><span class="params">(#&#123;id&#125;,#&#123;username&#125;,#&#123;password&#125;)</span></span><br><span class="line">    &lt;/insert&gt;</span><br><span class="line">      </span><br><span class="line">修改数据： </span><br><span class="line">      sqlSession.update(<span class="string">&quot;userMapper.update&quot;</span>, user);</span><br><span class="line">    &lt;update id=<span class="string">&quot;update&quot;</span> parameterType=<span class="string">&quot;com.itheima.domain.User&quot;</span>&gt;</span><br><span class="line">        update user set username=#&#123;username&#125;,password=#&#123;password&#125; where id=#&#123;id&#125;</span><br><span class="line">    &lt;/update&gt;</span><br><span class="line">      </span><br><span class="line">删除数据：</span><br><span class="line">      sqlSession.delete(<span class="string">&quot;userMapper.delete&quot;</span>,<span class="number">3</span>);</span><br><span class="line">    &lt;delete id=<span class="string">&quot;delete&quot;</span> parameterType=<span class="string">&quot;java.lang.Integer&quot;</span>&gt;</span><br><span class="line">        delete from user where id=#&#123;id&#125;</span><br><span class="line">    &lt;/delete&gt;</span><br></pre></td></tr></table></figure><h2 id="5-MyBatis核心配置文件概述"><a href="#5-MyBatis核心配置文件概述" class="headerlink" title="5. MyBatis核心配置文件概述"></a>5. MyBatis核心配置文件概述</h2><h3 id="5-1-MyBatis核心配置文件层级关系"><a href="#5-1-MyBatis核心配置文件层级关系" class="headerlink" title="5.1 MyBatis核心配置文件层级关系"></a>5.1 MyBatis核心配置文件层级关系</h3><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/4.png"></p><h3 id="5-2-MyBatis常用配置解析"><a href="#5-2-MyBatis常用配置解析" class="headerlink" title="5.2 MyBatis常用配置解析"></a>5.2 MyBatis常用配置解析</h3><ol><li><h4 id="environments标签"><a href="#environments标签" class="headerlink" title="environments标签"></a>environments标签</h4></li></ol><p>数据库环境的配置，支持多环境配置</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/5.png"></p><p>其中，事务管理器（transactionManager）类型有两种：</p><p>•JDBC：这个配置就是直接使用了JDBC 的提交和回滚设置，它依赖于从数据源得到的连接来管理事务作用域。</p><p>•MANAGED：这个配置几乎没做什么。它从来不提交或回滚一个连接，而是让容器来管理事务的整个生命周期（比如 JEE 应用服务器的上下文）。 默认情况下它会关闭连接，然而一些容器并不希望这样，因此需要将 closeConnection 属性设置为 false 来阻止它默认的关闭行为。</p><p>其中，数据源（dataSource）类型有三种：</p><p>•UNPOOLED：这个数据源的实现只是每次被请求时打开和关闭连接。</p><p>•POOLED：这种数据源的实现利用“池”的概念将 JDBC 连接对象组织起来。</p><p>•JNDI：这个数据源的实现是为了能在如 EJB 或应用服务器这类容器中使用，容器可以集中或在外部配置数据源，然后放置一个 JNDI 上下文的引用。</p><ol start="2"><li><h4 id="mapper标签"><a href="#mapper标签" class="headerlink" title="mapper标签"></a>mapper标签</h4></li></ol><p>该标签的作用是加载映射的，加载方式有如下几种：</p><p>•使用相对于类路径的资源引用，例如：</p><p>&lt;mapper resource&#x3D;”org&#x2F;mybatis&#x2F;builder&#x2F;AuthorMapper.xml”&#x2F;&gt;</p><p>•使用完全限定资源定位符（URL），例如：</p><p>&lt;mapper url&#x3D;”file:&#x2F;&#x2F;&#x2F;var&#x2F;mappers&#x2F;AuthorMapper.xml”&#x2F;&gt;</p><p>•使用映射器接口实现类的完全限定类名，例如：</p><p>&lt;mapper class&#x3D;”org.mybatis.builder.AuthorMapper”&#x2F;&gt;</p><p>•将包内的映射器接口实现全部注册为映射器，例如：</p><p>&lt;package name&#x3D;”org.mybatis.builder”&#x2F;&gt;</p><ol start="3"><li><h4 id="Properties标签"><a href="#Properties标签" class="headerlink" title="Properties标签"></a>Properties标签</h4></li></ol><p>实际开发中，习惯将数据源的配置信息单独抽取成一个properties文件，该标签可以加载额外配置的properties文件</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/6.png"></p><ol start="4"><li><h4 id="typeAliases标签"><a href="#typeAliases标签" class="headerlink" title="typeAliases标签"></a>typeAliases标签</h4></li></ol><p>类型别名是为Java 类型设置一个短的名字。</p><p>配置typeAliases，为com.itheima.domain.User定义别名为user</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/7.png"></p><p>上面我们是自定义的别名，mybatis框架已经为我们设置好的一些常用的类型的别名</p><table><thead><tr><th>别名</th><th>数据类型</th></tr></thead><tbody><tr><td>string</td><td>String</td></tr><tr><td>long</td><td>Long</td></tr><tr><td>int</td><td>Integer</td></tr><tr><td>double</td><td>Double</td></tr><tr><td>boolean</td><td>Boolean</td></tr></tbody></table><h3 id="5-3-知识小结"><a href="#5-3-知识小结" class="headerlink" title="5.3 知识小结"></a>5.3 知识小结</h3><p><strong>核心配置文件常用配置：</strong></p><p>properties标签：该标签可以加载外部的properties文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;jdbc.properties&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><p>typeAliases标签：设置类型别名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.itheima.domain.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;user&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">typeAlias</span>&gt;</span></span><br></pre></td></tr></table></figure><p>mappers标签：加载映射配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/itheima/mapper/UserMapping.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>environments标签：数据源环境配置标签</p><p><img src="https://mhypicgo.oss-cn-beijing.aliyuncs.com/img/8.png"></p><h2 id="6-MyBatis相应API"><a href="#6-MyBatis相应API" class="headerlink" title="6.MyBatis相应API"></a>6.MyBatis相应API</h2><h3 id="6-1-SqlSession工厂构建器SqlSessionFactoryBuilder"><a href="#6-1-SqlSession工厂构建器SqlSessionFactoryBuilder" class="headerlink" title="6.1 SqlSession工厂构建器SqlSessionFactoryBuilder"></a>6.1 SqlSession工厂构建器SqlSessionFactoryBuilder</h3><p>常用API：SqlSessionFactory  build(InputStream inputStream)</p><p>通过加载mybatis的核心文件的输入流的形式构建一个SqlSessionFactory对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;org/mybatis/builder/mybatis-config.xml&quot;</span>; </span><br><span class="line"><span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource); </span><br><span class="line"><span class="type">SqlSessionFactoryBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>(); </span><br><span class="line"><span class="type">SqlSessionFactory</span> <span class="variable">factory</span> <span class="operator">=</span> builder.build(inputStream);</span><br></pre></td></tr></table></figure><p>其中， Resources 工具类，这个类在 org.apache.ibatis.io 包中。Resources 类帮助你从类路径下、文件系统或一个 web URL 中加载资源文件。</p><h3 id="6-2-SqlSession工厂对象SqlSessionFactory"><a href="#6-2-SqlSession工厂对象SqlSessionFactory" class="headerlink" title="6.2 SqlSession工厂对象SqlSessionFactory"></a>6.2 SqlSession工厂对象SqlSessionFactory</h3><p>SqlSessionFactory 有多个个方法创建SqlSession 实例。常用的有如下两个：</p><table><thead><tr><th>方法</th><th>解释</th></tr></thead><tbody><tr><td>openSession()</td><td>会默认开启一个事物，但事物不会自动提交，需要手动提交，更新操作才会持久化到数据库中</td></tr><tr><td>openSession(boolean autoCommit)</td><td>参数为是否自动提交，如果设置为true，那么不需要手动提交事物</td></tr></tbody></table><h3 id="6-3-SqlSession会话对象"><a href="#6-3-SqlSession会话对象" class="headerlink" title="6.3 SqlSession会话对象"></a>6.3 SqlSession会话对象</h3><p>SqlSession 实例在 MyBatis 中是非常强大的一个类。在这里你会看到所有执行语句、提交或回滚事务和获取映射器实例的方法。</p><p>执行语句的方法主要有：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;T&gt; T <span class="title function_">selectOne</span><span class="params">(String statement, Object parameter)</span> </span><br><span class="line">&lt;E&gt; List&lt;E&gt; <span class="title function_">selectList</span><span class="params">(String statement, Object parameter)</span> </span><br><span class="line"><span class="type">int</span> <span class="title function_">insert</span><span class="params">(String statement, Object parameter)</span> </span><br><span class="line"><span class="type">int</span> <span class="title function_">update</span><span class="params">(String statement, Object parameter)</span> </span><br><span class="line"><span class="type">int</span> <span class="title function_">delete</span><span class="params">(String statement, Object parameter)</span></span><br></pre></td></tr></table></figure><p>操作事务的方法主要有：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">commit</span><span class="params">()</span>  </span><br><span class="line"><span class="keyword">void</span> <span class="title function_">rollback</span><span class="params">()</span> </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Mybatis简介&quot;&gt;&lt;a href=&quot;#1-Mybatis简介&quot; class=&quot;headerlink&quot; title=&quot;1.Mybatis简介&quot;&gt;&lt;/a&gt;1.Mybatis简介&lt;/h2&gt;&lt;h3 id=&quot;1-1原始jdbc操作（查询数据）&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    
    <category term="Mybatis" scheme="http://example.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Type &#39;java.awt.List&#39; does not have type parameters</title>
    <link href="http://example.com/2022/05/13/Type-java-awt-List-does-not-have-type-parameters/"/>
    <id>http://example.com/2022/05/13/Type-java-awt-List-does-not-have-type-parameters/</id>
    <published>2022-05-13T09:06:08.000Z</published>
    <updated>2022-05-13T09:23:48.485Z</updated>
    
    <content type="html"><![CDATA[<p>在写Spring案例中</p><p>写service层时</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;Role&gt; <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Role&gt; roleList = roleDao.findAll();<span class="comment">//出现错误</span></span><br><span class="line">        <span class="keyword">return</span> roleList;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>出现错误</p><h4 id="Type-‘java-awt-List’-does-not-have-type-parameters"><a href="#Type-‘java-awt-List’-does-not-have-type-parameters" class="headerlink" title="Type ‘java.awt.List’ does not have type parameters"></a>Type ‘java.awt.List’ does not have type parameters</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Role&gt; roleList = roleDao.findAll();</span><br></pre></td></tr></table></figure><p>在使用 List 类的时候会报一个错误，如上所示，这个错误是因为导错了包，将</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.List;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span><br></pre></td></tr></table></figure><p>但改完后 有出现错误</p><h4 id="Incompatible-types-Found-‘java-awt-List-lt-com-itheima-domain-Role-gt-’-required-‘java-util-List-lt-com-itheima-domain-Role-gt-’"><a href="#Incompatible-types-Found-‘java-awt-List-lt-com-itheima-domain-Role-gt-’-required-‘java-util-List-lt-com-itheima-domain-Role-gt-’" class="headerlink" title="Incompatible types. Found: ‘java.awt.List&lt;com.itheima.domain.Role&gt;’, required: ‘java.util.List&lt;com.itheima.domain.Role&gt;’"></a>Incompatible types. Found: ‘java.awt.List&lt;com.itheima.domain.Role&gt;’, required: ‘java.util.List&lt;com.itheima.domain.Role&gt;’</h4><p>可推断出是由类型不匹配导致，idea用强转可以解决问题</p><p>最后发现是相关返回没有修改</p><p>仔细修改相关返回</p><h2 id="知识扩展"><a href="#知识扩展" class="headerlink" title="知识扩展"></a>知识扩展</h2><h4 id="java-util-List-与-java-awt-List-的区别"><a href="#java-util-List-与-java-awt-List-的区别" class="headerlink" title="java.util.List;与 java.awt.List; 的区别"></a>java.util.List;与 java.awt.List; 的区别</h4><ol><li>java.util.*与java.awt.<em>都是java的标准库包，其中</em>表示java.util和java.awt包里的所有类。</li><li>java.util.*包含的是一些工具类，如集合类中List、Map、HashMap、Set等.</li><li>java.awt .*则封装的是和图形绘制相关的类，如点Point、线Line等。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在写Spring案例中&lt;/p&gt;
&lt;p&gt;写service层时&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span </summary>
      
    
    
    
    
    <category term="经验" scheme="http://example.com/tags/%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>Spring案例</title>
    <link href="http://example.com/2022/05/13/Spring%E6%A1%88%E4%BE%8B/"/>
    <id>http://example.com/2022/05/13/Spring%E6%A1%88%E4%BE%8B/</id>
    <published>2022-05-13T02:35:44.000Z</published>
    <updated>2022-05-14T09:54:08.258Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring练习"><a href="#Spring练习" class="headerlink" title="Spring练习"></a>Spring练习</h1><h2 id="01-Spring练习-环境搭建步骤分析-理解"><a href="#01-Spring练习-环境搭建步骤分析-理解" class="headerlink" title="01-Spring练习-环境搭建步骤分析(理解)"></a>01-Spring练习-环境搭建步骤分析(理解)</h2><p>案例环境搭建步骤：</p><p>①创建工程（Project&amp;Module）</p><p>②导入静态页面（见资料jsp页面）</p><p>③导入需要坐标（见资料中的pom.xml）</p><p>④创建包结构（controller、service、dao、domain、utils）</p><p>⑤导入数据库脚本（见资料test.sql）</p><p>⑥创建POJO类（见资料User.java和Role.java）</p><p>创建配置文件（applicationContext.xml,spring-mvc.xml,jdbc.properties,log4j.properties）</p><h3 id="02-Spring练习-环境搭建实现1-应用"><a href="#02-Spring练习-环境搭建实现1-应用" class="headerlink" title="02-Spring练习-环境搭建实现1(应用)"></a>02-Spring练习-环境搭建实现1(应用)</h3><p>创建工程,导入jsp，添加项目依赖</p><p>创建包结构，导入数据库脚本，导入POJO</p><h3 id="03-Spring练习-环境搭建实现2-应用"><a href="#03-Spring练习-环境搭建实现2-应用" class="headerlink" title="03-Spring练习-环境搭建实现2(应用)"></a>03-Spring练习-环境搭建实现2(应用)</h3><p>创建Spring的核心配置文件applicationContext.xml</p><p>创建SpringMVC核心配置文件spring-mvc.xml</p><p>创建数据库配置文件jdbc.properties</p><p>拷贝日志配置文件log4j.properties</p><p>配置web.xml如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--全局的初始化参数--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Spring的监听器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--SpringMVC的前端控制器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="04-Spring练习-环境搭建实现3-应用"><a href="#04-Spring练习-环境搭建实现3-应用" class="headerlink" title="04-Spring练习-环境搭建实现3(应用)"></a>04-Spring练习-环境搭建实现3(应用)</h3><p>配置springm-mvc.xml：注解驱动，视图解析器，静态资源的开放</p><p>配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--1、mvc注解驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--2、配置视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/pages/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--3、静态资源权限开放--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="05-Spring练习-环境搭建实现4-应用"><a href="#05-Spring练习-环境搭建实现4-应用" class="headerlink" title="05-Spring练习-环境搭建实现4(应用)"></a>05-Spring练习-环境搭建实现4(应用)</h3><p>配置applicationContext.xml：加载propertiest,配置数据源对象，配置JdbcTemplate对象</p><p>配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--1、加载jdbc.properties--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--2、配置数据源对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--3、配置JdbcTemplate对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="06-Spring练习-用户表和角色表的分析-理解"><a href="#06-Spring练习-用户表和角色表的分析-理解" class="headerlink" title="06-Spring练习-用户表和角色表的分析(理解)"></a>06-Spring练习-用户表和角色表的分析(理解)</h3><p>分析用户和角色在数据库设计中的表关系：多对多关系</p><h3 id="07-Spring练习-角色列表展示分析-理解"><a href="#07-Spring练习-角色列表展示分析-理解" class="headerlink" title="07-Spring练习-角色列表展示分析(理解)"></a>07-Spring练习-角色列表展示分析(理解)</h3><p>需求：角色列表展示，</p><p>完成该功能的思路和步骤为：</p><p>①点击角色管理菜单发送请求到服务器端（修改角色管理菜单的url地址）</p><p>②创建RoleController和list()方法</p><p>③创建RoleService和list()方法</p><p>④创建RoleDao和findAll()方法</p><p>⑤使用JdbcTemplate完成查询操作</p><p>⑥将查询数据存储到modelAndView中</p><p>⑦转发到role-list.jsp页面进行展示</p><h3 id="08-Spring练习-角色列表展示-controller层实现-应用"><a href="#08-Spring练习-角色列表展示-controller层实现-应用" class="headerlink" title="08-Spring练习-角色列表展示-controller层实现(应用)"></a>08-Spring练习-角色列表展示-controller层实现(应用)</h3><p>1：修改左侧菜单链接地址</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=<span class="string">&quot;treeview-menu&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;li&gt;&lt;a</span><br><span class="line">href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/user/list&quot;</span>&gt; &lt;i</span><br><span class="line">class=<span class="string">&quot;fa fa-circle-o&quot;</span>&gt;&lt;/i&gt; 用户管理</span><br><span class="line">&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;a</span><br><span class="line">href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/role/list&quot;</span>&gt; &lt;i</span><br><span class="line">class=<span class="string">&quot;fa fa-circle-o&quot;</span>&gt;&lt;/i&gt; 角色管理</span><br><span class="line">&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;a</span><br><span class="line">href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/pages/syslog-list.jsp&quot;</span>&gt; &lt;i</span><br><span class="line">class=<span class="string">&quot;fa fa-circle-o&quot;</span>&gt;&lt;/i&gt; 访问日志</span><br><span class="line">&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>Controller层代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/role&quot;)</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RoleController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RoleService roleService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">ModelAndView</span> <span class="variable">modelAndView</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">        List&lt;Role&gt; roleList = roleService.list();</span><br><span class="line">        <span class="comment">//设置模型</span></span><br><span class="line">        modelAndView.addObject(<span class="string">&quot;roleList&quot;</span>,roleList);</span><br><span class="line">        <span class="comment">//设置视图</span></span><br><span class="line">        modelAndView.setViewName(<span class="string">&quot;role-list&quot;</span>);</span><br><span class="line">        System.out.println(roleList);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="09-Spring练习-角色列表展示-service和dao层实现-应用"><a href="#09-Spring练习-角色列表展示-service和dao层实现-应用" class="headerlink" title="09-Spring练习-角色列表展示-service和dao层实现(应用)"></a>09-Spring练习-角色列表展示-service和dao层实现(应用)</h3><p>service层代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RoleServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">RoleService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RoleDao roleDao;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRoleDao</span><span class="params">(RoleDao roleDao)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.roleDao = roleDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Role&gt; <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Role&gt; roleList = roleDao.findAll();</span><br><span class="line">        <span class="keyword">return</span> roleList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dao层代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RoleDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">RoleDao</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setJdbcTemplate</span><span class="params">(JdbcTemplate jdbcTemplate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.jdbcTemplate = jdbcTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Role&gt; <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Role&gt; roleList = jdbcTemplate.query(<span class="string">&quot;select * from sys_role&quot;</span>, <span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;Role&gt;(Role.class));</span><br><span class="line">        <span class="keyword">return</span> roleList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-Spring练习-角色列表展示-配置实现-应用"><a href="#10-Spring练习-角色列表展示-配置实现-应用" class="headerlink" title="10-Spring练习-角色列表展示-配置实现(应用)"></a>10-Spring练习-角色列表展示-配置实现(应用)</h3><p>配置spring-mvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--4、组件扫描  扫描Controller--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.itheima.controller&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>配置applicationContext.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置RoleService--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;roleService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.service.impl.RoleServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;roleDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;roleDao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置RoleDao--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;roleDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.dao.impl.RoleDaoImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;jdbcTemplate&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="11-Spring练习-角色列表展示-页面展示-应用"><a href="#11-Spring练习-角色列表展示-页面展示-应用" class="headerlink" title="11-Spring练习-角色列表展示-页面展示(应用)"></a>11-Spring练习-角色列表展示-页面展示(应用)</h3><p>添加命名空间</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br></pre></td></tr></table></figure><p>在role-list.jsp中将数据取出来并展示,核心代码如下：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:forEach items=<span class="string">&quot;$&#123;roleList&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;role&quot;</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;&lt;input name=<span class="string">&quot;ids&quot;</span> type=<span class="string">&quot;checkbox&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;$&#123;role.id&#125;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;$&#123;role.roleName&#125;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;$&#123;role.roleDesc&#125;&lt;/td&gt;</span><br><span class="line">&lt;td class=<span class="string">&quot;text-center&quot;</span>&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;javascript:void(0);&quot;</span> class=<span class="string">&quot;btn bg-olive btn-xs&quot;</span>&gt;删除&lt;/a&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure><h3 id="12-Spring练习-角色的添加操作-应用"><a href="#12-Spring练习-角色的添加操作-应用" class="headerlink" title="12-Spring练习-角色的添加操作(应用)"></a>12-Spring练习-角色的添加操作(应用)</h3><p>需求：添加角色</p><p>操作步骤如下：</p><p>①点击列表页面新建按钮跳转到角色添加页面</p><p>②输入角色信息，点击保存按钮，表单数据提交服务器</p><p>③编写RoleController的save()方法</p><p>④编写RoleService的save()方法</p><p>⑤编写RoleDao的save()方法</p><p>⑥使用JdbcTemplate保存Role数据到sys_role</p><p>⑦跳转回角色列表页面</p><p>controller代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">save</span><span class="params">(Role role)</span>&#123;</span><br><span class="line">        roleService.save(role);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/role/list&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>service代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Role role)</span> &#123;</span><br><span class="line">        roleDao.save(role);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>dao代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Role role)</span> &#123;</span><br><span class="line">        jdbcTemplate.update(<span class="string">&quot;insert into sys_role values(?,?,?)&quot;</span>,<span class="literal">null</span>,role.getRoleName(),role.getRoleDesc());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>为了解决<strong>post</strong>提交中文乱码问题，需要在web.xml中配置全局乱码过滤器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--解决乱码的过滤器--&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试，完成该功能。</p><h3 id="13-Spring练习-用户列表展示1-应用"><a href="#13-Spring练习-用户列表展示1-应用" class="headerlink" title="13-Spring练习-用户列表展示1(应用)"></a>13-Spring练习-用户列表展示1(应用)</h3><p>需求：查询用户列表</p><p>完成该功能的操作步骤：</p><p>①点击用户管理菜单发送请求到服务器端（修改用户管理菜单的url地址）</p><p>②创建UserController和list()方法</p><p>③创建UserService和list()方法</p><p>④创建UserDao和findAll()方法</p><p>⑤使用JdbcTemplate完成查询操作</p><p>⑥将查询数据存储到modelAndView中</p><p>⑦转发到user-list.jsp页面进行展示</p><p>跟查询角色列表一样，查询用户列表，创建UserController,UserService,UserDao,User实体等结构，编写各层代码并配置</p><p>用户列表Controller,service,dao层代码如下：</p><p>controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">        List&lt;User&gt; userList = userService.list();</span><br><span class="line">        <span class="type">ModelAndView</span> <span class="variable">modelAndView</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">        modelAndView.addObject(<span class="string">&quot;userList&quot;</span>,userList);</span><br><span class="line">        modelAndView.setViewName(<span class="string">&quot;user-list&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>service:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;User&gt; userList = userDao.findAll();</span><br><span class="line">        <span class="comment">//封装userList中的每一个User的roles数据</span></span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>dao:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;User&gt; userList = jdbcTemplate.query(<span class="string">&quot;select * from sys_user&quot;</span>, <span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;User&gt;(User.class));</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="14-Spring练习-用户列表展示2-应用"><a href="#14-Spring练习-用户列表展示2-应用" class="headerlink" title="14-Spring练习-用户列表展示2(应用)"></a>14-Spring练习-用户列表展示2(应用)</h3><p>查询用户的时候关联查询出该用户所具有的所有角色信息,需要完善查询用户的service层代码</p><p>1，在角色的dao中添加方法，根据用户id查询角色列表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在角色dao中根据用户id查询用户具有的角色信息</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> List&lt;Role&gt; <span class="title function_">findRoleByUserId</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        List&lt;Role&gt; roles = jdbcTemplate.query(<span class="string">&quot;select * from sys_user_role ur,sys_role r where ur.roleId=r.id and ur.userId=?&quot;</span>, <span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;Role&gt;(Role.class), id);</span><br><span class="line">        <span class="keyword">return</span> roles;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>完善userservcie层代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在查询用户的service中关联查询用户具有的角色</span></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;User&gt; userList = userDao.findAll();</span><br><span class="line">        <span class="comment">//封装userList中的每一个User的roles数据</span></span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            <span class="comment">//获得user的id</span></span><br><span class="line">            <span class="type">Long</span> <span class="variable">id</span> <span class="operator">=</span> user.getId();</span><br><span class="line">            <span class="comment">//将id作为参数 查询当前userId对应的Role集合数据</span></span><br><span class="line">            List&lt;Role&gt; roles = roleDao.findRoleByUserId(id);</span><br><span class="line">            user.setRoles(roles);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>查询用户的时候关联查询出该用户所具有的所有角色信息，前端jsp页面核心代码</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:forEach items=<span class="string">&quot;$&#123;userList&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;user&quot;</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;&lt;input name=<span class="string">&quot;ids&quot;</span> type=<span class="string">&quot;checkbox&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;$&#123;user.id&#125;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;$&#123;user.username&#125;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;$&#123;user.email&#125;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;$&#123;user.phoneNum&#125;&lt;/td&gt;</span><br><span class="line">&lt;td class=<span class="string">&quot;text-center&quot;</span>&gt;</span><br><span class="line">&lt;c:forEach items=<span class="string">&quot;$&#123;user.roles&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;role&quot;</span>&gt;</span><br><span class="line">&amp;nbsp;&amp;nbsp;$&#123;role.roleName&#125;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td class=<span class="string">&quot;text-center&quot;</span>&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;javascript:void(0);&quot;</span> onclick=<span class="string">&quot;delUser(&#x27;$&#123;user.id&#125;&#x27;)&quot;</span> class=<span class="string">&quot;btn bg-olive btn-xs&quot;</span>&gt;删除&lt;/a&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure><h3 id="15-Spring练习-用户添加操作-添加页面展示-应用"><a href="#15-Spring练习-用户添加操作-添加页面展示-应用" class="headerlink" title="15-Spring练习-用户添加操作-添加页面展示(应用)"></a>15-Spring练习-用户添加操作-添加页面展示(应用)</h3><p>需求：添加用户</p><p>新建用户时，点击新建按钮先去到添加用户的页面user-add.jsp,在添加用户页面需要展示可供选择的角色信息，因此来到添加页面时需要查询所有的角色信息并展示</p><p>去到user-add.jsp页面时先查询所有角色信息的controller代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/saveUI&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">saveUI</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">ModelAndView</span> <span class="variable">modelAndView</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">        List&lt;Role&gt; roleList = roleService.list();</span><br><span class="line">        modelAndView.addObject(<span class="string">&quot;roleList&quot;</span>,roleList);</span><br><span class="line">        modelAndView.setViewName(<span class="string">&quot;user-add&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>因为查询所有角色信息的service层和dao层代码在之前角色列表展示功能的时候已经写了，因此只需调用即可，</p><p>在user-add.jsp页面展示所有角色信息的核心代码</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;col-md-10 data&quot;</span>&gt;</span><br><span class="line">&lt;c:forEach items=<span class="string">&quot;$&#123;roleList&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;role&quot;</span>&gt;</span><br><span class="line">&lt;input class=<span class="string">&quot;&quot;</span> type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;roleIds&quot;</span> value=<span class="string">&quot;$&#123;role.id&#125;&quot;</span>&gt;$&#123;role.roleName&#125;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="16-Spring练习-用户添加操作-添加数据到数据库-应用"><a href="#16-Spring练习-用户添加操作-添加数据到数据库-应用" class="headerlink" title="16-Spring练习-用户添加操作-添加数据到数据库(应用)"></a>16-Spring练习-用户添加操作-添加数据到数据库(应用)</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Spring练习&quot;&gt;&lt;a href=&quot;#Spring练习&quot; class=&quot;headerlink&quot; title=&quot;Spring练习&quot;&gt;&lt;/a&gt;Spring练习&lt;/h1&gt;&lt;h2 id=&quot;01-Spring练习-环境搭建步骤分析-理解&quot;&gt;&lt;a href=&quot;#01-Spr</summary>
      
    
    
    
    
    <category term="Java-Spring" scheme="http://example.com/tags/Java-Spring/"/>
    
  </entry>
  
</feed>
